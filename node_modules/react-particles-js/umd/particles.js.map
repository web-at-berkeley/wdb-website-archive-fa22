{"version":3,"sources":["webpack://Particles/webpack/universalModuleDefinition","webpack://Particles/webpack/bootstrap","webpack://Particles/./node_modules/lodash/_DataView.js","webpack://Particles/./node_modules/lodash/_Hash.js","webpack://Particles/./node_modules/lodash/_ListCache.js","webpack://Particles/./node_modules/lodash/_Map.js","webpack://Particles/./node_modules/lodash/_MapCache.js","webpack://Particles/./node_modules/lodash/_Promise.js","webpack://Particles/./node_modules/lodash/_Set.js","webpack://Particles/./node_modules/lodash/_SetCache.js","webpack://Particles/./node_modules/lodash/_Stack.js","webpack://Particles/./node_modules/lodash/_Symbol.js","webpack://Particles/./node_modules/lodash/_Uint8Array.js","webpack://Particles/./node_modules/lodash/_WeakMap.js","webpack://Particles/./node_modules/lodash/_arrayFilter.js","webpack://Particles/./node_modules/lodash/_arrayLikeKeys.js","webpack://Particles/./node_modules/lodash/_arrayPush.js","webpack://Particles/./node_modules/lodash/_arraySome.js","webpack://Particles/./node_modules/lodash/_assocIndexOf.js","webpack://Particles/./node_modules/lodash/_baseGetAllKeys.js","webpack://Particles/./node_modules/lodash/_baseGetTag.js","webpack://Particles/./node_modules/lodash/_baseIsArguments.js","webpack://Particles/./node_modules/lodash/_baseIsEqual.js","webpack://Particles/./node_modules/lodash/_baseIsEqualDeep.js","webpack://Particles/./node_modules/lodash/_baseIsNative.js","webpack://Particles/./node_modules/lodash/_baseIsTypedArray.js","webpack://Particles/./node_modules/lodash/_baseKeys.js","webpack://Particles/./node_modules/lodash/_baseTimes.js","webpack://Particles/./node_modules/lodash/_baseUnary.js","webpack://Particles/./node_modules/lodash/_cacheHas.js","webpack://Particles/./node_modules/lodash/_coreJsData.js","webpack://Particles/./node_modules/lodash/_equalArrays.js","webpack://Particles/./node_modules/lodash/_equalByTag.js","webpack://Particles/./node_modules/lodash/_equalObjects.js","webpack://Particles/./node_modules/lodash/_freeGlobal.js","webpack://Particles/./node_modules/lodash/_getAllKeys.js","webpack://Particles/./node_modules/lodash/_getMapData.js","webpack://Particles/./node_modules/lodash/_getNative.js","webpack://Particles/./node_modules/lodash/_getRawTag.js","webpack://Particles/./node_modules/lodash/_getSymbols.js","webpack://Particles/./node_modules/lodash/_getTag.js","webpack://Particles/./node_modules/lodash/_getValue.js","webpack://Particles/./node_modules/lodash/_hashClear.js","webpack://Particles/./node_modules/lodash/_hashDelete.js","webpack://Particles/./node_modules/lodash/_hashGet.js","webpack://Particles/./node_modules/lodash/_hashHas.js","webpack://Particles/./node_modules/lodash/_hashSet.js","webpack://Particles/./node_modules/lodash/_isIndex.js","webpack://Particles/./node_modules/lodash/_isKeyable.js","webpack://Particles/./node_modules/lodash/_isMasked.js","webpack://Particles/./node_modules/lodash/_isPrototype.js","webpack://Particles/./node_modules/lodash/_listCacheClear.js","webpack://Particles/./node_modules/lodash/_listCacheDelete.js","webpack://Particles/./node_modules/lodash/_listCacheGet.js","webpack://Particles/./node_modules/lodash/_listCacheHas.js","webpack://Particles/./node_modules/lodash/_listCacheSet.js","webpack://Particles/./node_modules/lodash/_mapCacheClear.js","webpack://Particles/./node_modules/lodash/_mapCacheDelete.js","webpack://Particles/./node_modules/lodash/_mapCacheGet.js","webpack://Particles/./node_modules/lodash/_mapCacheHas.js","webpack://Particles/./node_modules/lodash/_mapCacheSet.js","webpack://Particles/./node_modules/lodash/_mapToArray.js","webpack://Particles/./node_modules/lodash/_nativeCreate.js","webpack://Particles/./node_modules/lodash/_nativeKeys.js","webpack://Particles/./node_modules/lodash/_nodeUtil.js","webpack://Particles/./node_modules/lodash/_objectToString.js","webpack://Particles/./node_modules/lodash/_overArg.js","webpack://Particles/./node_modules/lodash/_root.js","webpack://Particles/./node_modules/lodash/_setCacheAdd.js","webpack://Particles/./node_modules/lodash/_setCacheHas.js","webpack://Particles/./node_modules/lodash/_setToArray.js","webpack://Particles/./node_modules/lodash/_stackClear.js","webpack://Particles/./node_modules/lodash/_stackDelete.js","webpack://Particles/./node_modules/lodash/_stackGet.js","webpack://Particles/./node_modules/lodash/_stackHas.js","webpack://Particles/./node_modules/lodash/_stackSet.js","webpack://Particles/./node_modules/lodash/_toSource.js","webpack://Particles/./node_modules/lodash/eq.js","webpack://Particles/./node_modules/lodash/isArguments.js","webpack://Particles/./node_modules/lodash/isArray.js","webpack://Particles/./node_modules/lodash/isArrayLike.js","webpack://Particles/./node_modules/lodash/isBuffer.js","webpack://Particles/./node_modules/lodash/isEqual.js","webpack://Particles/./node_modules/lodash/isFunction.js","webpack://Particles/./node_modules/lodash/isLength.js","webpack://Particles/./node_modules/lodash/isObject.js","webpack://Particles/./node_modules/lodash/isObjectLike.js","webpack://Particles/./node_modules/lodash/isTypedArray.js","webpack://Particles/./node_modules/lodash/keys.js","webpack://Particles/./node_modules/lodash/stubArray.js","webpack://Particles/./node_modules/lodash/stubFalse.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Canvas.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Container.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/FrameManager.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Loader.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Background/Background.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/BackgroundMask/BackgroundMask.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/BackgroundMask/BackgroundMaskCover.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Interactivity/Events/ClickEvent.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Interactivity/Events/DivEvent.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Interactivity/Events/Events.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Interactivity/Events/HoverEvent.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Interactivity/Events/Parallax.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Interactivity/Interactivity.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Interactivity/Modes/Bubble.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Interactivity/Modes/Connect.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Interactivity/Modes/ConnectLineLinked.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Interactivity/Modes/Grab.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Interactivity/Modes/GrabLineLinked.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Interactivity/Modes/Modes.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Interactivity/Modes/Push.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Interactivity/Modes/Remove.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Interactivity/Modes/Repulse.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Interactivity/Modes/Slow.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Options.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/Attract.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/Color.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/Density.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/LineLinked.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/LineLinkedShadow.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/Move.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/Opacity.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/OpacityAnimation.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/Particles.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/ParticlesNumber.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/RandomOpacity.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/RandomSize.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/Rotate.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/RotateAnimation.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/Shadow.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/Shape/CharacterShape.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/Shape/ImageShape.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/Shape/PolygonShape.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/Shape/Shape.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/Size.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/SizeAnimation.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/Stroke.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/Particles/Trail.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/PolygonMask/Draw.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/PolygonMask/Move.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/PolygonMask/PolygonInline.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/PolygonMask/PolygonMask.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Options/PolygonMask/PolygonMaskDrawStroke.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Particle.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Particle/Attracter.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Particle/Bubbler.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Particle/Collider.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Particle/Connecter.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Particle/Drawer.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Particle/Grabber.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Particle/InteractionManager.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Particle/Linker.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Particle/Mover.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Particle/Repulser.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Particle/Updater.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Particles.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/PolygonMask.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Retina.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/ShapeDrawers/CircleDrawer.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/ShapeDrawers/ImageDrawer.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/ShapeDrawers/LineDrawer.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/ShapeDrawers/PolygonDrawer.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/ShapeDrawers/PolygonDrawerBase.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/ShapeDrawers/SquareDrawer.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/ShapeDrawers/StarDrawer.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/ShapeDrawers/TextDrawer.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/ShapeDrawers/TriangleDrawer.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Utils/CanvasUtils.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Utils/ColorUtils.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Utils/Constants.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Utils/EventListeners.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Utils/Presets.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Utils/ShapeUtils.js","webpack://Particles/./node_modules/tsparticles/dist/Classes/Utils/Utils.js","webpack://Particles/./node_modules/tsparticles/dist/Enums/InteractivityDetect.js","webpack://Particles/./node_modules/tsparticles/dist/Enums/Modes/ClickMode.js","webpack://Particles/./node_modules/tsparticles/dist/Enums/Modes/DivMode.js","webpack://Particles/./node_modules/tsparticles/dist/Enums/Modes/HoverMode.js","webpack://Particles/./node_modules/tsparticles/dist/Enums/MoveDirection.js","webpack://Particles/./node_modules/tsparticles/dist/Enums/OutMode.js","webpack://Particles/./node_modules/tsparticles/dist/Enums/PolygonMaskInlineArrangement.js","webpack://Particles/./node_modules/tsparticles/dist/Enums/PolygonMaskMoveType.js","webpack://Particles/./node_modules/tsparticles/dist/Enums/PolygonMaskType.js","webpack://Particles/./node_modules/tsparticles/dist/Enums/ProcessBubbleType.js","webpack://Particles/./node_modules/tsparticles/dist/Enums/RotateDirection.js","webpack://Particles/./node_modules/tsparticles/dist/Enums/ShapeType.js","webpack://Particles/./node_modules/tsparticles/dist/index.js","webpack://Particles/(webpack)/buildin/global.js","webpack://Particles/(webpack)/buildin/module.js","webpack://Particles/./src/DefaultOptions.ts","webpack://Particles/./src/Particles.tsx","webpack://Particles/./src/index.ts","webpack://Particles/external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"React\"}"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,WAAW,mBAAO,CAAC,+CAAS;;AAE5B;AACA;;AAEA;;;;;;;;;;;;ACNA,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,cAAc,mBAAO,CAAC,qDAAY;AAClC,cAAc,mBAAO,CAAC,qDAAY;AAClC,cAAc,mBAAO,CAAC,qDAAY;;AAElC;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC/BA,qBAAqB,mBAAO,CAAC,mEAAmB;AAChD,sBAAsB,mBAAO,CAAC,qEAAoB;AAClD,mBAAmB,mBAAO,CAAC,+DAAiB;AAC5C,mBAAmB,mBAAO,CAAC,+DAAiB;AAC5C,mBAAmB,mBAAO,CAAC,+DAAiB;;AAE5C;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC/BA,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,WAAW,mBAAO,CAAC,+CAAS;;AAE5B;AACA;;AAEA;;;;;;;;;;;;ACNA,oBAAoB,mBAAO,CAAC,iEAAkB;AAC9C,qBAAqB,mBAAO,CAAC,mEAAmB;AAChD,kBAAkB,mBAAO,CAAC,6DAAgB;AAC1C,kBAAkB,mBAAO,CAAC,6DAAgB;AAC1C,kBAAkB,mBAAO,CAAC,6DAAgB;;AAE1C;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC/BA,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,WAAW,mBAAO,CAAC,+CAAS;;AAE5B;AACA;;AAEA;;;;;;;;;;;;ACNA,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,WAAW,mBAAO,CAAC,+CAAS;;AAE5B;AACA;;AAEA;;;;;;;;;;;;ACNA,eAAe,mBAAO,CAAC,uDAAa;AACpC,kBAAkB,mBAAO,CAAC,6DAAgB;AAC1C,kBAAkB,mBAAO,CAAC,6DAAgB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;AC1BA,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,kBAAkB,mBAAO,CAAC,6DAAgB;AAC1C,eAAe,mBAAO,CAAC,uDAAa;AACpC,eAAe,mBAAO,CAAC,uDAAa;AACpC,eAAe,mBAAO,CAAC,uDAAa;;AAEpC;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC1BA,WAAW,mBAAO,CAAC,+CAAS;;AAE5B;AACA;;AAEA;;;;;;;;;;;;ACLA,WAAW,mBAAO,CAAC,+CAAS;;AAE5B;AACA;;AAEA;;;;;;;;;;;;ACLA,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,WAAW,mBAAO,CAAC,+CAAS;;AAE5B;AACA;;AAEA;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACxBA,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,kBAAkB,mBAAO,CAAC,2DAAe;AACzC,cAAc,mBAAO,CAAC,mDAAW;AACjC,eAAe,mBAAO,CAAC,qDAAY;AACnC,cAAc,mBAAO,CAAC,qDAAY;AAClC,mBAAmB,mBAAO,CAAC,6DAAgB;;AAE3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACtBA,SAAS,mBAAO,CAAC,yCAAM;;AAEvB;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpBA,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,cAAc,mBAAO,CAAC,mDAAW;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACnBA,aAAa,mBAAO,CAAC,mDAAW;AAChC,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,qBAAqB,mBAAO,CAAC,mEAAmB;;AAEhD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC3BA,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,mBAAmB,mBAAO,CAAC,6DAAgB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACjBA,sBAAsB,mBAAO,CAAC,qEAAoB;AAClD,mBAAmB,mBAAO,CAAC,6DAAgB;;AAE3C;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC3BA,YAAY,mBAAO,CAAC,iDAAU;AAC9B,kBAAkB,mBAAO,CAAC,6DAAgB;AAC1C,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,mBAAmB,mBAAO,CAAC,+DAAiB;AAC5C,aAAa,mBAAO,CAAC,mDAAW;AAChC,cAAc,mBAAO,CAAC,mDAAW;AACjC,eAAe,mBAAO,CAAC,qDAAY;AACnC,mBAAmB,mBAAO,CAAC,6DAAgB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AClFA,iBAAiB,mBAAO,CAAC,yDAAc;AACvC,eAAe,mBAAO,CAAC,uDAAa;AACpC,eAAe,mBAAO,CAAC,qDAAY;AACnC,eAAe,mBAAO,CAAC,uDAAa;;AAEpC;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC9CA,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,eAAe,mBAAO,CAAC,qDAAY;AACnC,mBAAmB,mBAAO,CAAC,6DAAgB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC3DA,kBAAkB,mBAAO,CAAC,6DAAgB;AAC1C,iBAAiB,mBAAO,CAAC,2DAAe;;AAExC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACZA,WAAW,mBAAO,CAAC,+CAAS;;AAE5B;AACA;;AAEA;;;;;;;;;;;;ACLA,eAAe,mBAAO,CAAC,uDAAa;AACpC,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,eAAe,mBAAO,CAAC,uDAAa;;AAEpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AClFA,aAAa,mBAAO,CAAC,mDAAW;AAChC,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,SAAS,mBAAO,CAAC,yCAAM;AACvB,kBAAkB,mBAAO,CAAC,6DAAgB;AAC1C,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,iBAAiB,mBAAO,CAAC,2DAAe;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC/GA,iBAAiB,mBAAO,CAAC,2DAAe;;AAExC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACxFA;AACA;;AAEA;;;;;;;;;;;;;ACHA,qBAAqB,mBAAO,CAAC,mEAAmB;AAChD,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,WAAW,mBAAO,CAAC,6CAAQ;;AAE3B;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACfA,gBAAgB,mBAAO,CAAC,yDAAc;;AAEtC;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACjBA,mBAAmB,mBAAO,CAAC,+DAAiB;AAC5C,eAAe,mBAAO,CAAC,uDAAa;;AAEpC;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AChBA,aAAa,mBAAO,CAAC,mDAAW;;AAEhC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC7CA,kBAAkB,mBAAO,CAAC,6DAAgB;AAC1C,gBAAgB,mBAAO,CAAC,uDAAa;;AAErC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;;;;;;AC7BA,eAAe,mBAAO,CAAC,uDAAa;AACpC,UAAU,mBAAO,CAAC,6CAAQ;AAC1B,cAAc,mBAAO,CAAC,qDAAY;AAClC,UAAU,mBAAO,CAAC,6CAAQ;AAC1B,cAAc,mBAAO,CAAC,qDAAY;AAClC,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,eAAe,mBAAO,CAAC,uDAAa;;AAEpC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACZA,mBAAmB,mBAAO,CAAC,+DAAiB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AChBA,mBAAmB,mBAAO,CAAC,+DAAiB;;AAE5C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC7BA,mBAAmB,mBAAO,CAAC,+DAAiB;;AAE5C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACtBA,mBAAmB,mBAAO,CAAC,+DAAiB;;AAE5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACtBA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACdA,iBAAiB,mBAAO,CAAC,2DAAe;;AAExC;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACnBA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACZA,mBAAmB,mBAAO,CAAC,+DAAiB;;AAE5C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AClCA,mBAAmB,mBAAO,CAAC,+DAAiB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;AClBA,mBAAmB,mBAAO,CAAC,+DAAiB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACfA,mBAAmB,mBAAO,CAAC,+DAAiB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACzBA,WAAW,mBAAO,CAAC,+CAAS;AAC5B,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,UAAU,mBAAO,CAAC,6CAAQ;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpBA,iBAAiB,mBAAO,CAAC,2DAAe;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACjBA,iBAAiB,mBAAO,CAAC,2DAAe;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACfA,iBAAiB,mBAAO,CAAC,2DAAe;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACfA,iBAAiB,mBAAO,CAAC,2DAAe;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;;;;;ACjBA,gBAAgB,mBAAO,CAAC,yDAAc;;AAEtC;AACA;;AAEA;;;;;;;;;;;;ACLA,cAAc,mBAAO,CAAC,qDAAY;;AAElC;AACA;;AAEA;;;;;;;;;;;;ACLA,+DAAiB,mBAAO,CAAC,2DAAe;;AAExC;AACA,kBAAkB,KAA0B;;AAE5C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,CAAC;;AAED;;;;;;;;;;;;;AC7BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACdA,iBAAiB,mBAAO,CAAC,2DAAe;;AAExC;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACRA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;;;;;ACjBA,gBAAgB,mBAAO,CAAC,yDAAc;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACbA,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,UAAU,mBAAO,CAAC,6CAAQ;AAC1B,eAAe,mBAAO,CAAC,uDAAa;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACjCA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,iBAAiB;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpCA,sBAAsB,mBAAO,CAAC,qEAAoB;AAClD,mBAAmB,mBAAO,CAAC,6DAAgB;;AAE3C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA,6BAA6B,kBAAkB,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA,8CAA8C,kBAAkB,EAAE;AAClE;AACA;AACA;;AAEA;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACzBA,iBAAiB,mBAAO,CAAC,yDAAc;AACvC,eAAe,mBAAO,CAAC,qDAAY;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AChCA,yDAAW,mBAAO,CAAC,+CAAS;AAC5B,gBAAgB,mBAAO,CAAC,uDAAa;;AAErC;AACA,kBAAkB,KAA0B;;AAE5C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACrCA,kBAAkB,mBAAO,CAAC,6DAAgB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,iBAAiB;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AClCA,iBAAiB,mBAAO,CAAC,2DAAe;AACxC,eAAe,mBAAO,CAAC,qDAAY;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC5BA,uBAAuB,mBAAO,CAAC,uEAAqB;AACpD,gBAAgB,mBAAO,CAAC,yDAAc;AACtC,eAAe,mBAAO,CAAC,uDAAa;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC1BA,oBAAoB,mBAAO,CAAC,iEAAkB;AAC9C,eAAe,mBAAO,CAAC,uDAAa;AACpC,kBAAkB,mBAAO,CAAC,2DAAe;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACR;AACY;AACF;AACzC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4DAAU;AACpC;AACA;AACA;AACA,YAAY,4DAAU;AACtB,YAAY,4DAAU;AACtB;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8DAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,4DAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4DAAU;AACrC;AACA;AACA,YAAY,8DAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8DAAW;AAC3B;AACA;AACA,gBAAgB,8DAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,0DAAS;AAC7D,wBAAwB,4DAAU;AAClC;AACA;AACA;AACA;AACA;AACA,8BAA8B,kDAAK;AACnC,8BAA8B,kDAAK;AACnC,8BAA8B,kDAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8DAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8DAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,4DAAU,yBAAyB,4DAAU;AACzF,yBAAyB,0DAAS;AAClC,wBAAwB,4DAAU;AAClC;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,mDAAmD,0DAAS;AAC5D,wBAAwB,4DAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8DAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4DAAU;AACnC;AACA;AACA;AACA;AACA,QAAQ,8DAAW;AACnB;AACA;AACA;AACA,YAAY,8DAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kDAAK;AACxB,mBAAmB,kDAAK;AACxB,mBAAmB,kDAAK;AACxB;AACA;AACA,uBAAuB,8DAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAU;AAC1B,gBAAgB,4DAAU;AAC1B;AACA,+CAA+C,4DAAU;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACkC;AACsB;AAChB;AACN;AACa;AACH;AACE;AACF;AACN;AACI;AACnC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,8CAAM;AAChC,0BAA0B,8CAAM;AAChC,6BAA6B,oDAAS;AACtC,2BAA2B,wDAAW;AACtC,0BAA0B,0DAAY;AACtC;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,2BAA2B,wDAAO;AAClC;AACA,8BAA8B,sDAAO;AACrC;AACA;AACA;AACA;AACA,kCAAkC,oEAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iEAAiE,iBAAiB;AAClF,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kDAAK,WAAW,0DAAS;AACzC,gBAAgB,kDAAK,WAAW,0DAAS;AACzC;AACA;AACA,8BAA8B,kDAAK;AACnC;AACA;AACA;AACA;AACA,0BAA0B,kDAAK;AAC/B;AACA;AACA,gBAAgB,kDAAK,WAAW,0DAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzMA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACwC;AACM;AACR;AACtC;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kDAAK;AAC3C,SAAS;AACT;AACA;AACA;AACA,gDAAgD,kDAAK;AACrD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,0DAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,0DAAS;AAClD;AACA;AACA;AACA;AACA;AACA,gCAAgC,oDAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,gBAAgB;AACnF;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,gBAAgB;AACnF;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChJA;AAAA;AAAA;AAA2C;AACpC;AACP;AACA;AACA;AACA;AACA,qCAAqC,sDAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChCA;AAAA;AAAA;AAA4D;AACrD;AACP;AACA,yBAAyB,wEAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAA2C;AACpC;AACP;AACA,yBAAyB,sDAAK;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACJ;AACI;AACnC;AACP;AACA,2BAA2B,sDAAU;AACrC,yBAAyB,kDAAQ;AACjC,2BAA2B,sDAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAsC;AAC/B;AACP;AACA;AACA;AACA,4BAA4B,kDAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClBA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;AAChC;AACH;AACqB;AACpD;AACP;AACA,yBAAyB,8EAAmB;AAC5C,0BAA0B,qDAAM;AAChC,yBAAyB,kDAAK;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,gEAAS;AAClE,sDAAsD,gEAAS;AAC/D;AACA;AACA,sDAAsD,gEAAS;AAC/D,0EAA0E,gEAAS;AACnF;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrCA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAwD;AACjD;AACP;AACA;AACA,8BAA8B,oEAAiB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAkD;AAC3C;AACP;AACA;AACA,8BAA8B,8DAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxBA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACE;AACN;AACI;AACJ;AACM;AACN;AACvB;AACP;AACA,0BAA0B,8CAAM;AAChC,2BAA2B,gDAAO;AAClC,wBAAwB,0CAAI;AAC5B,wBAAwB,0CAAI;AAC5B,0BAA0B,8CAAM;AAChC,2BAA2B,gDAAO;AAClC,wBAAwB,0CAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;AACZ;AACM;AACS;AACtB;AACU;AAC9C;AACP;AACA;AACA;AACA,iCAAiC,0EAAa;AAC9C,6BAA6B,8DAAS;AACtC,2BAA2B,oEAAW;AACtC,kCAAkC,6EAAc;AAChD;AACA,8BAA8B,iEAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sDAAO;AACrC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpEA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpCA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAsD;AACtB;AACzB;AACP;AACA;AACA,yBAAyB,4CAAK;AAC9B;AACA;AACA;AACA;AACA,0BAA0B,kEAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAgC;AACzB;AACP;AACA;AACA,yBAAyB,4CAAK;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACyB;AACZ;AACjB;AACzB;AACP;AACA,2BAA2B,gDAAO;AAClC;AACA,yBAAyB,kEAAa;AACtC;AACA,uBAAuB,sDAAO;AAC9B;AACA;AACA;AACA,yBAAyB,4CAAK;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1DA;AAAA;AAAA;AAAA;AAAsD;AACN;AACzC;AACP;AACA,6BAA6B,kEAAgB;AAC7C,0BAA0B,4DAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClCA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACU;AACZ;AACsB;AAChB;AACE;AACR;AACI;AACA;AACA;AAC3B;AACP;AACA,yBAAyB,4CAAK;AAC9B,8BAA8B,sDAAU;AACxC,wBAAwB,0CAAI;AAC5B,0BAA0B,gEAAe;AACzC,2BAA2B,gDAAO;AAClC,0BAA0B,8CAAM;AAChC,yBAAyB,kDAAK;AAC9B,wBAAwB,0CAAI;AAC5B,0BAA0B,8CAAM;AAChC,0BAA0B,8CAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4CAAK;AAC7C;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,yCAAyC,4CAAK;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,8CAAM;AAC9C;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,0CAA0C,8CAAM;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5EA;AAAA;AAAA;AAAoC;AAC7B;AACP;AACA,2BAA2B,gDAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1BA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAoD;AACa;AAC1D;AACP;AACA,6BAA6B,gEAAe;AAC5C,yBAAyB,sEAAe;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAgC;AACzB;AACP;AACA;AACA,yBAAyB,4CAAK;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtCA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjCA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACN;AACR;AACI;AACvC;AACP;AACA,6BAA6B,8DAAc;AAC3C,yBAAyB,sDAAU;AACnC,2BAA2B,0DAAY;AACvC,oBAAoB,0DAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,8DAAc;AACtD;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,6CAA6C,8DAAc;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,sDAAU;AAClD;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,yCAAyC,sDAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,0DAAY;AACpD;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,2CAA2C,0DAAY;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5FA;AAAA;AAAA;AAAA;AAAgD;AACN;AACnC;AACP;AACA,6BAA6B,4DAAa;AAC1C,0BAA0B,sDAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClCA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAgC;AACzB;AACP;AACA,yBAAyB,4CAAK;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAgC;AACzB;AACP;AACA;AACA;AACA,6BAA6B,4CAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAgE;AACzD;AACP;AACA;AACA,0BAA0B,4EAAqB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAyE;AAClE;AACP;AACA;AACA,oBAAoB,8EAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAA2F;AACpF;AACP;AACA,2BAA2B,gGAA4B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;AACnC;AACA;AACkB;AACzC;AACP;AACA,wBAAwB,0CAAI;AAC5B;AACA,0BAA0B,4DAAa;AACvC,wBAAwB,0CAAI;AAC5B;AACA,oBAAoB,sEAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,sEAAe;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAA2C;AACS;AAC7C;AACP;AACA,yBAAyB,sDAAK;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,4DAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACF;AACE;AACE;AACA;AACF;AACP;AACqB;AACV;AACkB;AACd;AACA;AACM;AACX;AACzC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,uEAAe;AACjE;AACA;AACA,uCAAuC,uEAAe;AACtD;AACA;AACA,uCAAuC,uEAAe;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,kDAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,sEAAe;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6DAAU,YAAY,kDAAK;AACpD;AACA;AACA,yBAAyB,6DAAU;AACnC;AACA;AACA;AACA;AACA,0CAA0C,kDAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kDAAK;AAC9B;AACA;AACA;AACA;AACA,2BAA2B,0DAAS;AACpC;AACA,0BAA0B,kDAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAS;AACpC;AACA,+BAA+B,kDAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,kDAAK;AAC/B;AACA;AACA;AACA;AACA;AACA,YAAY,6DAAU;AACtB,YAAY,6DAAU;AACtB;AACA,YAAY,6DAAU;AACtB,YAAY,6DAAU;AACtB,2BAA2B,0DAAS,wBAAwB,0DAAS;AACrE;AACA,iCAAiC,kDAAK;AACtC;AACA;AACA;AACA;AACA;AACA,iDAAiD,kDAAK;AACtD;AACA;AACA;AACA;AACA;AACA,0DAA0D,kDAAK;AAC/D;AACA;AACA;AACA,2BAA2B,yDAAO;AAClC,2BAA2B,yDAAO;AAClC,4BAA4B,2DAAQ;AACpC,0BAA0B,uDAAM;AAChC,2BAA2B,yDAAO;AAClC,6BAA6B,6DAAS;AACtC,sCAAsC,+EAAkB;AACxD;AACA;AACA,6BAA6B,kDAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAK,WAAW,iEAAS;AACrC;AACA;AACA,YAAY,kDAAK,WAAW,iEAAS;AACrC,mCAAmC,+BAA+B;AAClE;AACA;AACA;AACA;AACA,YAAY,kDAAK,WAAW,iEAAS,uBAAuB,kDAAK,WAAW,iEAAS;AACrF;AACA;AACA,YAAY,kDAAK,WAAW,iEAAS,wBAAwB,kDAAK,WAAW,iEAAS;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kDAAK;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvRA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkE;AAC3B;AACiB;AACA;AACT;AACxC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kDAAK,WAAW,gEAAS;AACrD;AACA;AACA,iCAAiC,kDAAK,WAAW,gEAAS;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,0EAAiB;AACtD;AACA;AACA,qCAAqC,0EAAiB;AACtD;AACA;AACA;AACA;AACA;AACA,iCAAiC,0EAAiB;AAClD;AACA;AACA,iCAAiC,0EAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0EAAiB;AAC9C;AACA;AACA,6BAA6B,0EAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E,0BAA0B,kDAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB,sBAAsB,0EAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB,sBAAsB,0EAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,kDAAK;AAC/B;AACA;AACA,iEAAiE,0DAAS;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,0DAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChLA;AAAA;AAAA;AAAuC;AAChC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kDAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClBA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAuC;AACQ;AACxC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,0DAAS;AAC/F,wEAAwE;AACxE,8BAA8B,kDAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACM;AACF;AAC/B;AACP;AACA;AACA,0BAA0B,8CAAM;AAChC,6BAA6B,oDAAS;AACtC,4BAA4B,kDAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAiD;AACV;AACQ;AACxC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kDAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAS;AAC3C;AACA,kEAAkE,4DAAU;AAC5E;AACA;AACA,kEAAkE,0DAAS;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4DAAU;AACtC,4BAA4B,4DAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AAAuC;AACiB;AACjD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kDAAK,WAAW,gEAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kDAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACA;AACV;AACP;AACa;AACL;AACxC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,0DAAS;AAC5E;AACA;AACA;AACA,+CAA+C,kDAAK,WAAW,gEAAS;AACxE;AACA;AACA,iCAAiC,kDAAK,WAAW,gEAAS;AAC1D;AACA;AACA,8DAA8D,kDAAK,WAAW,4DAAO;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kDAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,8BAA8B,kDAAK;AACnC;AACA;AACA;AACA;AACA;AACA,wBAAwB,sDAAO,uBAAuB,sDAAO,+BAA+B,sDAAO;AACnG;AACA;AACA;AACA;AACA,4BAA4B,sDAAO;AACnC;AACA;AACA,4BAA4B,sDAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sDAAO,uBAAuB,sDAAO,iCAAiC,sDAAO;AACrG;AACA;AACA;AACA;AACA,4BAA4B,sDAAO;AACnC;AACA;AACA;AACA;AACA,4BAA4B,sDAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACP;AACuB;AAC9B;AAC8B;AACvD;AACP;AACA;AACA;AACA,yBAAyB,4CAAK;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sEAAe;AACpC;AACA;AACA;AACA;AACA;AACA,qBAAqB,sEAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sDAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,sDAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,sDAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sDAAO;AAC/B,gBAAgB,kDAAK;AACrB;AACA;AACA;AACA;AACA,+BAA+B,kDAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sDAAO;AACxB,iBAAiB,sDAAO;AACxB,iBAAiB,sDAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,sEAAe;AAC9E,qCAAqC,sEAAe;AACpD;AACA;AACA;AACA;AACA,oEAAoE,sEAAe;AACnF;AACA,6BAA6B,kDAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sDAAO,uBAAuB,sDAAO;AACjE;AACA;AACA,iBAAiB;AACjB;AACA,4BAA4B,sDAAO,uBAAuB,sDAAO;AACjE;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5MA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACqB;AAC0B;AAC9E;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,sEAAe;AAC9E,oDAAoD,gGAA4B;AAChF,uDAAuD,gGAA4B;AACnF;AACA;AACA;AACA,2CAA2C,oCAAoC;AAC/E,qCAAqC,kDAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA,mCAAmC,uBAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA,uBAAuB,QAAQ;AAC/B,iCAAiC,kDAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AAC2D;AACrB;AAC+C;AAC/C;AAC/B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,sEAAe;AACpD,qCAAqC,sEAAe;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,qBAAqB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,sEAAe;AACpD;AACA;AACA,0CAA0C,sEAAe;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,sEAAe;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,sEAAe;AACpD;AACA,qBAAqB,gGAA4B;AACjD;AACA;AACA,qBAAqB,gGAA4B;AACjD;AACA;AACA,qBAAqB,gGAA4B;AACjD;AACA;AACA,qBAAqB,gGAA4B;AACjD,qBAAqB,gGAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,kDAAQ;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kDAAK;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;;;;;;;;;;;;AC3SA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnDA;AAAA;AAAO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAwD;AACjD,4BAA4B,oEAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;AAAA;AAAO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAwD;AACjD,yBAAyB,oEAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,MAAM,GAAG,OAAO,GAAG,KAAK,MAAM,KAAK;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAwD;AACjD,6BAA6B,oEAAiB;AACrD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAA0C;AACA;AACnC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAU;AACtB,YAAY,sDAAU;AACtB;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA,kCAAkC,sDAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAU;AACtB,YAAY,sDAAU;AACtB;AACA,kCAAkC,sDAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sDAAU;AAC5C;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAU;AACtB,YAAY,sDAAU;AACtB;AACA;AACA,kCAAkC,sDAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,sDAAU;AACvC,uDAAuD,sDAAU;AACjE,6BAA6B,sDAAU;AACvC;AACA;AACA;AACA;AACA,8BAA8B,sDAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sDAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sDAAU;AAC5C;AACA;AACA,QAAQ,sDAAU;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9IA;AAAA;AAAA;AAAA;AAAgC;AACQ;AACjC;AACP;AACA;AACA;AACA,gCAAgC,oDAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4CAAK;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB,IAAI,oBAAoB,IAAI,oBAAoB,IAAI,aAAa;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uCAAuC,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;;;;;;;;;;AC7IA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACc;AACR;AACtB;AACjC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,8EAAmB;AACnE;AACA;AACA,qDAAqD,8EAAmB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,oDAAS;AAC1D,iDAAiD,oDAAS;AAC1D,iDAAiD,oDAAS;AAC1D;AACA,qDAAqD,oDAAS;AAC9D;AACA,iDAAiD,oDAAS;AAC1D,iDAAiD,oDAAS;AAC1D;AACA;AACA,iDAAiD,oDAAS;AAC1D,iDAAiD,oDAAS;AAC1D;AACA;AACA,wCAAwC,oDAAS;AACjD;AACA;AACA,0CAA0C,oDAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,8EAAmB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,oDAAS;AAClD;AACA;AACA;AACA;AACA,yCAAyC,oDAAS;AAClD;AACA;AACA;AACA;AACA,+DAA+D,sEAAe;AAC9E,qCAAqC,sEAAe;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gEAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gEAAS;AAC9B;AACA;AACA,qBAAqB,gEAAS;AAC9B;AACA;AACA,qBAAqB,gEAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3OA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AAC0D;AACnD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kEAAa;AAC9B,gCAAgC;AAChC;AACA,iBAAiB,kEAAa;AAC9B,gCAAgC;AAChC;AACA,iBAAiB,kEAAa;AAC9B,gCAAgC;AAChC;AACA,iBAAiB,kEAAa;AAC9B,gCAAgC;AAChC;AACA,iBAAiB,kEAAa;AAC9B,gCAAgC;AAChC;AACA,iBAAiB,kEAAa;AAC9B,gCAAgC;AAChC;AACA,iBAAiB,kEAAa;AAC9B,gCAAgC;AAChC;AACA,iBAAiB,kEAAa;AAC9B,gCAAgC;AAChC;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,iBAAiB,SAAS,eAAe;AACtF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3FA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA,CAAC,kDAAkD;;;;;;;;;;;;;ACLnD;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;;;;;;;;;;;;;ACN/B;AAAA;AAAO;AACP;AACA;AACA,CAAC,0BAA0B;;;;;;;;;;;;;ACH3B;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;;;;;;;;;;;;;ACP/B;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;;;;;;;;;;;;;ACXvC;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;;;;;;;;;;;;;ACP3B;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oEAAoE;;;;;;;;;;;;;ACPrE;AAAA;AAAO;AACP;AACA;AACA;AACA,CAAC,kDAAkD;;;;;;;;;;;;;ACJnD;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;;;;;;;;;;;;;ACN3C;AAAA;AAAO;AACP;AACA;AACA;AACA,CAAC,8CAA8C;;;;;;;;;;;;;ACJ/C;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA,CAAC,0CAA0C;;;;;;;;;;;;;ACL3C;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;;;;;;;;;;;;;ACb/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AAC0C;AACc;AACV;AACiB;AACI;AACA;AACI;AACR;AACM;AACN;AACE;AACf;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,iCAAiC,+EAAY;AAC7C,+BAA+B,2EAAU;AACzC,QAAQ,oEAAU,gBAAgB,0DAAS,WAAW,2EAAU;AAChE,QAAQ,oEAAU,gBAAgB,0DAAS,aAAa,+EAAY;AACpE,QAAQ,oEAAU,gBAAgB,0DAAS;AAC3C,QAAQ,oEAAU,gBAAgB,0DAAS;AAC3C,QAAQ,oEAAU,gBAAgB,0DAAS,eAAe,mFAAc;AACxE,QAAQ,oEAAU,gBAAgB,0DAAS,WAAW,2EAAU;AAChE,QAAQ,oEAAU,gBAAgB,0DAAS,cAAc,iFAAa;AACtE,QAAQ,oEAAU,gBAAgB,0DAAS;AAC3C,QAAQ,oEAAU,gBAAgB,0DAAS;AAC3C,QAAQ,oEAAU,gBAAgB,0DAAS,YAAY,8EAAW;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sDAAM;AACzB,SAAS;AACT;AACA;AACA;AACA,mBAAmB,sDAAM;AACzB,SAAS;AACT;AACA;AACA,eAAe,sDAAM;AACrB;AACA;AACA,QAAQ,sDAAM;AACd;AACA;AACA,eAAe,sDAAM;AACrB;AACA;AACA,eAAe,sDAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,oEAAU;AAClB;AACA;AACA,QAAQ,+DAAO;AACf;AACA;AACA;AACA;AACuB;;;;;;;;;;;;ACvHvB;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACpBA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEa,wBAA4C;AACrD,WAAS,EAAE;AACP,UAAM,EAAE;AACJ,WAAK,EAAE,EADH;AAEJ,SAAG,EAAE,CAAC,CAFF;AAGJ,aAAO,EAAE;AACL,cAAM,EAAE,KADH;AAEL,kBAAU,EAAE;AAFP;AAHL,KADD;AASP,SAAK,EAAE;AACH,WAAK,EAAE;AADJ,KATA;AAYP,SAAK,EAAE;AACH,UAAI,EAAE,sBAAU,MADb;AAEH,YAAM,EAAE;AACJ,aAAK,EAAE,CADH;AAEJ,aAAK,EAAE;AAFH,OAFL;AAMH,aAAO,EAAE;AACL,gBAAQ,EAAE;AADL,OANN;AASH,WAAK,EAAE;AACH,WAAG,EAAE,EADF;AAEH,aAAK,EAAE,GAFJ;AAGH,cAAM,EAAE;AAHL;AATJ,KAZA;AA2BP,WAAO,EAAE;AACL,WAAK,EAAE,GADF;AAEL,YAAM,EAAE,KAFH;AAGL,UAAI,EAAE;AACF,cAAM,EAAE,IADN;AAEF,aAAK,EAAE,CAFL;AAGF,mBAAW,EAAE,GAHX;AAIF,YAAI,EAAE;AAJJ;AAHD,KA3BF;AAqCP,QAAI,EAAE;AACF,WAAK,EAAE,CADL;AAEF,YAAM,EAAE,KAFN;AAGF,UAAI,EAAE;AACF,cAAM,EAAE,KADN;AAEF,aAAK,EAAE,EAFL;AAGF,gBAAQ,EAAE,CAHR;AAIF,YAAI,EAAE;AAJJ;AAHJ,KArCC;AA+CP,eAAW,EAAE;AACT,YAAM,EAAE,IADC;AAET,cAAQ,EAAE,GAFD;AAGT,WAAK,EAAE,MAHE;AAIT,aAAO,EAAE,GAJA;AAKT,WAAK,EAAE,CALE;AAMT,YAAM,EAAE;AACJ,cAAM,EAAE,KADJ;AAEJ,YAAI,EAAE,CAFF;AAGJ,aAAK,EAAE;AAHH;AANC,KA/CN;AA2DP,QAAI,EAAE;AACF,YAAM,EAAE,IADN;AAEF,WAAK,EAAE,CAFL;AAGF,eAAS,EAAE,8BAAc,IAHvB;AAIF,YAAM,EAAE,KAJN;AAKF,cAAQ,EAAE,KALR;AAMF,cAAQ,EAAE,kBAAQ,MANhB;AAOF,YAAM,EAAE,IAPN;AAQF,aAAO,EAAE;AACL,cAAM,EAAE,KADH;AAEL,eAAO,EAAE,IAFJ;AAGL,eAAO,EAAE;AAHJ;AARP;AA3DC,GAD0C;AA2ErD,eAAa,EAAE;AACX,aAAS,EAAE,0CAAoB,MADpB;AAEX,UAAM,EAAE;AACJ,aAAO,EAAE;AACL,cAAM,EAAE,KADH;AAEL,YAAI,EAAE,sBAAU;AAFX,OADL;AAKJ,aAAO,EAAE;AACL,cAAM,EAAE,KADH;AAEL,YAAI,EAAE,sBAAU;AAFX,OALL;AASJ,YAAM,EAAE;AATJ,KAFG;AAaX,SAAK,EAAE;AACH,UAAI,EAAE;AACF,gBAAQ,EAAE,GADR;AAEF,mBAAW,EAAE;AACT,iBAAO,EAAE;AADA;AAFX,OADH;AAOH,YAAM,EAAE;AACJ,gBAAQ,EAAE,GADN;AAEJ,YAAI,EAAE,EAFF;AAGJ,gBAAQ,EAAE;AAHN,OAPL;AAYH,aAAO,EAAE;AACL,gBAAQ,EAAE,GADL;AAEL,gBAAQ,EAAE;AAFL,OAZN;AAgBH,UAAI,EAAE;AACF,oBAAY,EAAE;AADZ,OAhBH;AAmBH,YAAM,EAAE;AACJ,oBAAY,EAAE;AADV;AAnBL;AAbI,GA3EsC;AAgHrD,eAAa,EAAE,IAhHsC;AAiHrD,WAAS,EAAE,GAjH0C;AAkHrD,SAAO,EAAE;AACL,UAAM,EAAE,KADH;AAEL,SAAK,EAAE,CAFF;AAGL,QAAI,EAAE,kCAAgB,MAHjB;AAIL,UAAM,EAAE;AACJ,iBAAW,EAAE,4DAA6B;AADtC,KAJH;AAOL,QAAI,EAAE;AACF,YAAM,EAAE,KADN;AAEF,YAAM,EAAE;AACJ,aAAK,EAAE,GADH;AAEJ,aAAK,EAAE;AAFH;AAFN,KAPD;AAcL,QAAI,EAAE;AACF,YAAM,EAAE,EADN;AAEF,UAAI,EAAE,0CAAoB;AAFxB,KAdD;AAkBL,OAAG,EAAE;AAlBA;AAlH4C,CAA5C,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZb;;AACA;;AACA;;AAEA;;AAEA;;AACA;;AACA;;IAiBqB,S;;;;;AAUjB,qBAAY,KAAZ,EAAiC;AAAA;;AAAA;;AAC7B,8BAAM,KAAN;AACA,UAAK,KAAL,GAAa;AACT,YAAM,EAAE,SADC;AAET,aAAO,EAAE;AAFA,KAAb;AAIA,UAAK,UAAL,GAAkB,MAAK,UAAL,CAAgB,IAAhB,+BAAlB;AAN6B;AAOhC;;;;0CAE6B,K,EAAe,M,EAAmC;AAC5E,UAAI;AACA,YAAI,MAAM,KAAK,SAAf,EAA0B,OAAO,IAAP;AAC7B,OAFD,CAEE,WAAM;AACJ,eAAO,IAAP;AACH;;AACD,UAAI,OAAO,GAAG,IAAI,iBAAJ,EAAd;AAEA,aAAO,CAAC,IAAR,CAAa,8BAAb;AACA,aAAO,CAAC,IAAR,CAAa,MAAb;AAEA,0BAAY,GAAZ;AACA,UAAM,SAAS,GAAG,IAAI,qBAAJ,CAAc,KAAd,EAAqB,OAArB,CAAlB;AAEA,aAAO,SAAP;AACH;;;4BAEe,K,EAA+B;AAAA;;AAAA,UACnC,MADmC,GACxB,KAAK,KADmB,CACnC,MADmC;;AAE3C,UAAI,MAAJ,EAAY;AACR,aAAK,OAAL;AACA,aAAK,QAAL,CAAc;AACV,iBAAO,EAAE,KAAK,qBAAL,CAA2B,KAAK,CAAC,EAAjC,EAAqC,KAAK,CAAC,MAA3C;AADC,SAAd,EAGI,YAAK;AACD,gBAAI,CAAC,UAAL,CAAgB,MAAhB;AACH,SALL;AAOH;AACJ;;;8BAEM;AACH,UAAI,KAAK,KAAL,CAAW,OAAf,EAAwB;AACpB,aAAK,KAAL,CAAW,OAAX,CAAmB,OAAnB;AACH;AACJ;;;+BAEU,M,EAAyB;AAAA;;AAChC,UAAI,MAAJ,EAAY;AACR,aAAK,QAAL,CAAc;AACV,gBAAM,EAAN;AADU,SAAd,EAGI,YAAK;AAAA,cACO,OADP,GACmB,MAAI,CAAC,KADxB,CACO,OADP;;AAGD,cAAI,CAAC,OAAL,EAAc;AACV;AACH;;AAED,iBAAO,CAAC,MAAR,CAAe,UAAf,CAA0B,MAA1B;AACA,iBAAO,CAAC,KAAR;AACH,SAZL;AAcH;AACJ;;;0CAEqB,S,EAAmC;AACrD,aAAO,CAAC,qBAAQ,SAAR,EAAmB,KAAK,KAAxB,CAAR;AACH;;;yCAEiB;AACd,WAAK,OAAL,CAAa,KAAK,KAAlB;AACH;;;kCAEU;AACP,WAAK,OAAL,CAAa,KAAK,KAAlB;;AACA;AACH;;;wCAEgB;AACb,WAAK,QAAL,CAAc;AACV,eAAO,EAAE,KAAK,qBAAL,CAA2B,KAAK,KAAL,CAAW,EAAtC,EAA0C,KAAK,KAAL,CAAW,MAArD;AADC,OAAd;AAGH;;;2CAEmB;AAChB,WAAK,OAAL;AACA,WAAK,QAAL,CAAc;AACV,eAAO,EAAE;AADC,OAAd;AAGH;;;6BAEK;AAAA,wBACsD,KAAK,KAD3D;AAAA,UACI,KADJ,eACI,KADJ;AAAA,UACW,MADX,eACW,MADX;AAAA,UACmB,SADnB,eACmB,SADnB;AAAA,UAC8B,eAD9B,eAC8B,eAD9B;AAAA,UAC+C,EAD/C,eAC+C,EAD/C;AAEF,aACI;AAAK,iBAAS,EAAE,SAAhB;AAA2B,UAAE,EAAE;AAA/B,SACI;AACI,WAAG,EAAE,KAAK,UADd;AAEI,iBAAS,EAAE,eAFf;AAGI,aAAK,kCACE,KAAK,KAAL,CAAW,KADb,GACkB;AACnB,eAAK,EAAL,KADmB;AAEnB,gBAAM,EAAN;AAFmB,SADlB;AAHT,QADJ,CADJ;AAaH;;;;EApHkC,iB;;AAAvC;AAEkB,yBAA+B;AACzC,OAAK,EAAE,MADkC;AAEzC,QAAM,EAAE,MAFiC;AAGzC,QAAM,EAAE,8BAHiC;AAIzC,OAAK,EAAE,EAJkC;AAKzC,IAAE,EAAE;AALqC,CAA/B,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BlB;;AAgBS,oBAhBF,sBAgBE;;AAdT;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,qBAAe,sBAAf,C;;;;;;;;;;;ACfA,mD","file":"particles.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Particles\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"Particles\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_react__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","import { Constants } from \"./Utils/Constants\";\nimport { Utils } from \"./Utils/Utils\";\nimport { CanvasUtils } from \"./Utils/CanvasUtils\";\nimport { ColorUtils } from \"./Utils/ColorUtils\";\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this.dimension = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    init() {\n        this.size();\n        const container = this.container;\n        const options = container.options;\n        const cover = options.backgroundMask.cover;\n        const trail = options.particles.move.trail;\n        this.coverColor = ColorUtils.colorToRgb(cover.color !== undefined ?\n            cover.color :\n            options.backgroundMask.cover);\n        this.trailFillColor = typeof trail.fillColor === \"string\" ?\n            ColorUtils.stringToRgb(trail.fillColor) :\n            ColorUtils.colorToRgb(trail.fillColor);\n        this.paint();\n    }\n    loadCanvas(canvas, generatedCanvas) {\n        var _a;\n        if (!canvas.className) {\n            canvas.className = Constants.canvasClass;\n        }\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : false;\n        this.element = canvas;\n        this.dimension.height = canvas.offsetHeight;\n        this.dimension.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        if (this.context) {\n            CanvasUtils.clear(this.context, this.dimension);\n        }\n    }\n    size() {\n        if (this.element) {\n            this.element.width = this.dimension.width;\n            this.element.height = this.dimension.height;\n        }\n    }\n    paint() {\n        const container = this.container;\n        const options = container.options;\n        if (this.context) {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                if (this.coverColor) {\n                    this.paintBase(ColorUtils.getStyleFromColor(this.coverColor));\n                }\n                else {\n                    this.paintBase();\n                }\n            }\n            else {\n                this.paintBase();\n            }\n        }\n    }\n    clear() {\n        const container = this.container;\n        const options = container.options;\n        const trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(ColorUtils.getStyleFromColor(this.trailFillColor, 1 / trail.length));\n        }\n        else if (this.context) {\n            CanvasUtils.clear(this.context, this.dimension);\n        }\n    }\n    isPointInPath(path, point) {\n        var _a, _b;\n        return (_b = (_a = this.context) === null || _a === void 0 ? void 0 : _a.isPointInPath(path, point.x, point.y)) !== null && _b !== void 0 ? _b : false;\n    }\n    drawPolygonMask() {\n        const container = this.container;\n        const options = container.options;\n        const context = this.context;\n        const polygonDraw = options.polygon.draw;\n        const polygon = container.polygon;\n        const rawData = polygon.raw;\n        const path = polygon.polygonPath;\n        const path2dSupported = polygon.path2DSupported;\n        if (context) {\n            if (path2dSupported && path && polygon.offset) {\n                CanvasUtils.drawPolygonMaskPath(context, path, polygonDraw.stroke, polygon.offset);\n            }\n            else if (rawData) {\n                CanvasUtils.drawPolygonMask(context, rawData, polygonDraw.stroke);\n            }\n        }\n    }\n    drawLinkedLine(p1, p2, pos1, pos2, opacity) {\n        const container = this.container;\n        const options = container.options;\n        const ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        let colorLine;\n        if (container.particles.lineLinkedColor === Constants.randomColorValue) {\n            colorLine = ColorUtils.getRandomRgbColor();\n        }\n        else if (container.particles.lineLinkedColor == \"mid\" && p1.color && p2.color) {\n            const sourceColor = p1.color;\n            const destColor = p2.color;\n            colorLine = {\n                b: Math.floor(Utils.mix(sourceColor.b, destColor.b, p1.radius, p2.radius)),\n                g: Math.floor(Utils.mix(sourceColor.g, destColor.g, p1.radius, p2.radius)),\n                r: Math.floor(Utils.mix(sourceColor.r, destColor.r, p1.radius, p2.radius)),\n            };\n        }\n        else {\n            colorLine = container.particles.lineLinkedColor;\n        }\n        const width = container.retina.lineLinkedWidth;\n        CanvasUtils.drawLineLinked(ctx, width, pos1, pos2, options.backgroundMask.enable, colorLine, opacity, options.particles.lineLinked.shadow);\n    }\n    drawConnectLine(p1, p2) {\n        const lineStyle = this.lineStyle(p1, p2);\n        if (!lineStyle) {\n            return;\n        }\n        const ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        CanvasUtils.drawConnectLine(ctx, this.container.retina.lineLinkedWidth, lineStyle, p1.position, p2.position);\n    }\n    drawGrabLine(particle, opacity, mousePos) {\n        const container = this.container;\n        const options = container.options;\n        const optColor = options.particles.lineLinked.color;\n        let lineColor = container.particles.lineLinkedColor ||\n            (typeof optColor === \"string\" ? ColorUtils.stringToRgb(optColor) : ColorUtils.colorToRgb(optColor));\n        if (lineColor == Constants.randomColorValue) {\n            lineColor = ColorUtils.getRandomRgbColor();\n        }\n        container.particles.lineLinkedColor = lineColor;\n        let colorLine = { r: 127, g: 127, b: 127 };\n        const ctx = container.canvas.context;\n        if (!ctx) {\n            return;\n        }\n        if (container.particles.lineLinkedColor == Constants.randomColorValue) {\n            colorLine = ColorUtils.getRandomRgbColor() || colorLine;\n        }\n        else {\n            colorLine = container.particles.lineLinkedColor || colorLine;\n        }\n        const beginPos = {\n            x: particle.position.x + particle.offset.x,\n            y: particle.position.y + particle.offset.y,\n        };\n        CanvasUtils.drawGrabLine(ctx, container.retina.lineLinkedWidth, beginPos, mousePos, colorLine, opacity);\n    }\n    drawParticle(particle) {\n        const container = this.container;\n        const options = container.options;\n        let colorValue;\n        const radius = particle.bubbler.radius !== undefined ? particle.bubbler.radius : particle.radius;\n        const opacity = particle.bubbler.opacity !== undefined ? particle.bubbler.opacity : particle.opacity.value;\n        if (particle.color) {\n            colorValue = ColorUtils.getStyleFromColor(particle.color, opacity);\n        }\n        if (!this.context || !colorValue) {\n            return;\n        }\n        CanvasUtils.drawParticle(this.context, particle, colorValue, options.backgroundMask.enable, radius, opacity);\n    }\n    paintBase(baseColor) {\n        if (this.context) {\n            CanvasUtils.paintBase(this.context, this.dimension, baseColor);\n        }\n    }\n    lineStyle(p1, p2) {\n        const container = this.container;\n        const options = container.options;\n        const connectOptions = options.interactivity.modes.connect;\n        if (p1.color && p2.color) {\n            const sourceRgb = p1.color;\n            const destRgb = p2.color;\n            const midRgb = {\n                b: Utils.mix(sourceRgb.b, destRgb.b, p1.radius, p2.radius),\n                g: Utils.mix(sourceRgb.g, destRgb.g, p1.radius, p2.radius),\n                r: Utils.mix(sourceRgb.r, destRgb.r, p1.radius, p2.radius),\n            };\n            if (this.context) {\n                return CanvasUtils.gradient(this.context, p1, p2, midRgb, connectOptions.lineLinked.opacity);\n            }\n        }\n    }\n    initBackground() {\n        const container = this.container;\n        const options = container.options;\n        const background = options.background;\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (background.color) {\n            const color = typeof background.color === \"string\" ?\n                ColorUtils.stringToRgb(background.color) :\n                ColorUtils.colorToRgb(background.color);\n            if (color) {\n                elementStyle.backgroundColor = ColorUtils.getStyleFromColor(color, background.opacity);\n            }\n        }\n        if (background.image) {\n            elementStyle.backgroundImage = background.image;\n        }\n        if (background.position) {\n            elementStyle.backgroundPosition = background.position;\n        }\n        if (background.repeat) {\n            elementStyle.backgroundRepeat = background.repeat;\n        }\n        if (background.size) {\n            elementStyle.backgroundSize = background.size;\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { ShapeType } from \"../Enums/ShapeType\";\nimport { PolygonMask } from \"./PolygonMask\";\nimport { FrameManager } from \"./FrameManager\";\nimport { Options } from \"./Options/Options\";\nimport { Utils } from \"./Utils/Utils\";\nimport { Presets } from \"./Utils/Presets\";\nexport class Container {\n    constructor(id, params, ...presets) {\n        this.started = false;\n        this.destroyed = false;\n        this.id = id;\n        this.paused = true;\n        this.sourceOptions = params;\n        this.lastFrameTime = 0;\n        this.pageHidden = false;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this);\n        this.polygon = new PolygonMask(this);\n        this.drawer = new FrameManager(this);\n        this.interactivity = {\n            mouse: {},\n        };\n        this.images = [];\n        this.bubble = {};\n        this.repulse = {};\n        this.options = new Options();\n        for (const preset of presets) {\n            this.options.load(Presets.getPreset(preset));\n        }\n        if (this.sourceOptions) {\n            this.options.load(this.sourceOptions);\n        }\n        this.eventListeners = new EventListeners(this);\n    }\n    static requestFrame(callback) {\n        return window.customRequestAnimationFrame(callback);\n    }\n    static cancelAnimation(handle) {\n        window.cancelAnimationFrame(handle);\n    }\n    play() {\n        if (this.paused) {\n            this.lastFrameTime = performance.now();\n            this.paused = false;\n        }\n        this.drawAnimationFrame = Container.requestFrame((t) => this.drawer.nextFrame(t));\n    }\n    pause() {\n        if (this.drawAnimationFrame !== undefined) {\n            Container.cancelAnimation(this.drawAnimationFrame);\n            delete this.drawAnimationFrame;\n            this.paused = true;\n        }\n    }\n    densityAutoParticles() {\n        if (!(this.canvas.element && this.options.particles.number.density.enable)) {\n            return;\n        }\n        let area = this.canvas.element.width * this.canvas.element.height / 1000;\n        if (this.retina.isRetina) {\n            area /= this.retina.pxRatio * 2;\n        }\n        const optParticlesNumber = this.options.particles.number.value;\n        const density = this.options.particles.number.density.area;\n        const particlesNumber = area * optParticlesNumber / density;\n        const particlesCount = this.particles.count;\n        if (particlesCount < particlesNumber) {\n            this.particles.push(Math.abs(particlesNumber - particlesCount));\n        }\n        else if (particlesCount > particlesNumber) {\n            this.particles.removeQuantity(particlesCount - particlesNumber);\n        }\n    }\n    destroy() {\n        this.stop();\n        this.retina.reset();\n        this.canvas.destroy();\n        delete this.interactivity;\n        delete this.options;\n        delete this.retina;\n        delete this.canvas;\n        delete this.particles;\n        delete this.polygon;\n        delete this.bubble;\n        delete this.repulse;\n        delete this.images;\n        delete this.drawer;\n        delete this.eventListeners;\n        this.destroyed = true;\n    }\n    exportImg(callback) {\n        this.exportImage(callback);\n    }\n    exportImage(callback, type, quality) {\n        var _a;\n        return (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n    }\n    exportConfiguration() {\n        return JSON.stringify(this.options, undefined, 2);\n    }\n    loadImage(optionsImage) {\n        return new Promise((resolve, reject) => {\n            const src = optionsImage.src;\n            const image = {\n                type: src.substr(src.length - 3),\n            };\n            if (optionsImage.src) {\n                const img = new Image();\n                img.addEventListener(\"load\", () => {\n                    image.obj = img;\n                    resolve(image);\n                });\n                img.addEventListener(\"error\", () => {\n                    reject(`Error tsParticles - loading image: ${optionsImage.src}`);\n                });\n                img.src = optionsImage.src;\n            }\n            else {\n                reject(\"Error tsParticles - No image.src\");\n            }\n        });\n    }\n    refresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.stop();\n            yield this.start();\n        });\n    }\n    stop() {\n        if (!this.started) {\n            return;\n        }\n        this.started = false;\n        this.eventListeners.removeListeners();\n        this.pause();\n        this.images = [];\n        this.particles.clear();\n        this.retina.reset();\n        this.canvas.clear();\n        this.polygon.reset();\n        delete this.particles.lineLinkedColor;\n    }\n    start() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.started) {\n                return;\n            }\n            this.started = true;\n            this.eventListeners.addListeners();\n            yield this.polygon.init();\n            if (Utils.isInArray(ShapeType.char, this.options.particles.shape.type) ||\n                Utils.isInArray(ShapeType.character, this.options.particles.shape.type)) {\n                if (this.options.particles.shape.character instanceof Array) {\n                    for (const character of this.options.particles.shape.character) {\n                        yield Utils.loadFont(character);\n                    }\n                }\n                else {\n                    const character = this.options.particles.shape.character;\n                    yield Utils.loadFont(character);\n                }\n            }\n            if (Utils.isInArray(ShapeType.image, this.options.particles.shape.type)) {\n                if (this.options.particles.shape.image instanceof Array) {\n                    for (const optionsImage of this.options.particles.shape.image) {\n                        yield this.loadImageShape(optionsImage);\n                    }\n                }\n                else {\n                    yield this.loadImageShape(this.options.particles.shape.image);\n                }\n            }\n            this.init();\n            this.play();\n        });\n    }\n    loadImageShape(imageShape) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.images.push(yield this.loadImage(imageShape));\n        });\n    }\n    init() {\n        this.retina.init();\n        this.canvas.init();\n        this.particles.init();\n        this.densityAutoParticles();\n    }\n}\n","export class FrameManager {\n    constructor(container) {\n        this.container = container;\n    }\n    nextFrame(timestamp) {\n        const container = this.container;\n        const options = container.options;\n        const fpsLimit = options.fpsLimit > 0 ? options.fpsLimit : 60;\n        if (container.lastFrameTime !== undefined && timestamp < container.lastFrameTime + (1000 / fpsLimit)) {\n            container.play();\n            return;\n        }\n        const delta = timestamp - container.lastFrameTime;\n        container.lastFrameTime = timestamp;\n        container.particles.draw(delta);\n        if (!options.particles.move.enable) {\n            container.pause();\n        }\n        else {\n            container.play();\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Container } from \"./Container\";\nimport { Constants } from \"./Utils/Constants\";\nimport { Utils } from \"./Utils/Utils\";\nlet tsParticlesDom = [];\nexport class Loader {\n    static dom() {\n        if (!tsParticlesDom) {\n            tsParticlesDom = [];\n        }\n        return tsParticlesDom;\n    }\n    static domItem(index) {\n        const dom = Loader.dom();\n        const item = dom[index];\n        if (item && !item.destroyed) {\n            return item;\n        }\n        dom.splice(index, 1);\n    }\n    static loadFromArray(tagId, params, index) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Loader.load(tagId, Utils.itemFromArray(params, index));\n        });\n    }\n    static setFromArray(id, domContainer, params, index) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Loader.set(id, domContainer, Utils.itemFromArray(params, index));\n        });\n    }\n    static load(tagId, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const domContainer = document.getElementById(tagId);\n            if (!domContainer) {\n                return;\n            }\n            return this.set(tagId, domContainer, params);\n        });\n    }\n    static set(id, domContainer, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const dom = Loader.dom();\n            const oldIndex = dom.findIndex((v) => v.id === id);\n            if (oldIndex >= 0) {\n                const old = this.domItem(oldIndex);\n                if (old && !old.destroyed) {\n                    old.destroy();\n                    dom.splice(oldIndex, 1);\n                }\n            }\n            let canvasEl;\n            let generatedCanvas;\n            if (domContainer.tagName === \"canvas\") {\n                canvasEl = domContainer;\n                generatedCanvas = false;\n            }\n            else {\n                const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n                if (existingCanvases.length) {\n                    canvasEl = existingCanvases[0];\n                    if (!canvasEl.className) {\n                        canvasEl.className = Constants.canvasClass;\n                    }\n                    generatedCanvas = false;\n                }\n                else {\n                    generatedCanvas = true;\n                    canvasEl = document.createElement(\"canvas\");\n                    canvasEl.className = Constants.canvasClass;\n                    canvasEl.style.width = \"100%\";\n                    canvasEl.style.height = \"100%\";\n                    domContainer.appendChild(canvasEl);\n                }\n            }\n            const newItem = new Container(id, params);\n            if (oldIndex >= 0) {\n                dom.splice(oldIndex, 0, newItem);\n            }\n            else {\n                dom.push(newItem);\n            }\n            newItem.canvas.loadCanvas(canvasEl, generatedCanvas);\n            yield newItem.start();\n            return newItem;\n        });\n    }\n    static loadJSON(tagId, jsonUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield fetch(jsonUrl);\n            if (response.ok) {\n                const params = yield response.json();\n                if (params instanceof Array) {\n                    return Loader.loadFromArray(tagId, params);\n                }\n                else {\n                    return Loader.load(tagId, params);\n                }\n            }\n            else {\n                console.error(`Error tsParticles - fetch status: ${response.status}`);\n                console.error(\"Error tsParticles - File config not found\");\n            }\n        });\n    }\n    ;\n    static setJSON(id, domContainer, jsonUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield fetch(jsonUrl);\n            if (response.ok) {\n                const params = yield response.json();\n                if (params instanceof Array) {\n                    return Loader.setFromArray(id, domContainer, params);\n                }\n                else {\n                    return Loader.set(id, domContainer, params);\n                }\n            }\n            else {\n                console.error(`Error tsParticles - fetch status: ${response.status}`);\n                console.error(\"Error tsParticles - File config not found\");\n            }\n        });\n    }\n    ;\n    static setOnClickHandler(callback) {\n        const dom = Loader.dom();\n        if (dom.length === 0) {\n            throw new Error(\"Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()\");\n        }\n        for (const domItem of dom) {\n            const el = domItem.interactivity.element;\n            if (el) {\n                el.addEventListener(\"click\", callback);\n            }\n        }\n    }\n}\n","import { Color } from \"../Particles/Color\";\nexport class Background {\n    load(data) {\n        if (data !== undefined) {\n            if (data.color !== undefined) {\n                if (this.color === undefined) {\n                    this.color = new Color();\n                }\n                if (typeof data.color === \"string\") {\n                    this.color.value = data.color;\n                }\n                else {\n                    this.color.load(data.color);\n                }\n            }\n            if (data.image !== undefined) {\n                this.image = data.image;\n            }\n            if (data.position !== undefined) {\n                this.position = data.position;\n            }\n            if (data.repeat !== undefined) {\n                this.repeat = data.repeat;\n            }\n            if (data.size !== undefined) {\n                this.size = data.size;\n            }\n            if (data.opacity !== undefined) {\n                this.opacity = data.opacity;\n            }\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nexport class BackgroundMask {\n    constructor() {\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.cover !== undefined) {\n                this.cover.load(data.cover);\n            }\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n        }\n    }\n}\n","import { Color } from \"../Particles/Color\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new Color();\n        this.opacity = 1;\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.color !== undefined) {\n                this.color.load(data.color);\n            }\n            if (data.opacity !== undefined) {\n                this.opacity = data.opacity;\n            }\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            if (data.mode !== undefined) {\n                this.mode = data.mode;\n            }\n        }\n    }\n}\n","export class DivEvent {\n    constructor() {\n        this.elementId = \"repulse-div\";\n        this.enable = false;\n        this.mode = [];\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    load(data) {\n        var _a;\n        if (data !== undefined) {\n            const elementId = (_a = data.elementId) !== null && _a !== void 0 ? _a : data.el;\n            if (elementId !== undefined) {\n                this.elementId = elementId;\n            }\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            if (data.mode !== undefined) {\n                this.mode = data.mode;\n            }\n        }\n    }\n}\n","import { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = true;\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (data !== undefined) {\n            this.onClick.load((_a = data.onClick) !== null && _a !== void 0 ? _a : data.onclick);\n            this.onDiv.load((_b = data.onDiv) !== null && _b !== void 0 ? _b : data.ondiv);\n            this.onHover.load((_c = data.onHover) !== null && _c !== void 0 ? _c : data.onhover);\n            if (data.resize !== undefined) {\n                this.resize = data.resize;\n            }\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            if (data.mode !== undefined) {\n                this.mode = data.mode;\n            }\n            this.parallax.load(data.parallax);\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            if (data.force !== undefined) {\n                this.force = data.force;\n            }\n            if (data.smooth !== undefined) {\n                this.smooth = data.smooth;\n            }\n        }\n    }\n}\n","import { InteractivityDetect } from \"../../../Enums/InteractivityDetect\";\nimport { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nimport { HoverMode } from \"../../../Enums/Modes/HoverMode\";\nexport class Interactivity {\n    constructor() {\n        this.detectsOn = InteractivityDetect.canvas;\n        this.events = new Events();\n        this.modes = new Modes();\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (data !== undefined) {\n            const detectsOn = (_a = data.detectsOn) !== null && _a !== void 0 ? _a : data.detect_on;\n            if (detectsOn !== undefined) {\n                this.detectsOn = detectsOn;\n            }\n            this.events.load(data.events);\n            this.modes.load(data.modes);\n            if ((_c = (_b = data.modes) === null || _b === void 0 ? void 0 : _b.slow) === null || _c === void 0 ? void 0 : _c.active) {\n                if (this.events.onHover.mode instanceof Array) {\n                    if (this.events.onHover.mode.indexOf(HoverMode.slow) < 0) {\n                        this.events.onHover.mode.push(HoverMode.slow);\n                    }\n                }\n                else if (this.events.onHover.mode !== HoverMode.slow) {\n                    this.events.onHover.mode = [this.events.onHover.mode, HoverMode.slow];\n                }\n            }\n        }\n    }\n}\n","export class Bubble {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.opacity = 1;\n        this.size = 80;\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.distance !== undefined) {\n                this.distance = data.distance;\n            }\n            if (data.duration !== undefined) {\n                this.duration = data.duration;\n            }\n            if (data.opacity !== undefined) {\n                this.opacity = data.opacity;\n            }\n            if (data.size !== undefined) {\n                this.size = data.size;\n            }\n        }\n    }\n}\n","import { ConnectLineLinked } from \"./ConnectLineLinked\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.lineLinked = new ConnectLineLinked();\n        this.radius = 60;\n    }\n    get line_linked() {\n        return this.lineLinked;\n    }\n    set line_linked(value) {\n        this.lineLinked = value;\n    }\n    load(data) {\n        var _a;\n        if (data !== undefined) {\n            if (data.distance !== undefined) {\n                this.distance = data.distance;\n            }\n            const lineLinked = (_a = data.lineLinked) !== null && _a !== void 0 ? _a : data.line_linked;\n            if (lineLinked !== undefined) {\n                this.lineLinked.load(lineLinked);\n            }\n            if (data.radius !== undefined) {\n                this.radius = data.radius;\n            }\n        }\n    }\n}\n","export class ConnectLineLinked {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.opacity !== undefined) {\n                this.opacity = data.opacity;\n            }\n        }\n    }\n}\n","import { GrabLineLinked } from \"./GrabLineLinked\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.lineLinked = new GrabLineLinked();\n    }\n    get line_linked() {\n        return this.lineLinked;\n    }\n    set line_linked(value) {\n        this.lineLinked = value;\n    }\n    load(data) {\n        var _a;\n        if (data !== undefined) {\n            if (data.distance !== undefined) {\n                this.distance = data.distance;\n            }\n            const lineLinked = (_a = data.lineLinked) !== null && _a !== void 0 ? _a : data.line_linked;\n            if (lineLinked !== undefined) {\n                this.lineLinked.load(lineLinked);\n            }\n        }\n    }\n}\n","export class GrabLineLinked {\n    constructor() {\n        this.opacity = 1;\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.opacity !== undefined) {\n                this.opacity = data.opacity;\n            }\n        }\n    }\n}\n","import { Bubble } from \"./Bubble\";\nimport { Connect } from \"./Connect\";\nimport { Grab } from \"./Grab\";\nimport { Remove } from \"./Remove\";\nimport { Push } from \"./Push\";\nimport { Repulse } from \"./Repulse\";\nimport { Slow } from \"./Slow\";\nexport class Modes {\n    constructor() {\n        this.bubble = new Bubble();\n        this.connect = new Connect();\n        this.grab = new Grab();\n        this.push = new Push();\n        this.remove = new Remove();\n        this.repulse = new Repulse();\n        this.slow = new Slow();\n    }\n    load(data) {\n        if (data !== undefined) {\n            this.bubble.load(data.bubble);\n            this.connect.load(data.connect);\n            this.grab.load(data.grab);\n            this.push.load(data.push);\n            this.remove.load(data.remove);\n            this.repulse.load(data.repulse);\n            this.slow.load(data.slow);\n        }\n    }\n}\n","export class Push {\n    constructor() {\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = value;\n    }\n    load(data) {\n        var _a;\n        if (data !== undefined) {\n            const quantity = (_a = data.quantity) !== null && _a !== void 0 ? _a : data.particles_nb;\n            if (quantity !== undefined) {\n                this.quantity = quantity;\n            }\n        }\n    }\n}\n","export class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = value;\n    }\n    load(data) {\n        var _a;\n        if (data !== undefined) {\n            const quantity = (_a = data.quantity) !== null && _a !== void 0 ? _a : data.particles_nb;\n            if (quantity !== undefined) {\n                this.quantity = quantity;\n            }\n        }\n    }\n}\n","export class Repulse {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.distance !== undefined) {\n                this.distance = data.distance;\n            }\n            if (data.duration !== undefined) {\n                this.duration = data.duration;\n            }\n        }\n    }\n}\n","export class Slow {\n    constructor() {\n        this.factor = 1;\n        this.radius = 0;\n    }\n    get active() {\n        return false;\n    }\n    set active(value) {\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.factor !== undefined) {\n                this.factor = data.factor;\n            }\n            if (data.radius !== undefined) {\n                this.radius = data.radius;\n            }\n        }\n    }\n}\n","import { Interactivity } from \"./Interactivity/Interactivity\";\nimport { Particles } from \"./Particles/Particles\";\nimport { PolygonMask } from \"./PolygonMask/PolygonMask\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { Presets } from \"../Utils/Presets\";\nimport { Background } from \"./Background/Background\";\nexport class Options {\n    constructor() {\n        this.detectRetina = false;\n        this.fpsLimit = 30;\n        this.interactivity = new Interactivity();\n        this.particles = new Particles();\n        this.polygon = new PolygonMask();\n        this.backgroundMask = new BackgroundMask();\n        this.pauseOnBlur = true;\n        this.background = new Background();\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (data !== undefined) {\n            if (data.preset !== undefined) {\n                if (data.preset instanceof Array) {\n                    for (const preset of data.preset) {\n                        this.importPreset(preset);\n                    }\n                }\n                else {\n                    this.importPreset(data.preset);\n                }\n            }\n            if (data.background !== undefined) {\n                this.background.load(data.background);\n            }\n            const detectRetina = (_a = data.detectRetina) !== null && _a !== void 0 ? _a : data.retina_detect;\n            if (detectRetina !== undefined) {\n                this.detectRetina = detectRetina;\n            }\n            const fpsLimit = (_b = data.fpsLimit) !== null && _b !== void 0 ? _b : data.fps_limit;\n            if (fpsLimit !== undefined) {\n                this.fpsLimit = fpsLimit;\n            }\n            if (data.pauseOnBlur !== undefined) {\n                this.pauseOnBlur = data.pauseOnBlur;\n            }\n            this.interactivity.load(data.interactivity);\n            this.particles.load(data.particles);\n            this.polygon.load(data.polygon);\n            this.backgroundMask.load(data.backgroundMask);\n        }\n    }\n    importPreset(preset) {\n        const presetOptions = Presets.getPreset(preset);\n        if (presetOptions !== undefined) {\n            this.load(presetOptions);\n        }\n    }\n}\n","export class Attract {\n    constructor() {\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (data !== undefined) {\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            const rotateX = (_b = (_a = data.rotate) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : data.rotateX;\n            if (rotateX !== undefined) {\n                this.rotate.x = rotateX;\n            }\n            const rotateY = (_d = (_c = data.rotate) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : data.rotateY;\n            if (rotateY !== undefined) {\n                this.rotate.y = rotateY;\n            }\n        }\n    }\n}\n","export class Color {\n    constructor() {\n        this.value = \"#fff\";\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.value !== undefined) {\n                this.value = data.value;\n            }\n        }\n    }\n}\n","export class Density {\n    constructor() {\n        this.enable = false;\n        this.area = 800;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        var _a;\n        if (data !== undefined) {\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            const area = (_a = data.area) !== null && _a !== void 0 ? _a : data.value_area;\n            if (area !== undefined) {\n                this.area = area;\n            }\n        }\n    }\n}\n","import { LineLinkedShadow } from \"./LineLinkedShadow\";\nimport { Color } from \"./Color\";\nexport class LineLinked {\n    constructor() {\n        this.blink = false;\n        this.color = new Color();\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.opacity = 1;\n        this.shadow = new LineLinkedShadow();\n        this.width = 1;\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.blink !== undefined) {\n                this.blink = data.blink;\n            }\n            if (data.color !== undefined) {\n                if (typeof data.color === \"string\") {\n                    this.color.value = data.color;\n                }\n                else {\n                    this.color.load(data.color);\n                }\n            }\n            if (data.consent !== undefined) {\n                this.consent = data.consent;\n            }\n            if (data.distance !== undefined) {\n                this.distance = data.distance;\n            }\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            if (data.opacity !== undefined) {\n                this.opacity = data.opacity;\n            }\n            this.shadow.load(data.shadow);\n            if (data.width !== undefined) {\n                this.width = data.width;\n            }\n        }\n    }\n}\n","import { Color } from \"./Color\";\nexport class LineLinkedShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new Color();\n        this.enable = false;\n        this.color.value = \"lime\";\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.blur !== undefined) {\n                this.blur = data.blur;\n            }\n            if (data.color !== undefined) {\n                if (typeof data.color === \"string\") {\n                    this.color.value = data.color;\n                }\n                else {\n                    this.color.load(data.color);\n                }\n            }\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n        }\n    }\n}\n","import { Attract } from \"./Attract\";\nimport { MoveDirection } from \"../../../Enums/MoveDirection\";\nimport { OutMode } from \"../../../Enums/OutMode\";\nimport { Trail } from \"./Trail\";\nexport class Move {\n    constructor() {\n        this.attract = new Attract();\n        this.collisions = false;\n        this.direction = MoveDirection.none;\n        this.enable = false;\n        this.outMode = OutMode.out;\n        this.random = false;\n        this.speed = 2;\n        this.straight = false;\n        this.trail = new Trail();\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (data !== undefined) {\n            this.attract.load(data.attract);\n            const collisions = (_a = data.collisions) !== null && _a !== void 0 ? _a : data.bounce;\n            if (collisions !== undefined) {\n                this.collisions = collisions;\n            }\n            if (data.direction !== undefined) {\n                this.direction = data.direction;\n            }\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            const outMode = (_b = data.outMode) !== null && _b !== void 0 ? _b : data.out_mode;\n            if (outMode !== undefined) {\n                this.outMode = outMode;\n            }\n            if (data.random !== undefined) {\n                this.random = data.random;\n            }\n            if (data.speed !== undefined) {\n                this.speed = data.speed;\n            }\n            if (data.straight !== undefined) {\n                this.straight = data.straight;\n            }\n            this.trail.load(data.trail);\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { RandomOpacity } from \"./RandomOpacity\";\nexport class Opacity {\n    constructor() {\n        this.animation = new OpacityAnimation();\n        this.random = new RandomOpacity();\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        if (data !== undefined) {\n            const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n            if (animation !== undefined) {\n                this.animation.load(animation);\n            }\n            if (data.random !== undefined) {\n                if (typeof data.random === \"boolean\") {\n                    this.random.enable = data.random;\n                }\n                else {\n                    this.random.load(data.random);\n                }\n            }\n            if (data.value !== undefined) {\n                this.value = data.value;\n            }\n        }\n    }\n}\n","export class OpacityAnimation {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n        this.speed = 2;\n        this.sync = false;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        if (data !== undefined) {\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            const minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.opacity_min;\n            if (minimumValue !== undefined) {\n                this.minimumValue = minimumValue;\n            }\n            if (data.speed !== undefined) {\n                this.speed = data.speed;\n            }\n            if (data.sync !== undefined) {\n                this.sync = data.sync;\n            }\n        }\n    }\n}\n","import { Color } from \"./Color\";\nimport { LineLinked } from \"./LineLinked\";\nimport { Move } from \"./Move\";\nimport { ParticlesNumber } from \"./ParticlesNumber\";\nimport { Opacity } from \"./Opacity\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size\";\nimport { Rotate } from \"./Rotate\";\nimport { Shadow } from \"./Shadow\";\nimport { Stroke } from \"./Stroke\";\nexport class Particles {\n    constructor() {\n        this.color = new Color();\n        this.lineLinked = new LineLinked();\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.rotate = new Rotate();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.shadow = new Shadow();\n        this.stroke = new Stroke();\n    }\n    get line_linked() {\n        return this.lineLinked;\n    }\n    set line_linked(value) {\n        this.lineLinked = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (data !== undefined) {\n            if (data.color !== undefined) {\n                if (data.color instanceof Array) {\n                    this.color = data.color.map((s) => {\n                        const tmp = new Color();\n                        tmp.load(s);\n                        return tmp;\n                    });\n                }\n                else {\n                    if (this.color instanceof Array) {\n                        this.color = new Color();\n                    }\n                    this.color.load(data.color);\n                }\n            }\n            const lineLinked = (_a = data.lineLinked) !== null && _a !== void 0 ? _a : data.line_linked;\n            if (lineLinked !== undefined) {\n                this.lineLinked.load(lineLinked);\n            }\n            this.move.load(data.move);\n            this.number.load(data.number);\n            this.opacity.load(data.opacity);\n            this.rotate.load(data.rotate);\n            this.shape.load(data.shape);\n            this.size.load(data.size);\n            this.shadow.load(data.shadow);\n            const strokeToLoad = (_b = data.stroke) !== null && _b !== void 0 ? _b : (_c = data.shape) === null || _c === void 0 ? void 0 : _c.stroke;\n            if (strokeToLoad !== undefined) {\n                if (strokeToLoad instanceof Array) {\n                    this.stroke = strokeToLoad.map((s) => {\n                        const tmp = new Stroke();\n                        tmp.load(s);\n                        return tmp;\n                    });\n                }\n                else {\n                    if (this.stroke instanceof Array) {\n                        this.stroke = new Stroke();\n                    }\n                    this.stroke.load(strokeToLoad);\n                }\n            }\n        }\n    }\n}\n","import { Density } from \"./Density\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new Density();\n        this.limit = 0;\n        this.value = 100;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        var _a;\n        if (data !== undefined) {\n            this.density.load(data.density);\n            const limit = (_a = data.limit) !== null && _a !== void 0 ? _a : data.max;\n            if (limit !== undefined) {\n                this.limit = limit;\n            }\n            if (data.value !== undefined) {\n                this.value = data.value;\n            }\n        }\n    }\n}\n","export class RandomOpacity {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 1;\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            if (data.minimumValue !== undefined) {\n                this.minimumValue = data.minimumValue;\n            }\n        }\n    }\n}\n","export class RandomSize {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 1;\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            if (data.minimumValue !== undefined) {\n                this.minimumValue = data.minimumValue;\n            }\n        }\n    }\n}\n","import { RotateAnimation } from \"./RotateAnimation\";\nimport { RotateDirection } from \"../../../Enums/RotateDirection\";\nexport class Rotate {\n    constructor() {\n        this.animation = new RotateAnimation();\n        this.direction = RotateDirection.clockwise;\n        this.random = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (data !== undefined) {\n            this.animation.load(data.animation);\n            if (data.random !== undefined) {\n                this.random = data.random;\n            }\n            if (data.direction !== undefined) {\n                this.direction = data.direction;\n            }\n            if (data.value !== undefined) {\n                this.value = data.value;\n            }\n        }\n    }\n}\n","export class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            if (data.speed !== undefined) {\n                this.speed = data.speed;\n            }\n            if (data.sync !== undefined) {\n                this.sync = data.sync;\n            }\n        }\n    }\n}\n","import { Color } from \"./Color\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new Color();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000000\";\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.blur !== undefined) {\n                this.blur = data.blur;\n            }\n            if (data.color !== undefined) {\n                if (typeof data.color === \"string\") {\n                    this.color.value = data.color;\n                }\n                else {\n                    this.color.load(data.color);\n                }\n            }\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            if (data.offset !== undefined) {\n                if (data.offset.x !== undefined) {\n                    this.offset.x = data.offset.x;\n                }\n                if (data.offset.y !== undefined) {\n                    this.offset.y = data.offset.y;\n                }\n            }\n        }\n    }\n}\n","export class CharacterShape {\n    constructor() {\n        this.fill = false;\n        this.font = \"Verdana\";\n        this.style = \"\";\n        this.value = \"*\";\n        this.weight = \"400\";\n        this.fill = true;\n        this.close = true;\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.fill !== undefined) {\n                this.fill = data.fill;\n            }\n            if (data.font !== undefined) {\n                this.font = data.font;\n            }\n            if (data.style !== undefined) {\n                this.style = data.style;\n            }\n            if (data.value !== undefined) {\n                this.value = data.value;\n            }\n            if (data.weight !== undefined) {\n                this.weight = data.weight;\n            }\n        }\n    }\n}\n","export class ImageShape {\n    constructor() {\n        this.height = 100;\n        this.replaceColor = true;\n        this.src = \"\";\n        this.width = 100;\n        this.fill = true;\n        this.close = true;\n    }\n    get replace_color() {\n        return this.replaceColor;\n    }\n    set replace_color(value) {\n        this.replaceColor = value;\n    }\n    load(data) {\n        var _a;\n        if (data !== undefined) {\n            if (data.height !== undefined) {\n                this.height = data.height;\n            }\n            const replaceColor = (_a = data.replaceColor) !== null && _a !== void 0 ? _a : data.replace_color;\n            if (replaceColor !== undefined) {\n                this.replaceColor = replaceColor;\n            }\n            if (data.src !== undefined) {\n                this.src = data.src;\n            }\n            if (data.width !== undefined) {\n                this.width = data.width;\n            }\n        }\n    }\n}\n","export class PolygonShape {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.sides = 5;\n    }\n    get nb_sides() {\n        return this.sides;\n    }\n    set nb_sides(value) {\n        this.sides = value;\n    }\n    load(data) {\n        var _a;\n        if (data !== undefined) {\n            const sides = (_a = data.sides) !== null && _a !== void 0 ? _a : data.nb_sides;\n            if (sides !== undefined) {\n                this.sides = sides;\n            }\n        }\n    }\n}\n","import { ShapeType } from \"../../../../Enums/ShapeType\";\nimport { CharacterShape } from \"./CharacterShape\";\nimport { ImageShape } from \"./ImageShape\";\nimport { PolygonShape } from \"./PolygonShape\";\nexport class Shape {\n    constructor() {\n        this.character = new CharacterShape();\n        this.image = new ImageShape();\n        this.polygon = new PolygonShape();\n        this.type = ShapeType.circle;\n        this.custom = {};\n    }\n    get images() {\n        if (this.image instanceof Array) {\n            return this.image;\n        }\n        return [];\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(value) {\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.custom !== undefined)\n                for (const customShape in data.custom) {\n                    const item = data.custom[customShape];\n                    if (item !== undefined) {\n                        if (item instanceof Array) {\n                            this.custom[customShape] = item.filter(t => t !== undefined).map((s) => {\n                                return s;\n                            });\n                        }\n                        else {\n                            this.custom[customShape] = item;\n                        }\n                    }\n                }\n            if (data.character !== undefined) {\n                if (data.character instanceof Array) {\n                    this.character = data.character.map((s) => {\n                        const tmp = new CharacterShape();\n                        tmp.load(s);\n                        return tmp;\n                    });\n                }\n                else {\n                    if (this.character instanceof Array) {\n                        this.character = new CharacterShape();\n                    }\n                    this.character.load(data.character);\n                }\n            }\n            if (data.image !== undefined) {\n                if (data.image instanceof Array) {\n                    this.image = data.image.map((s) => {\n                        const tmp = new ImageShape();\n                        tmp.load(s);\n                        return tmp;\n                    });\n                }\n                else {\n                    if (this.image instanceof Array) {\n                        this.image = new ImageShape();\n                    }\n                    this.image.load(data.image);\n                }\n            }\n            if (data.polygon !== undefined) {\n                if (data.polygon instanceof Array) {\n                    this.polygon = data.polygon.map((s) => {\n                        const tmp = new PolygonShape();\n                        tmp.load(s);\n                        return tmp;\n                    });\n                }\n                else {\n                    if (this.polygon instanceof Array) {\n                        this.polygon = new PolygonShape();\n                    }\n                    this.polygon.load(data.polygon);\n                }\n            }\n            if (data.type !== undefined) {\n                this.type = data.type;\n            }\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { RandomSize } from \"./RandomSize\";\nexport class Size {\n    constructor() {\n        this.animation = new SizeAnimation();\n        this.random = new RandomSize;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        if (data !== undefined) {\n            const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n            if (animation !== undefined) {\n                this.animation.load(animation);\n            }\n            if (data.random !== undefined) {\n                if (typeof data.random === \"boolean\") {\n                    this.random.enable = data.random;\n                }\n                else {\n                    this.random.load(data.random);\n                }\n            }\n            if (data.value !== undefined) {\n                this.value = data.value;\n            }\n        }\n    }\n}\n","export class SizeAnimation {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n        this.speed = 5;\n        this.sync = false;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        if (data !== undefined) {\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            const minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.size_min;\n            if (minimumValue !== undefined) {\n                this.minimumValue = minimumValue;\n            }\n            if (data.speed !== undefined) {\n                this.speed = data.speed;\n            }\n            if (data.sync !== undefined) {\n                this.sync = data.sync;\n            }\n        }\n    }\n}\n","import { Color } from \"./Color\";\nexport class Stroke {\n    constructor() {\n        this.color = new Color();\n        this.width = 0;\n        this.opacity = 1;\n        this.color.value = \"#ff0000\";\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.color !== undefined) {\n                if (typeof data.color === \"string\") {\n                    this.color.value = data.color;\n                }\n                else {\n                    this.color.load(data.color);\n                }\n            }\n            if (data.width !== undefined) {\n                this.width = data.width;\n            }\n        }\n    }\n}\n","import { Color } from \"./Color\";\nexport class Trail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fillColor = new Color();\n        this.fillColor.value = \"#000000\";\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            if (data.fillColor !== undefined) {\n                if (typeof data.fillColor === \"string\") {\n                    this.fillColor.value = data.fillColor;\n                }\n                else {\n                    this.fillColor.load(data.fillColor);\n                }\n            }\n            if (data.length !== undefined) {\n                this.length = data.length;\n            }\n        }\n    }\n}\n","import { PolygonMaskDrawStroke } from \"./PolygonMaskDrawStroke\";\nexport class Draw {\n    constructor() {\n        this.enable = false;\n        this.stroke = new PolygonMaskDrawStroke();\n    }\n    get lineWidth() {\n        return this.stroke.width;\n    }\n    set lineWidth(value) {\n        this.stroke.width = value;\n    }\n    get lineColor() {\n        return this.stroke.color;\n    }\n    set lineColor(value) {\n        const destColor = this.stroke.color;\n        if (typeof value === \"string\") {\n            destColor.value = value;\n        }\n        else {\n            destColor.load(value);\n        }\n    }\n    load(data) {\n        var _a;\n        if (data !== undefined) {\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            const stroke = (_a = data.stroke) !== null && _a !== void 0 ? _a : {\n                color: data.lineColor,\n                width: data.lineWidth\n            };\n            this.stroke.load(stroke);\n        }\n    }\n}\n","import { PolygonMaskMoveType } from \"../../../Enums/PolygonMaskMoveType\";\nexport class Move {\n    constructor() {\n        this.radius = 10;\n        this.type = PolygonMaskMoveType.path;\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.radius !== undefined) {\n                this.radius = data.radius;\n            }\n            if (data.type !== undefined) {\n                this.type = data.type;\n            }\n        }\n    }\n}\n","import { PolygonMaskInlineArrangement } from \"../../../Enums/PolygonMaskInlineArrangement\";\nexport class PolygonInline {\n    constructor() {\n        this.arrangement = PolygonMaskInlineArrangement.onePerPoint;\n    }\n    load(data) {\n        if (data !== undefined) {\n            if (data.arrangement !== undefined) {\n                this.arrangement = data.arrangement;\n            }\n        }\n    }\n}\n","import { PolygonMaskType } from \"../../../Enums/PolygonMaskType\";\nimport { Draw } from \"./Draw\";\nimport { Move } from \"./Move\";\nimport { PolygonInline } from \"./PolygonInline\";\nexport class PolygonMask {\n    constructor() {\n        this.draw = new Draw();\n        this.enable = false;\n        this.inline = new PolygonInline();\n        this.move = new Move();\n        this.scale = 1;\n        this.type = PolygonMaskType.none;\n        this.url = \"\";\n    }\n    get inlineArrangement() {\n        return this.inline.arrangement;\n    }\n    set inlineArrangement(value) {\n        this.inline.arrangement = value;\n    }\n    load(data) {\n        var _a;\n        if (data !== undefined) {\n            this.draw.load(data.draw);\n            const inline = (_a = data.inline) !== null && _a !== void 0 ? _a : {\n                arrangement: data.inlineArrangement,\n            };\n            if (inline !== undefined) {\n                this.inline.load(inline);\n            }\n            this.move.load(data.move);\n            if (data.scale !== undefined) {\n                this.scale = data.scale;\n            }\n            if (data.type !== undefined) {\n                this.type = data.type;\n            }\n            if (data.enable !== undefined) {\n                this.enable = data.enable;\n            }\n            else {\n                this.enable = this.type !== PolygonMaskType.none;\n            }\n            if (data.url !== undefined) {\n                this.url = data.url;\n            }\n        }\n    }\n}\n","import { Color } from \"../Particles/Color\";\nimport { ColorUtils } from \"../../Utils/ColorUtils\";\nexport class PolygonMaskDrawStroke {\n    constructor() {\n        this.color = new Color();\n        this.width = 0.5;\n        this.opacity = 1;\n    }\n    load(data) {\n        var _a;\n        if (data !== undefined) {\n            if (data.color !== undefined) {\n                if (typeof data.color === \"string\") {\n                    this.color.value = data.color;\n                }\n                else {\n                    this.color.load(data.color);\n                }\n                if (typeof this.color.value === \"string\") {\n                    this.opacity = (_a = ColorUtils.stringToAlpha(this.color.value)) !== null && _a !== void 0 ? _a : this.opacity;\n                }\n            }\n            if (data.opacity !== undefined) {\n                this.opacity = data.opacity;\n            }\n            if (data.width !== undefined) {\n                this.width = data.width;\n            }\n        }\n    }\n}\n","import { Bubbler } from \"./Particle/Bubbler\";\nimport { Drawer } from \"./Particle/Drawer\";\nimport { Grabber } from \"./Particle/Grabber\";\nimport { Repulser } from \"./Particle/Repulser\";\nimport { ShapeType } from \"../Enums/ShapeType\";\nimport { Updater } from \"./Particle/Updater\";\nimport { Utils } from \"./Utils/Utils\";\nimport { PolygonMaskType } from \"../Enums/PolygonMaskType\";\nimport { Connecter } from \"./Particle/Connecter\";\nimport { InteractionManager } from \"./Particle/InteractionManager\";\nimport { HoverMode } from \"../Enums/Modes/HoverMode\";\nimport { ClickMode } from \"../Enums/Modes/ClickMode\";\nimport { RotateDirection } from \"../Enums/RotateDirection\";\nimport { ColorUtils } from \"./Utils/ColorUtils\";\nexport class Particle {\n    constructor(container, position) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        this.container = container;\n        const options = container.options;\n        const color = options.particles.color;\n        this.size = {};\n        this.angle = options.particles.rotate.random ? Math.random() * 360 : options.particles.rotate.value;\n        if (options.particles.rotate.direction == RotateDirection.random) {\n            const index = Math.floor(Math.random() * 2);\n            if (index > 0) {\n                this.rotateDirection = RotateDirection.counterClockwise;\n            }\n            else {\n                this.rotateDirection = RotateDirection.clockwise;\n            }\n        }\n        else {\n            this.rotateDirection = options.particles.rotate.direction;\n        }\n        const randomSize = options.particles.size.random;\n        const sizeValue = container.retina.sizeValue;\n        this.radius = randomSize.enable ? Utils.randomInRange(randomSize.minimumValue, sizeValue) : sizeValue;\n        if (options.particles.size.animation.enable) {\n            this.size.status = false;\n            this.size.velocity = container.retina.sizeAnimationSpeed / 100;\n            if (!options.particles.size.animation.sync) {\n                this.size.velocity = this.size.velocity * Math.random();\n            }\n        }\n        if (options.particles.rotate.animation.enable) {\n            if (!options.particles.rotate.animation.sync) {\n                this.angle = Math.random() * 360;\n            }\n        }\n        this.position = this.calcPosition(this.container, position);\n        if (options.polygon.enable && options.polygon.type === PolygonMaskType.inline) {\n            this.initialPosition = {\n                x: this.position.x,\n                y: this.position.y,\n            };\n        }\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        if (options.particles.move.collisions) {\n            this.checkOverlap(position);\n        }\n        if (color instanceof Array) {\n            this.color = ColorUtils.colorToRgb(Utils.itemFromArray(color));\n        }\n        else {\n            this.color = ColorUtils.colorToRgb(color);\n        }\n        const randomOpacity = options.particles.opacity.random;\n        const opacityValue = options.particles.opacity.value;\n        this.opacity = {\n            value: randomOpacity.enable ? Utils.randomInRange(randomOpacity.minimumValue, opacityValue) : opacityValue,\n        };\n        if (options.particles.opacity.animation.enable) {\n            this.opacity.status = false;\n            this.opacity.velocity = options.particles.opacity.animation.speed / 100;\n            if (!options.particles.opacity.animation.sync) {\n                this.opacity.velocity *= Math.random();\n            }\n        }\n        this.initialVelocity = Particle.calculateVelocity(options);\n        this.velocity = {\n            horizontal: this.initialVelocity.horizontal,\n            vertical: this.initialVelocity.vertical,\n        };\n        this.fill = true;\n        this.close = true;\n        const shapeType = options.particles.shape.type;\n        if (shapeType instanceof Array) {\n            this.shape = Utils.itemFromArray(shapeType);\n        }\n        else {\n            this.shape = shapeType;\n        }\n        if (this.shape === ShapeType.image) {\n            const shape = options.particles.shape;\n            const index = Utils.arrayRandomIndex(container.images);\n            const image = container.images[index];\n            const optionsImage = shape.image instanceof Array ? shape.image[index] : shape.image;\n            this.image = {\n                data: image,\n                ratio: optionsImage.width / optionsImage.height,\n                replaceColor: optionsImage.replaceColor,\n                src: optionsImage.src,\n            };\n            if (!this.image.ratio) {\n                this.image.ratio = 1;\n            }\n            this.fill = (_a = optionsImage.fill) !== null && _a !== void 0 ? _a : this.fill;\n            this.close = (_b = optionsImage.close) !== null && _b !== void 0 ? _b : this.close;\n        }\n        if (this.shape === ShapeType.polygon) {\n            if (options.particles.shape.polygon instanceof Array) {\n                this.polygon = Utils.itemFromArray(options.particles.shape.polygon);\n            }\n            else {\n                this.polygon = options.particles.shape.polygon;\n            }\n            this.fill = (_c = this.polygon.fill) !== null && _c !== void 0 ? _c : this.fill;\n            this.close = (_d = this.polygon.close) !== null && _d !== void 0 ? _d : this.close;\n        }\n        if (options.particles.stroke instanceof Array) {\n            this.stroke = Utils.itemFromArray(options.particles.stroke);\n        }\n        else {\n            this.stroke = options.particles.stroke;\n        }\n        this.strokeColor = typeof this.stroke.color === \"string\" ?\n            ColorUtils.stringToRgb(this.stroke.color) :\n            ColorUtils.colorToRgb(this.stroke.color);\n        this.shadowColor = typeof options.particles.shadow.color === \"string\" ?\n            ColorUtils.stringToRgb(options.particles.shadow.color) :\n            ColorUtils.colorToRgb(options.particles.shadow.color);\n        if (this.shape === ShapeType.char || this.shape === ShapeType.character) {\n            if (options.particles.shape.character instanceof Array) {\n                this.character = Utils.itemFromArray(options.particles.shape.character);\n            }\n            else {\n                this.character = options.particles.shape.character;\n            }\n            const value = this.character.value;\n            this.text = value instanceof Array ? Utils.itemFromArray(value) : value;\n            this.fill = (_e = this.character.fill) !== null && _e !== void 0 ? _e : this.fill;\n            this.close = (_f = this.character.close) !== null && _f !== void 0 ? _f : this.close;\n        }\n        const shapeData = options.particles.shape.custom[this.shape];\n        if (shapeData) {\n            this.shapeData = shapeData instanceof Array ? Utils.itemFromArray(shapeData) : shapeData;\n            this.fill = (_g = this.shapeData.fill) !== null && _g !== void 0 ? _g : this.fill;\n            this.close = (_h = this.shapeData.close) !== null && _h !== void 0 ? _h : this.close;\n        }\n        this.updater = new Updater(this.container, this);\n        this.bubbler = new Bubbler(this.container, this);\n        this.repulser = new Repulser(this.container, this);\n        this.drawer = new Drawer(this.container, this);\n        this.grabber = new Grabber(this.container, this);\n        this.connecter = new Connecter(this.container, this);\n        this.interactionManager = new InteractionManager(this.container, this);\n    }\n    static calculateVelocity(options) {\n        const baseVelocity = Utils.getParticleBaseVelocity(options);\n        const res = {\n            horizontal: 0,\n            vertical: 0,\n        };\n        if (options.particles.move.straight) {\n            res.horizontal = baseVelocity.x;\n            res.vertical = baseVelocity.y;\n            if (options.particles.move.random) {\n                res.horizontal *= Math.random();\n                res.vertical *= Math.random();\n            }\n        }\n        else {\n            res.horizontal = baseVelocity.x + Math.random() - 0.5;\n            res.vertical = baseVelocity.y + Math.random() - 0.5;\n        }\n        return res;\n    }\n    resetVelocity() {\n        const container = this.container;\n        const options = container.options;\n        const velocity = Particle.calculateVelocity(options);\n        this.velocity.horizontal = velocity.horizontal;\n        this.velocity.vertical = velocity.vertical;\n    }\n    update(index, delta) {\n        const container = this.container;\n        const options = container.options;\n        this.updater.update(delta);\n        const hoverMode = options.interactivity.events.onHover.mode;\n        const clickMode = options.interactivity.events.onClick.mode;\n        if (Utils.isInArray(HoverMode.grab, hoverMode)) {\n            this.grabber.grab();\n        }\n        if (Utils.isInArray(HoverMode.connect, options.interactivity.events.onHover.mode)) {\n            for (let j = index + 1; j < container.particles.count; j++) {\n                const p2 = container.particles.array[j];\n                this.connecter.connect(p2);\n            }\n        }\n        if (Utils.isInArray(HoverMode.bubble, hoverMode) || Utils.isInArray(ClickMode.bubble, clickMode)) {\n            this.bubbler.bubble();\n        }\n        if (Utils.isInArray(HoverMode.repulse, hoverMode) || Utils.isInArray(ClickMode.repulse, clickMode)) {\n            this.repulser.repulse();\n        }\n    }\n    interact(p2) {\n        this.interactionManager.interact(p2);\n    }\n    draw() {\n        this.drawer.draw();\n    }\n    isOverlapping() {\n        const container = this.container;\n        const p = this;\n        let collisionFound = false;\n        let iterations = 0;\n        for (const p2 of container.particles.array.filter((t) => t != p)) {\n            iterations++;\n            const dist = Utils.getDistanceBetweenCoordinates(p.position, p2.position);\n            if (dist <= p.radius + p2.radius) {\n                collisionFound = true;\n                break;\n            }\n        }\n        return {\n            collisionFound: collisionFound,\n            iterations: iterations,\n        };\n    }\n    checkOverlap(position) {\n        const container = this.container;\n        const p = this;\n        const overlapResult = p.isOverlapping();\n        if (overlapResult.iterations >= container.particles.count) {\n            container.particles.remove(this);\n        }\n        else if (overlapResult.collisionFound) {\n            p.position.x = position ? position.x : Math.random() * container.canvas.dimension.width;\n            p.position.y = position ? position.y : Math.random() * container.canvas.dimension.height;\n            p.checkOverlap();\n        }\n    }\n    calcPosition(container, position) {\n        var _a, _b;\n        const pos = { x: 0, y: 0 };\n        const options = container.options;\n        if (options.polygon.enable && ((_b = (_a = container.polygon.raw) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) > 0) {\n            if (position) {\n                pos.x = position.x;\n                pos.y = position.y;\n            }\n            else {\n                const randomPoint = container.polygon.randomPointInPolygon();\n                pos.x = randomPoint.x;\n                pos.y = randomPoint.y;\n            }\n        }\n        else {\n            pos.x = position ? position.x : Math.random() * container.canvas.dimension.width;\n            pos.y = position ? position.y : Math.random() * container.canvas.dimension.height;\n            if (pos.x > container.canvas.dimension.width - this.radius * 2) {\n                pos.x -= this.radius;\n            }\n            else if (pos.x < this.radius * 2) {\n                pos.x += this.radius;\n            }\n            if (pos.y > container.canvas.dimension.height - this.radius * 2) {\n                pos.y -= this.radius;\n            }\n            else if (pos.y < this.radius * 2) {\n                pos.y += this.radius;\n            }\n        }\n        return pos;\n    }\n}\n","export class Attracter {\n    constructor(container, particle) {\n        this.container = container;\n        this.particle = particle;\n    }\n    attract(p2) {\n        const container = this.container;\n        const options = container.options;\n        const particle = this.particle;\n        const dx = particle.position.x - p2.position.x;\n        const dy = particle.position.y - p2.position.y;\n        const dist = Math.sqrt(dx * dx + dy * dy);\n        if (dist <= container.retina.lineLinkedDistance) {\n            const ax = dx / (options.particles.move.attract.rotate.x * 1000);\n            const ay = dy / (options.particles.move.attract.rotate.y * 1000);\n            particle.velocity.horizontal -= ax;\n            particle.velocity.vertical -= ay;\n            p2.velocity.horizontal += ax;\n            p2.velocity.vertical += ay;\n        }\n    }\n}\n","import { ProcessBubbleType } from \"../../Enums/ProcessBubbleType\";\nimport { Utils } from \"../Utils/Utils\";\nimport { HoverMode } from \"../../Enums/Modes/HoverMode\";\nimport { ClickMode } from \"../../Enums/Modes/ClickMode\";\nimport { Constants } from \"../Utils/Constants\";\nexport class Bubbler {\n    constructor(container, particle) {\n        this.container = container;\n        this.particle = particle;\n    }\n    bubble() {\n        const container = this.container;\n        const options = container.options;\n        const hoverEnabled = options.interactivity.events.onHover.enable;\n        const hoverMode = options.interactivity.events.onHover.mode;\n        const clickEnabled = options.interactivity.events.onClick.enable;\n        const clickMode = options.interactivity.events.onClick.mode;\n        if (hoverEnabled && Utils.isInArray(HoverMode.bubble, hoverMode)) {\n            this.hoverBubble();\n        }\n        else if (clickEnabled && Utils.isInArray(ClickMode.bubble, clickMode)) {\n            this.clickBubble();\n        }\n    }\n    init() {\n        const particle = this.particle;\n        this.opacity = particle.opacity.value;\n        this.radius = particle.radius;\n    }\n    process(distMouse, timeSpent, data) {\n        const container = this.container;\n        const options = container.options;\n        const bubbleDuration = options.interactivity.modes.bubble.duration;\n        const bubbleParam = data.bubbleObj.optValue;\n        const bubbleDistance = container.retina.bubbleModeDistance;\n        const particlesParam = data.particlesObj.optValue;\n        const pObjBubble = data.bubbleObj.value;\n        const pObj = data.particlesObj.value || 0;\n        const type = data.type;\n        if (bubbleParam !== particlesParam) {\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam) / bubbleDuration);\n                        if (type === ProcessBubbleType.size) {\n                            this.radius = value;\n                        }\n                        if (type === ProcessBubbleType.opacity) {\n                            this.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === ProcessBubbleType.size) {\n                        this.radius = undefined;\n                    }\n                    if (type === ProcessBubbleType.opacity) {\n                        this.opacity = undefined;\n                    }\n                }\n            }\n            else if (pObjBubble) {\n                const value = bubbleParam * 2 - pObj - (timeSpent * (pObj - bubbleParam) / bubbleDuration);\n                if (type === ProcessBubbleType.size) {\n                    this.radius = value;\n                }\n                if (type === ProcessBubbleType.opacity) {\n                    this.opacity = value;\n                }\n            }\n        }\n    }\n    clickBubble() {\n        const container = this.container;\n        const options = container.options;\n        const particle = this.particle;\n        const mouseClickPos = container.interactivity.mouse.clickPosition || { x: 0, y: 0 };\n        const distMouse = Utils.getDistanceBetweenCoordinates(particle.position, mouseClickPos);\n        const timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n        if (container.bubble.clicking) {\n            if (timeSpent > options.interactivity.modes.bubble.duration) {\n                container.bubble.durationEnd = true;\n            }\n            if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n                container.bubble.clicking = false;\n                container.bubble.durationEnd = false;\n            }\n            const sizeData = {\n                bubbleObj: {\n                    optValue: container.retina.bubbleModeSize,\n                    value: this.radius,\n                },\n                particlesObj: {\n                    optValue: container.retina.sizeValue,\n                    value: this.particle.radius,\n                },\n                type: ProcessBubbleType.size,\n            };\n            this.process(distMouse, timeSpent, sizeData);\n            const opacityData = {\n                bubbleObj: {\n                    optValue: options.interactivity.modes.bubble.opacity,\n                    value: this.opacity,\n                },\n                particlesObj: {\n                    optValue: options.particles.opacity.value,\n                    value: this.particle.opacity.value,\n                },\n                type: ProcessBubbleType.opacity,\n            };\n            this.process(distMouse, timeSpent, opacityData);\n        }\n    }\n    hoverBubble() {\n        const container = this.container;\n        const particle = this.particle;\n        const mousePos = container.interactivity.mouse.position || {\n            x: 0,\n            y: 0,\n        };\n        const distMouse = Utils.getDistanceBetweenCoordinates(particle.position, mousePos);\n        const ratio = 1 - distMouse / container.retina.bubbleModeDistance;\n        if (distMouse <= container.retina.bubbleModeDistance) {\n            if (ratio >= 0 && container.interactivity.status === Constants.mouseMoveEvent) {\n                this.hoverBubbleSize(ratio);\n                this.hoverBubbleOpacity(ratio);\n            }\n        }\n        else {\n            this.init();\n        }\n        if (container.interactivity.status === Constants.mouseLeaveEvent) {\n            this.init();\n        }\n    }\n    hoverBubbleSize(ratio) {\n        const container = this.container;\n        const options = container.options;\n        const particle = this.particle;\n        const modeSize = options.interactivity.modes.bubble.size;\n        const optSize = options.particles.size.value;\n        const pSize = particle.radius;\n        if (container.retina.bubbleModeSize > container.retina.sizeValue) {\n            const size = pSize + modeSize * ratio;\n            if (size > pSize && size <= modeSize) {\n                this.radius = size;\n            }\n        }\n        else if (container.retina.bubbleModeSize < container.retina.sizeValue) {\n            const size = pSize - (optSize - modeSize) * ratio;\n            if (size < pSize && size >= modeSize) {\n                this.radius = size;\n            }\n        }\n    }\n    hoverBubbleOpacity(ratio) {\n        const container = this.container;\n        const options = container.options;\n        const particle = this.particle;\n        const modeOpacity = options.interactivity.modes.bubble.opacity;\n        const optOpacity = options.particles.opacity.value;\n        const pOpacity = particle.opacity.value;\n        if (modeOpacity > optOpacity) {\n            const opacity = pOpacity + modeOpacity * ratio;\n            if (opacity > pOpacity && opacity <= modeOpacity) {\n                this.opacity = opacity;\n            }\n        }\n        else if (modeOpacity < optOpacity) {\n            const opacity = pOpacity - (optOpacity - modeOpacity) * ratio;\n            if (opacity < pOpacity && opacity >= modeOpacity) {\n                this.opacity = opacity;\n            }\n        }\n    }\n}\n","import { Utils } from \"../Utils/Utils\";\nexport class Collider {\n    constructor(container, particle) {\n        this.container = container;\n        this.particle = particle;\n    }\n    collide(p2) {\n        const p1 = this.particle;\n        if (p1 === p2) {\n            return;\n        }\n        const dist = Utils.getDistanceBetweenCoordinates(p1.position, p2.position);\n        const distP = (p1.bubbler.radius || p1.radius) + (p2.bubbler.radius || p2.radius);\n        if (dist <= distP) {\n            p1.resetVelocity();\n            p2.resetVelocity();\n        }\n    }\n}\n","export class Connecter {\n    constructor(container, particle) {\n        this.container = container;\n        this.particle = particle;\n    }\n    connect(destParticle) {\n        const container = this.container;\n        const options = container.options;\n        const particle = this.particle;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status == 'mousemove') {\n            const xDiff = Math.abs(particle.position.x - destParticle.position.x);\n            const yDiff = Math.abs(particle.position.y - destParticle.position.y);\n            const mousePos = container.interactivity.mouse.position || { x: 0, y: 0 };\n            const xCoreDiff = Math.abs(particle.position.x - mousePos.x);\n            const yCoreDiff = Math.abs(particle.position.y - mousePos.y);\n            const distMax = Math.abs(container.retina.connectModeDistance);\n            const connectAreaRadius = Math.abs(container.retina.connectModeRadius);\n            if (xDiff < distMax && yDiff < distMax && xCoreDiff < connectAreaRadius && yCoreDiff < connectAreaRadius) {\n                container.canvas.drawConnectLine(particle, destParticle);\n            }\n        }\n    }\n}\n","export class Drawer {\n    constructor(container, particle) {\n        this.container = container;\n        this.particle = particle;\n    }\n    draw() {\n        const container = this.container;\n        const particle = this.particle;\n        container.canvas.drawParticle(particle);\n    }\n}\n","import { Utils } from \"../Utils/Utils\";\nimport { Constants } from \"../Utils/Constants\";\nexport class Grabber {\n    constructor(container, particle) {\n        this.container = container;\n        this.particle = particle;\n    }\n    grab() {\n        const container = this.container;\n        const options = container.options;\n        const particle = this.particle;\n        const interactivity = options.interactivity;\n        if (interactivity.events.onHover.enable && container.interactivity.status === Constants.mouseMoveEvent) {\n            const mousePos = container.interactivity.mouse.position || { x: 0, y: 0 };\n            const distMouse = Utils.getDistanceBetweenCoordinates(particle.position, mousePos);\n            if (distMouse <= container.retina.grabModeDistance) {\n                const lineOpacity = interactivity.modes.grab.lineLinked.opacity;\n                const grabDistance = container.retina.grabModeDistance;\n                const opacityLine = lineOpacity - (distMouse * lineOpacity) / grabDistance;\n                if (opacityLine > 0) {\n                    container.canvas.drawGrabLine(particle, opacityLine, mousePos);\n                }\n            }\n        }\n    }\n}\n","import { Linker } from \"./Linker\";\nimport { Attracter } from \"./Attracter\";\nimport { Collider } from \"./Collider\";\nexport class InteractionManager {\n    constructor(container, particle) {\n        this.container = container;\n        this.linker = new Linker(container, particle);\n        this.attracter = new Attracter(container, particle);\n        this.collider = new Collider(container, particle);\n    }\n    interact(p2) {\n        const container = this.container;\n        const options = container.options;\n        if (options.particles.lineLinked.enable) {\n            this.linker.link(p2);\n        }\n        if (options.particles.move.attract.enable) {\n            this.attracter.attract(p2);\n        }\n        if (options.particles.move.collisions) {\n            this.collider.collide(p2);\n        }\n    }\n}\n","import { ColorUtils } from \"../Utils/ColorUtils\";\nimport { Utils } from \"../Utils/Utils\";\nimport { Constants } from \"../Utils/Constants\";\nexport class Linker {\n    constructor(container, particle) {\n        this.container = container;\n        this.particle = particle;\n    }\n    link(p2) {\n        const container = this.container;\n        const options = container.options;\n        const particle = this.particle;\n        const pos1 = {\n            x: particle.position.x + particle.offset.x,\n            y: particle.position.y + particle.offset.y,\n        };\n        const pos2 = {\n            x: p2.position.x + p2.offset.x,\n            y: p2.position.y + p2.offset.y,\n        };\n        const dist = Utils.getDistanceBetweenCoordinates(pos1, pos2);\n        const optOpacity = options.particles.lineLinked.opacity;\n        const optDistance = container.retina.lineLinkedDistance;\n        if (dist <= optDistance) {\n            const opacityLine = optOpacity - (dist * optOpacity) / optDistance;\n            if (opacityLine > 0) {\n                if (!container.particles.lineLinkedColor) {\n                    const color = options.particles.lineLinked.color;\n                    if (color === Constants.randomColorValue) {\n                        if (options.particles.lineLinked.consent) {\n                            container.particles.lineLinkedColor = ColorUtils.stringToRgb(color);\n                        }\n                        else if (options.particles.lineLinked.blink) {\n                            container.particles.lineLinkedColor = Constants.randomColorValue;\n                        }\n                        else {\n                            container.particles.lineLinkedColor = \"mid\";\n                        }\n                    }\n                    else {\n                        container.particles.lineLinkedColor = typeof color === \"string\" ?\n                            ColorUtils.stringToRgb(color) :\n                            ColorUtils.colorToRgb(color);\n                    }\n                }\n                container.canvas.drawLinkedLine(particle, p2, pos1, pos2, opacityLine);\n            }\n        }\n    }\n}\n","import { Utils } from \"../Utils/Utils\";\nimport { HoverMode } from \"../../Enums/Modes/HoverMode\";\nexport class Mover {\n    constructor(container, particle) {\n        this.container = container;\n        this.particle = particle;\n    }\n    move(delta) {\n        const container = this.container;\n        const options = container.options;\n        const particle = this.particle;\n        if (options.particles.move.enable) {\n            const slowFactor = this.getProximitySpeedFactor();\n            const deltaFactor = options.fpsLimit > 0 ? (60 * delta) / 1000 : 3.6;\n            const moveSpeed = container.retina.moveSpeed / 2 * slowFactor * deltaFactor;\n            particle.position.x += particle.velocity.horizontal * moveSpeed;\n            particle.position.y += particle.velocity.vertical * moveSpeed;\n        }\n        this.moveParallax();\n    }\n    moveParallax() {\n        const container = this.container;\n        const options = container.options;\n        if (!options.interactivity.events.onHover.parallax.enable) {\n            return;\n        }\n        const particle = this.particle;\n        const parallaxForce = options.interactivity.events.onHover.parallax.force;\n        const mousePos = container.interactivity.mouse.position || { x: 0, y: 0 };\n        const windowDimension = {\n            height: window.innerHeight / 2,\n            width: window.innerWidth / 2,\n        };\n        const parallaxSmooth = options.interactivity.events.onHover.parallax.smooth;\n        const tmp = {\n            x: (mousePos.x - windowDimension.width) * (particle.radius / parallaxForce),\n            y: (mousePos.y - windowDimension.height) * (particle.radius / parallaxForce),\n        };\n        particle.offset.x += (tmp.x - particle.offset.x) / parallaxSmooth;\n        particle.offset.y += (tmp.y - particle.offset.y) / parallaxSmooth;\n    }\n    getProximitySpeedFactor() {\n        const container = this.container;\n        const options = container.options;\n        const particle = this.particle;\n        const active = Utils.isInArray(HoverMode.slow, options.interactivity.events.onHover.mode);\n        if (!active) {\n            return 1;\n        }\n        const mousePos = this.container.interactivity.mouse.position;\n        if (!mousePos) {\n            return 1;\n        }\n        const particlePos = particle.position;\n        const dist = Utils.getDistanceBetweenCoordinates(mousePos, particlePos);\n        const radius = container.retina.slowModeRadius;\n        if (dist > radius) {\n            return 1;\n        }\n        const proximityFactor = (dist / radius) || 0;\n        const slowFactor = options.interactivity.modes.slow.factor;\n        return proximityFactor / slowFactor;\n    }\n}\n","import { ClickMode } from \"../../Enums/Modes/ClickMode\";\nimport { HoverMode } from \"../../Enums/Modes/HoverMode\";\nimport { OutMode } from \"../../Enums/OutMode\";\nimport { Utils } from \"../Utils/Utils\";\nimport { DivMode } from \"../../Enums/Modes/DivMode\";\nimport { Constants } from \"../Utils/Constants\";\nexport class Repulser {\n    constructor(container, particle) {\n        this.container = container;\n        this.particle = particle;\n    }\n    repulse() {\n        const container = this.container;\n        const options = container.options;\n        const hoverEnabled = options.interactivity.events.onHover.enable;\n        const clickEnabled = options.interactivity.events.onClick.enable;\n        const mouseMoveStatus = container.interactivity.status === Constants.mouseMoveEvent;\n        const hoverMode = options.interactivity.events.onHover.mode;\n        const clickMode = options.interactivity.events.onClick.mode;\n        const divMode = options.interactivity.events.onDiv.mode;\n        if (mouseMoveStatus && hoverEnabled && Utils.isInArray(HoverMode.repulse, hoverMode)) {\n            this.hoverRepulse();\n        }\n        else if (clickEnabled && Utils.isInArray(ClickMode.repulse, clickMode)) {\n            this.clickRepulse();\n        }\n        else if (options.interactivity.events.onDiv.enable && Utils.isInArray(DivMode.repulse, divMode)) {\n            this.divRepulse();\n        }\n    }\n    divRepulse() {\n        const container = this.container;\n        const options = container.options;\n        const particle = this.particle;\n        const elem = document.getElementById(options.interactivity.events.onDiv.elementId);\n        const pos = {\n            x: (elem.offsetLeft + elem.offsetWidth / 2),\n            y: (elem.offsetTop + elem.offsetHeight / 2),\n        };\n        let divWidth = elem.offsetWidth / 2;\n        if (container.retina.isRetina) {\n            pos.x *= container.retina.pxRatio;\n            pos.y *= container.retina.pxRatio;\n            divWidth *= container.retina.pxRatio;\n        }\n        const dxDiv = particle.position.x - pos.x;\n        const dyDiv = particle.position.y - pos.y;\n        const distDiv = Math.sqrt(dxDiv * dxDiv + dyDiv * dyDiv);\n        const normVec = {\n            x: dxDiv / distDiv,\n            y: dyDiv / distDiv,\n        };\n        const repulseRadius = divWidth;\n        const velocity = 100;\n        const repulseFactor = Utils.clamp((-Math.pow(distDiv / repulseRadius, 4) + 1) * velocity, 0, 50);\n        this.particle.position.x += normVec.x * repulseFactor;\n        this.particle.position.y += normVec.y * repulseFactor;\n    }\n    clickRepulse() {\n        const container = this.container;\n        const particle = this.particle;\n        if (!container.repulse.finish) {\n            if (!container.repulse.count) {\n                container.repulse.count = 0;\n            }\n            container.repulse.count++;\n            if (container.repulse.count === container.particles.count) {\n                container.repulse.finish = true;\n            }\n        }\n        if (container.repulse.clicking) {\n            const repulseDistance = container.retina.repulseModeDistance;\n            const repulseRadius = Math.pow(repulseDistance / 6, 3);\n            const mouseClickPos = container.interactivity.mouse.clickPosition || { x: 0, y: 0 };\n            const dx = mouseClickPos.x - particle.position.x;\n            const dy = mouseClickPos.y - particle.position.y;\n            const d = dx * dx + dy * dy;\n            const force = -repulseRadius / d;\n            if (d <= repulseRadius) {\n                this.processRepulse(dx, dy, force);\n            }\n        }\n        else if (container.repulse.clicking === false) {\n            particle.velocity.horizontal = particle.initialVelocity.horizontal;\n            particle.velocity.vertical = particle.initialVelocity.vertical;\n        }\n    }\n    hoverRepulse() {\n        const container = this.container;\n        const options = container.options;\n        const particle = this.particle;\n        const mousePos = container.interactivity.mouse.position || { x: 0, y: 0 };\n        const dxMouse = particle.position.x - mousePos.x;\n        const dyMouse = particle.position.y - mousePos.y;\n        const distMouse = Math.sqrt(dxMouse * dxMouse + dyMouse * dyMouse);\n        const normVec = { x: dxMouse / distMouse, y: dyMouse / distMouse };\n        const repulseRadius = container.retina.repulseModeDistance;\n        const velocity = 100;\n        const repulseFactor = Utils.clamp((1 - Math.pow(distMouse / repulseRadius, 2)) * velocity, 0, 50);\n        const pos = {\n            x: particle.position.x + normVec.x * repulseFactor,\n            y: particle.position.y + normVec.y * repulseFactor,\n        };\n        const outMode = options.particles.move.outMode;\n        if (outMode === OutMode.bounce || outMode === OutMode.bounceVertical || outMode === OutMode.bounceHorizontal) {\n            const isInside = {\n                horizontal: pos.x - particle.radius > 0 && pos.x + particle.radius < container.canvas.dimension.width,\n                vertical: pos.y - particle.radius > 0 && pos.y + particle.radius < container.canvas.dimension.height,\n            };\n            if (outMode === OutMode.bounceVertical || isInside.horizontal) {\n                particle.position.x = pos.x;\n            }\n            if (outMode === OutMode.bounceHorizontal || isInside.vertical) {\n                particle.position.y = pos.y;\n            }\n        }\n        else {\n            particle.position.x = pos.x;\n            particle.position.y = pos.y;\n        }\n    }\n    processRepulse(dx, dy, force) {\n        const container = this.container;\n        const options = container.options;\n        const particle = this.particle;\n        const f = Math.atan2(dy, dx);\n        particle.velocity.horizontal = force * Math.cos(f);\n        particle.velocity.vertical = force * Math.sin(f);\n        const outMode = options.particles.move.outMode;\n        if (outMode === OutMode.bounce || outMode === OutMode.bounceHorizontal || outMode === OutMode.bounceVertical) {\n            const pos = {\n                x: particle.position.x + particle.velocity.horizontal,\n                y: particle.position.y + particle.velocity.vertical,\n            };\n            if (outMode !== OutMode.bounceVertical) {\n                if (pos.x + particle.radius > container.canvas.dimension.width || pos.x - particle.radius < 0) {\n                    particle.velocity.horizontal = -particle.velocity.horizontal;\n                }\n            }\n            if (outMode !== OutMode.bounceHorizontal) {\n                if (pos.y + particle.radius > container.canvas.dimension.height || pos.y - particle.radius < 0) {\n                    particle.velocity.vertical = -particle.velocity.vertical;\n                }\n            }\n        }\n    }\n}\n","import { OutMode } from \"../../Enums/OutMode\";\nimport { Utils } from \"../Utils/Utils\";\nimport { PolygonMaskType } from \"../../Enums/PolygonMaskType\";\nimport { Mover } from \"./Mover\";\nimport { RotateDirection } from \"../../Enums/RotateDirection\";\nexport class Updater {\n    constructor(container, particle) {\n        this.container = container;\n        this.particle = particle;\n        this.mover = new Mover(container, particle);\n    }\n    static checkBounds(coordinate, radius, size, outside) {\n        if ((coordinate + radius > size) || (coordinate - radius < 0)) {\n            outside();\n        }\n    }\n    update(delta) {\n        this.mover.move(delta);\n        this.updateOpacity();\n        this.updateSize();\n        this.updateAngle();\n        this.fixOutOfCanvasPosition();\n        this.updateOutMode();\n    }\n    updateOpacity() {\n        const container = this.container;\n        const options = container.options;\n        const particle = this.particle;\n        if (options.particles.opacity.animation.enable) {\n            if (particle.opacity.status) {\n                if (particle.opacity.value >= options.particles.opacity.value) {\n                    particle.opacity.status = false;\n                }\n                particle.opacity.value += (particle.opacity.velocity || 0);\n            }\n            else {\n                if (particle.opacity.value <= options.particles.opacity.animation.minimumValue) {\n                    particle.opacity.status = true;\n                }\n                particle.opacity.value -= (particle.opacity.velocity || 0);\n            }\n            if (particle.opacity.value < 0) {\n                particle.opacity.value = 0;\n            }\n        }\n    }\n    updateSize() {\n        const container = this.container;\n        const options = container.options;\n        const particle = this.particle;\n        if (options.particles.size.animation.enable) {\n            if (particle.size.status) {\n                if (particle.radius >= container.retina.sizeValue) {\n                    particle.size.status = false;\n                }\n                particle.radius += (particle.size.velocity || 0);\n            }\n            else {\n                if (particle.radius <= options.particles.size.animation.minimumValue) {\n                    particle.size.status = true;\n                }\n                particle.radius -= (particle.size.velocity || 0);\n            }\n            if (particle.radius < 0) {\n                particle.radius = 0;\n            }\n        }\n    }\n    updateAngle() {\n        const container = this.container;\n        const options = container.options;\n        const particle = this.particle;\n        if (options.particles.rotate.animation.enable) {\n            switch (particle.rotateDirection) {\n                case RotateDirection.clockwise:\n                    particle.angle += options.particles.rotate.animation.speed * Math.PI / 18;\n                    if (particle.angle > 360) {\n                        particle.angle -= 360;\n                    }\n                    break;\n                case RotateDirection.counterClockwise:\n                default:\n                    particle.angle -= options.particles.rotate.animation.speed * Math.PI / 18;\n                    if (particle.angle < 0) {\n                        particle.angle += 360;\n                    }\n                    break;\n            }\n        }\n    }\n    fixOutOfCanvasPosition() {\n        const container = this.container;\n        const options = container.options;\n        const particle = this.particle;\n        const outMode = options.particles.move.outMode;\n        const canvasSize = container.canvas.dimension;\n        let newPos;\n        if (outMode === OutMode.bounce) {\n            newPos = {\n                bottom: canvasSize.height,\n                left: particle.radius,\n                right: canvasSize.width,\n                top: particle.radius,\n            };\n        }\n        else if (outMode === OutMode.bounceHorizontal) {\n            newPos = {\n                bottom: canvasSize.height + particle.radius - particle.offset.y,\n                left: particle.radius,\n                right: canvasSize.width,\n                top: -particle.radius - particle.offset.y,\n            };\n        }\n        else if (outMode === OutMode.bounceVertical) {\n            newPos = {\n                bottom: canvasSize.height,\n                left: -particle.radius - particle.offset.x,\n                right: canvasSize.width + particle.radius + particle.offset.x,\n                top: particle.radius,\n            };\n        }\n        else {\n            newPos = {\n                bottom: canvasSize.height + particle.radius - particle.offset.y,\n                left: -particle.radius - particle.offset.x,\n                right: canvasSize.width + particle.radius + particle.offset.x,\n                top: -particle.radius - particle.offset.y,\n            };\n        }\n        if (outMode === OutMode.destroy) {\n            if (Utils.isPointInside(particle.position, container.canvas.dimension, particle.radius)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const nextBounds = Utils.calculateBounds(particle.position, particle.radius);\n            if (nextBounds.left > canvasSize.width - particle.offset.x) {\n                particle.position.x = newPos.left;\n                particle.position.y = Math.random() * canvasSize.height;\n            }\n            else if (nextBounds.right < -particle.offset.x) {\n                particle.position.x = newPos.right;\n                particle.position.y = Math.random() * canvasSize.height;\n            }\n            if (nextBounds.top > canvasSize.height - particle.offset.y) {\n                particle.position.y = newPos.top;\n                particle.position.x = Math.random() * canvasSize.width;\n            }\n            else if (nextBounds.bottom < -particle.offset.y) {\n                particle.position.y = newPos.bottom;\n                particle.position.x = Math.random() * canvasSize.width;\n            }\n        }\n    }\n    updateOutMode() {\n        const container = this.container;\n        const options = container.options;\n        switch (options.particles.move.outMode) {\n            case OutMode.bounce:\n            case OutMode.bounceVertical:\n            case OutMode.bounceHorizontal:\n                this.updateBounce();\n                break;\n        }\n    }\n    updateBounce() {\n        const container = this.container;\n        const options = container.options;\n        const particle = this.particle;\n        if (options.polygon.enable && options.polygon.type !== PolygonMaskType.none &&\n            options.polygon.type !== PolygonMaskType.inline) {\n            if (!container.polygon.checkInsidePolygon(particle.position)) {\n                this.polygonBounce();\n            }\n        }\n        else if (options.polygon.enable && options.polygon.type === PolygonMaskType.inline) {\n            if (particle.initialPosition) {\n                const dist = Utils.getDistanceBetweenCoordinates(particle.initialPosition, particle.position);\n                if (dist > container.retina.polygonMaskMoveRadius) {\n                    this.polygonBounce();\n                }\n            }\n        }\n        else {\n            const outMode = options.particles.move.outMode;\n            const x = particle.position.x + particle.offset.x;\n            const y = particle.position.y + particle.offset.y;\n            if (outMode === OutMode.bounce || outMode === OutMode.bounceHorizontal) {\n                Updater.checkBounds(x, particle.radius, container.canvas.dimension.width, () => {\n                    particle.velocity.horizontal = -particle.velocity.horizontal;\n                });\n            }\n            if (outMode === OutMode.bounce || outMode === OutMode.bounceVertical) {\n                Updater.checkBounds(y, particle.radius, container.canvas.dimension.height, () => {\n                    particle.velocity.vertical = -particle.velocity.vertical;\n                });\n            }\n        }\n    }\n    polygonBounce() {\n        const particle = this.particle;\n        particle.velocity.horizontal = -particle.velocity.horizontal + (particle.velocity.vertical / 2);\n        particle.velocity.vertical = -particle.velocity.vertical + (particle.velocity.horizontal / 2);\n    }\n}\n","import { Particle } from \"./Particle\";\nimport { PolygonMaskType } from \"../Enums/PolygonMaskType\";\nimport { PolygonMaskInlineArrangement } from \"../Enums/PolygonMaskInlineArrangement\";\nexport class Particles {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.interactionsEnabled = false;\n    }\n    get count() {\n        return this.array.length;\n    }\n    init() {\n        const container = this.container;\n        const options = container.options;\n        if (options.polygon.enable && options.polygon.type === PolygonMaskType.inline &&\n            (options.polygon.inline.arrangement === PolygonMaskInlineArrangement.onePerPoint ||\n                options.polygon.inline.arrangement === PolygonMaskInlineArrangement.perPoint)) {\n            container.polygon.drawPointsOnPolygonPath();\n        }\n        else {\n            for (let i = this.array.length; i < options.particles.number.value; i++) {\n                this.addParticle(new Particle(container));\n            }\n        }\n        this.interactionsEnabled = options.particles.lineLinked.enable ||\n            options.particles.move.attract.enable ||\n            options.particles.move.collisions;\n    }\n    redraw() {\n        this.clear();\n        this.init();\n        this.draw(0);\n    }\n    removeAt(index, quantity) {\n        if (index >= 0 && index <= this.count) {\n            this.array.splice(index, quantity !== null && quantity !== void 0 ? quantity : 1);\n        }\n    }\n    remove(particle) {\n        this.removeAt(this.array.indexOf(particle));\n    }\n    update(delta) {\n        for (let i = 0; i < this.array.length; i++) {\n            const p = this.array[i];\n            p.update(i, delta);\n            if (this.interactionsEnabled) {\n                for (let j = i + 1; j < this.array.length; j++) {\n                    const p2 = this.array[j];\n                    p.interact(p2);\n                }\n            }\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        const options = container.options;\n        container.canvas.clear();\n        this.update(delta);\n        if (options.polygon.enable && options.polygon.draw.enable) {\n            container.polygon.drawPolygon();\n        }\n        for (const p of this.array) {\n            p.draw();\n        }\n    }\n    clear() {\n        this.array = [];\n    }\n    push(nb, mousePosition) {\n        var _a;\n        const container = this.container;\n        const options = container.options;\n        this.pushing = true;\n        if (options.particles.number.limit > 0) {\n            if ((this.array.length + nb) > options.particles.number.limit) {\n                this.removeQuantity((this.array.length + nb) - options.particles.number.limit);\n            }\n        }\n        let pos;\n        if (mousePosition) {\n            pos = (_a = mousePosition.position) !== null && _a !== void 0 ? _a : { x: 0, y: 0 };\n        }\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(new Particle(container, pos));\n        }\n        if (!options.particles.move.enable) {\n            this.container.play();\n        }\n        this.pushing = false;\n    }\n    addParticle(particle) {\n        this.array.push(particle);\n    }\n    removeQuantity(quantity) {\n        const container = this.container;\n        const options = container.options;\n        this.removeAt(0, quantity);\n        if (!options.particles.move.enable) {\n            this.container.play();\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { PolygonMaskType } from \"../Enums/PolygonMaskType\";\nimport { Particle } from \"./Particle\";\nimport { PolygonMaskInlineArrangement } from \"../Enums/PolygonMaskInlineArrangement\";\nimport { Utils } from \"./Utils/Utils\";\nexport class PolygonMask {\n    constructor(container) {\n        this.container = container;\n        this.dimension = {\n            height: 0,\n            width: 0\n        };\n        this.polygonPathLength = 0;\n        this.path2DSupported = window.hasOwnProperty(\"Path2D\");\n    }\n    checkInsidePolygon(position) {\n        const container = this.container;\n        const options = container.options;\n        if (!options.polygon.enable ||\n            options.polygon.type === PolygonMaskType.none ||\n            options.polygon.type === PolygonMaskType.inline) {\n            return true;\n        }\n        if (!this.raw) {\n            console.error('No polygon found, you need to specify SVG url in config.');\n            return true;\n        }\n        const x = position ? position.x : Math.random() * container.canvas.dimension.width;\n        const y = position ? position.y : Math.random() * container.canvas.dimension.height;\n        let inside = false;\n        for (let i = 0, j = this.raw.length - 1; i < this.raw.length; j = i++) {\n            const xi = this.raw[i].x;\n            const yi = this.raw[i].y;\n            const xj = this.raw[j].x;\n            const yj = this.raw[j].y;\n            const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n            if (intersect) {\n                inside = !inside;\n            }\n        }\n        if (options.polygon.type === PolygonMaskType.inside) {\n            return inside;\n        }\n        else if (options.polygon.type === PolygonMaskType.outside) {\n            return !inside;\n        }\n        return false;\n    }\n    redraw() {\n        const container = this.container;\n        const options = container.options;\n        if (options.polygon.enable && options.polygon.type !== PolygonMaskType.none) {\n            if (this.redrawTimeout) {\n                clearTimeout(this.redrawTimeout);\n            }\n            this.redrawTimeout = setTimeout(() => {\n                this.parseSvgPathToPolygon().then((data) => {\n                    this.raw = data;\n                    this.createPath2D();\n                    container.particles.redraw();\n                });\n            }, 250);\n        }\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const container = this.container;\n            const options = container.options;\n            if (options.polygon.enable && options.polygon.url) {\n                this.raw = yield this.parseSvgPathToPolygon(options.polygon.url);\n                this.createPath2D();\n            }\n        });\n    }\n    reset() {\n        delete this.raw;\n        delete this.path;\n        delete this.svg;\n    }\n    randomPointInPolygon() {\n        const container = this.container;\n        const options = container.options;\n        let position;\n        if (options.polygon.type === PolygonMaskType.inline) {\n            switch (options.polygon.inline.arrangement) {\n                case PolygonMaskInlineArrangement.randomPoint:\n                    position = this.getRandomPointOnPolygonPath();\n                    break;\n                case PolygonMaskInlineArrangement.randomLength:\n                    position = this.getRandomPointOnPolygonPathByLength();\n                    break;\n                case PolygonMaskInlineArrangement.equidistant:\n                    position = this.getEquidistantPointOnPolygonPathByIndex(container.particles.count);\n                    break;\n                case PolygonMaskInlineArrangement.onePerPoint:\n                case PolygonMaskInlineArrangement.perPoint:\n                default:\n                    position = this.getPoingOnPolygonPathByIndex(container.particles.count);\n            }\n        }\n        else {\n            position = {\n                x: Math.random() * container.canvas.dimension.width,\n                y: Math.random() * container.canvas.dimension.height,\n            };\n        }\n        if (this.checkInsidePolygon(position)) {\n            return position;\n        }\n        else {\n            return this.randomPointInPolygon();\n        }\n    }\n    parseSvgPathToPolygon(svgUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const container = this.container;\n            const options = container.options;\n            const url = svgUrl || options.polygon.url;\n            if (!this.path || !this.svg) {\n                const req = yield fetch(url);\n                if (req.ok) {\n                    const xml = yield req.text();\n                    const parser = new DOMParser();\n                    const doc = parser.parseFromString(xml, \"image/svg+xml\");\n                    this.svg = doc.getElementsByTagName(\"svg\")[0];\n                    this.path = doc.getElementsByTagName(\"path\")[0];\n                    if (this.path) {\n                        this.polygonPathLength = this.path.getTotalLength();\n                    }\n                }\n                else {\n                    console.error(\"tsParticles Error - during polygon mask download\");\n                    return;\n                }\n            }\n            const scale = options.polygon.scale;\n            this.dimension.width = parseFloat(this.svg.getAttribute(\"width\") || \"0\") * scale;\n            this.dimension.height = parseFloat(this.svg.getAttribute(\"height\") || \"0\") * scale;\n            this.offset = {\n                x: container.canvas.dimension.width / 2 - this.dimension.width / 2,\n                y: container.canvas.dimension.height / 2 - this.dimension.height / 2,\n            };\n            const len = this.path.pathSegList.numberOfItems;\n            const polygonRaw = [];\n            const p = {\n                x: 0,\n                y: 0,\n            };\n            for (let i = 0; i < len; i++) {\n                const segment = this.path.pathSegList.getItem(i);\n                switch (segment.pathSegType) {\n                    case window.SVGPathSeg.PATHSEG_MOVETO_ABS:\n                    case window.SVGPathSeg.PATHSEG_LINETO_ABS:\n                    case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                    case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                    case window.SVGPathSeg.PATHSEG_ARC_ABS:\n                    case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                    case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\n                        const absSeg = segment;\n                        p.x = absSeg.x;\n                        p.y = absSeg.y;\n                        break;\n                    case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                        p.x = segment.x;\n                        break;\n                    case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                        p.y = segment.y;\n                        break;\n                    case window.SVGPathSeg.PATHSEG_LINETO_REL:\n                    case window.SVGPathSeg.PATHSEG_MOVETO_REL:\n                    case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                    case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                    case window.SVGPathSeg.PATHSEG_ARC_REL:\n                    case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                    case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\n                        const relSeg = segment;\n                        p.x += relSeg.x;\n                        p.y += relSeg.y;\n                        break;\n                    case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                        p.x += segment.x;\n                        break;\n                    case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                        p.y += segment.y;\n                        break;\n                    case window.SVGPathSeg.PATHSEG_UNKNOWN:\n                    case window.SVGPathSeg.PATHSEG_CLOSEPATH:\n                        continue;\n                }\n                polygonRaw.push({\n                    x: p.x * scale + this.offset.x,\n                    y: p.y * scale + this.offset.y,\n                });\n            }\n            return polygonRaw;\n        });\n    }\n    drawPolygon() {\n        const container = this.container;\n        container.canvas.drawPolygonMask();\n    }\n    drawPointsOnPolygonPath() {\n        const container = this.container;\n        if (this.raw) {\n            for (const item of this.raw) {\n                const position = {\n                    x: item.x,\n                    y: item.y,\n                };\n                container.particles.addParticle(new Particle(container, position));\n            }\n        }\n    }\n    getRandomPointOnPolygonPath() {\n        if (!this.raw || !this.raw.length)\n            throw new Error(`No polygon data loaded.`);\n        const coords = Utils.itemFromArray(this.raw);\n        return {\n            x: coords.x,\n            y: coords.y,\n        };\n    }\n    getRandomPointOnPolygonPathByLength() {\n        var _a, _b;\n        const container = this.container;\n        const options = container.options;\n        if (!this.raw || !this.raw.length || !this.path)\n            throw new Error(`No polygon data loaded.`);\n        const distance = Math.floor(Math.random() * this.polygonPathLength) + 1;\n        const point = this.path.getPointAtLength(distance);\n        return {\n            x: point.x * options.polygon.scale + (((_a = this.offset) === null || _a === void 0 ? void 0 : _a.x) || 0),\n            y: point.y * options.polygon.scale + (((_b = this.offset) === null || _b === void 0 ? void 0 : _b.y) || 0),\n        };\n    }\n    getEquidistantPointOnPolygonPathByIndex(index) {\n        var _a, _b;\n        const container = this.container;\n        const options = container.options;\n        if (!this.raw || !this.raw.length || !this.path)\n            throw new Error(`No polygon data loaded.`);\n        const distance = (this.polygonPathLength / options.particles.number.value) * index;\n        const point = this.path.getPointAtLength(distance);\n        return {\n            x: point.x * options.polygon.scale + (((_a = this.offset) === null || _a === void 0 ? void 0 : _a.x) || 0),\n            y: point.y * options.polygon.scale + (((_b = this.offset) === null || _b === void 0 ? void 0 : _b.y) || 0),\n        };\n    }\n    getPoingOnPolygonPathByIndex(index) {\n        if (!this.raw || !this.raw.length)\n            throw new Error(`No polygon data loaded.`);\n        const coords = this.raw[index % this.raw.length];\n        return {\n            x: coords.x,\n            y: coords.y,\n        };\n    }\n    createPath2D() {\n        var _a;\n        if (!this.path2DSupported) {\n            return;\n        }\n        const pathData = (_a = this.path) === null || _a === void 0 ? void 0 : _a.getAttribute(\"d\");\n        if (pathData) {\n            const path = new Path2D(pathData);\n            const matrix = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\").createSVGMatrix();\n            const finalPath = new Path2D();\n            const transform = matrix.scale(this.container.options.polygon.scale);\n            if (finalPath.addPath) {\n                finalPath.addPath(path, transform);\n                this.polygonPath = finalPath;\n            }\n            else {\n                delete this.polygonPath;\n            }\n        }\n        else {\n            delete this.polygonPath;\n        }\n        if (!this.polygonPath && this.raw) {\n            this.polygonPath = new Path2D();\n            this.polygonPath.moveTo(this.raw[0].x, this.raw[0].y);\n            this.raw.forEach((pos, i) => {\n                var _a;\n                if (i > 0) {\n                    (_a = this.polygonPath) === null || _a === void 0 ? void 0 : _a.lineTo(pos.x, pos.y);\n                }\n            });\n            this.polygonPath.closePath();\n        }\n    }\n}\n","export class Retina {\n    constructor(container) {\n        this.container = container;\n        this.isRetina = false;\n        this.bubbleModeDistance = 0;\n        this.bubbleModeSize = 0;\n        this.connectModeDistance = 0;\n        this.connectModeRadius = 0;\n        this.grabModeDistance = 0;\n        this.repulseModeDistance = 0;\n        this.slowModeRadius = 0;\n        this.lineLinkedDistance = 0;\n        this.lineLinkedWidth = 0;\n        this.moveSpeed = 0;\n        this.sizeValue = 0;\n        this.sizeAnimationSpeed = 0;\n        this.polygonMaskMoveRadius = 0;\n        this.pxRatio = 1;\n    }\n    init() {\n        const container = this.container;\n        const options = container.options;\n        if (options.detectRetina && window.devicePixelRatio > 1) {\n            this.pxRatio = window.devicePixelRatio;\n            this.isRetina = true;\n        }\n        else {\n            this.pxRatio = 1;\n            this.isRetina = false;\n        }\n        const ratio = this.pxRatio;\n        if (container.canvas.element) {\n            container.canvas.dimension.width = container.canvas.element.offsetWidth * ratio;\n            container.canvas.dimension.height = container.canvas.element.offsetHeight * ratio;\n        }\n        this.bubbleModeDistance = options.interactivity.modes.bubble.distance * ratio;\n        this.bubbleModeSize = options.interactivity.modes.bubble.size * ratio;\n        this.connectModeDistance = options.interactivity.modes.connect.distance * ratio;\n        this.connectModeRadius = options.interactivity.modes.connect.radius * ratio;\n        this.grabModeDistance = options.interactivity.modes.grab.distance * ratio;\n        this.repulseModeDistance = options.interactivity.modes.repulse.distance * ratio;\n        this.slowModeRadius = options.interactivity.modes.slow.radius * ratio;\n        this.lineLinkedDistance = options.particles.lineLinked.distance * ratio;\n        this.lineLinkedWidth = options.particles.lineLinked.width * ratio;\n        this.moveSpeed = options.particles.move.speed * ratio;\n        this.sizeValue = options.particles.size.value * ratio;\n        this.sizeAnimationSpeed = options.particles.size.animation.speed * ratio;\n        this.polygonMaskMoveRadius = options.polygon.move.radius * ratio;\n    }\n    reset() {\n    }\n}\n","export class CircleDrawer {\n    draw(context, particle, radius, opacity) {\n        context.arc(0, 0, radius, 0, Math.PI * 2, false);\n    }\n}\n","export class ImageDrawer {\n    draw(context, particle, radius, opacity) {\n        var _a;\n        if (!context) {\n            return;\n        }\n        const imgObj = (_a = particle.image) === null || _a === void 0 ? void 0 : _a.data.obj;\n        if (!imgObj) {\n            return;\n        }\n        let ratio = 1;\n        if (particle.image) {\n            ratio = particle.image.ratio;\n        }\n        const pos = {\n            x: -radius,\n            y: -radius,\n        };\n        context.globalAlpha = opacity;\n        context.drawImage(imgObj, pos.x, pos.y, radius * 2, radius * 2 / ratio);\n        context.globalAlpha = 1;\n    }\n}\n","export class LineDrawer {\n    draw(context, particle, radius, opacity) {\n        context.moveTo(0, -radius / 2);\n        context.lineTo(0, radius / 2);\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getSidesData(particle, radius) {\n        var _a, _b;\n        const sides = (_b = (_a = particle.polygon) === null || _a === void 0 ? void 0 : _a.sides) !== null && _b !== void 0 ? _b : 5;\n        const side = {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: radius * 2.66 / (sides / 3),\n        };\n        return side;\n    }\n    getCenter(particle, radius) {\n        var _a, _b;\n        const sides = (_b = (_a = particle.polygon) === null || _a === void 0 ? void 0 : _a.sides) !== null && _b !== void 0 ? _b : 5;\n        const start = {\n            x: -radius / (sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n        return start;\n    }\n}\n","export class PolygonDrawerBase {\n    draw(context, particle, radius, opacity) {\n        const start = this.getCenter(particle, radius);\n        const side = this.getSidesData(particle, radius);\n        const sideCount = side.count.numerator * side.count.denominator;\n        const decimalSides = side.count.numerator / side.count.denominator;\n        const interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides;\n        const interiorAngle = Math.PI - Math.PI * interiorAngleDegrees / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n}\n","export class SquareDrawer {\n    draw(context, particle, radius, opacity) {\n        context.rect(-radius, -radius, radius * 2, radius * 2);\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class StarDrawer extends PolygonDrawerBase {\n    getSidesData(particle, radius) {\n        var _a, _b;\n        const sides = (_b = (_a = particle.polygon) === null || _a === void 0 ? void 0 : _a.sides) !== null && _b !== void 0 ? _b : 5;\n        const side = {\n            count: {\n                denominator: 2,\n                numerator: sides,\n            },\n            length: radius * 2 * 2.66 / (sides / 3),\n        };\n        return side;\n    }\n    getCenter(particle, radius) {\n        var _a, _b;\n        const sides = (_b = (_a = particle.polygon) === null || _a === void 0 ? void 0 : _a.sides) !== null && _b !== void 0 ? _b : 5;\n        const start = {\n            x: -radius * 2 / (sides / 4),\n            y: -radius / (2 * 2.66 / 3.5),\n        };\n        return start;\n    }\n}\n","export class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        const text = particle.text;\n        const character = particle.character;\n        if (text === undefined || character === undefined) {\n            return;\n        }\n        const style = character.style;\n        const weight = character.weight;\n        const size = Math.round(radius) * 2;\n        const font = character.font;\n        const fill = character.fill;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -radius / 2,\n            y: radius / 2,\n        };\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getSidesData(particle, radius) {\n        const side = {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n        return side;\n    }\n    getCenter(particle, radius) {\n        const start = {\n            x: -radius,\n            y: radius / 1.66,\n        };\n        return start;\n    }\n}\n","import { ShapeUtils } from \"./ShapeUtils\";\nimport { ColorUtils } from \"./ColorUtils\";\nexport class CanvasUtils {\n    static paintBase(context, dimension, baseColor) {\n        context.save();\n        context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n        context.fillRect(0, 0, dimension.width, dimension.height);\n        context.restore();\n    }\n    static clear(context, dimension) {\n        context.clearRect(0, 0, dimension.width, dimension.height);\n    }\n    static drawPolygonMask(context, rawData, stroke) {\n        const color = typeof stroke.color === \"string\" ?\n            ColorUtils.stringToRgb(stroke.color) :\n            ColorUtils.colorToRgb(stroke.color);\n        if (color) {\n            context.save();\n            context.beginPath();\n            context.moveTo(rawData[0].x, rawData[0].y);\n            for (let i = 1; i < rawData.length; i++) {\n                context.lineTo(rawData[i].x, rawData[i].y);\n            }\n            context.closePath();\n            context.strokeStyle = ColorUtils.getStyleFromColor(color);\n            context.lineWidth = stroke.width;\n            context.stroke();\n            context.restore();\n        }\n    }\n    static drawPolygonMaskPath(context, path, stroke, position) {\n        context.save();\n        context.translate(position.x, position.y);\n        const color = typeof stroke.color === \"string\" ?\n            ColorUtils.stringToRgb(stroke.color) :\n            ColorUtils.colorToRgb(stroke.color);\n        if (color) {\n            context.strokeStyle = ColorUtils.getStyleFromColor(color, stroke.opacity);\n            context.lineWidth = stroke.width;\n            context.stroke(path);\n        }\n        context.restore();\n    }\n    static drawLineLinked(context, width, begin, end, backgroundMask, colorLine, opacity, shadow) {\n        context.save();\n        if (backgroundMask) {\n            context.globalCompositeOperation = 'destination-out';\n        }\n        if (colorLine) {\n            context.strokeStyle = ColorUtils.getStyleFromColor(colorLine, opacity);\n            ;\n        }\n        context.lineWidth = width;\n        context.beginPath();\n        const color = typeof shadow.color === \"string\" ?\n            ColorUtils.stringToRgb(shadow.color) :\n            ColorUtils.colorToRgb(shadow.color);\n        if (shadow.enable && color) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = ColorUtils.getStyleFromColor(color);\n        }\n        context.moveTo(begin.x, begin.y);\n        context.lineTo(end.x, end.y);\n        context.stroke();\n        context.closePath();\n        context.restore();\n    }\n    static drawConnectLine(context, width, lineStyle, begin, end) {\n        context.save();\n        context.beginPath();\n        context.lineWidth = width;\n        context.strokeStyle = lineStyle;\n        context.moveTo(begin.x, begin.y);\n        context.lineTo(end.x, end.y);\n        context.stroke();\n        context.closePath();\n        context.restore();\n    }\n    static gradient(context, p1, p2, midColor, opacity) {\n        const gradStop = Math.floor(p2.radius / p1.radius);\n        if (!p1.color || !p2.color) {\n            return;\n        }\n        const sourcePos = p1.position;\n        const destPos = p2.position;\n        const grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n        grad.addColorStop(0, ColorUtils.getStyleFromColor(p1.color, opacity));\n        grad.addColorStop(gradStop > 1 ? 1 : gradStop, ColorUtils.getStyleFromColor(midColor, opacity));\n        grad.addColorStop(1, ColorUtils.getStyleFromColor(p2.color, opacity));\n        return grad;\n    }\n    static drawGrabLine(context, width, begin, end, colorLine, opacity) {\n        context.save();\n        context.strokeStyle = ColorUtils.getStyleFromColor(colorLine, opacity);\n        context.lineWidth = width;\n        context.beginPath();\n        context.moveTo(begin.x, begin.y);\n        context.lineTo(end.x, end.y);\n        context.stroke();\n        context.closePath();\n        context.restore();\n    }\n    static drawParticle(context, particle, colorValue, backgroundMask, radius, opacity) {\n        context.save();\n        const shadow = particle.container.options.particles.shadow;\n        const shadowColor = particle.shadowColor;\n        if (shadow.enable && shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = ColorUtils.getStyleFromColor(shadowColor);\n            context.shadowOffsetX = shadow.offset.x;\n            context.shadowOffsetY = shadow.offset.y;\n        }\n        context.fillStyle = colorValue;\n        const pos = {\n            x: particle.position.x + particle.offset.x,\n            y: particle.position.y + particle.offset.y,\n        };\n        context.translate(pos.x, pos.y);\n        context.beginPath();\n        if (particle.angle !== 0) {\n            context.rotate(particle.angle * Math.PI / 180);\n        }\n        if (backgroundMask) {\n            context.globalCompositeOperation = \"destination-out\";\n        }\n        const stroke = particle.stroke;\n        if (stroke.width > 0 && particle.strokeColor) {\n            context.strokeStyle = ColorUtils.getStyleFromColor(particle.strokeColor, particle.stroke.opacity);\n            context.lineWidth = stroke.width;\n        }\n        ShapeUtils.drawShape(context, particle, radius, opacity);\n        if (particle.close) {\n            context.closePath();\n        }\n        if (stroke.width > 0 && particle.strokeColor) {\n            context.stroke();\n        }\n        if (particle.fill) {\n            context.fill();\n        }\n        context.restore();\n    }\n}\n","import { Utils } from \"./Utils\";\nimport { Constants } from \"./Constants\";\nexport class ColorUtils {\n    static colorToRgb(color) {\n        let res;\n        if (typeof (color.value) === \"string\") {\n            if (color.value === Constants.randomColorValue) {\n                res = {\n                    b: Math.floor(Math.random() * 256),\n                    g: Math.floor(Math.random() * 256),\n                    r: Math.floor(Math.random() * 256),\n                };\n            }\n            else {\n                res = ColorUtils.stringToRgb(color.value);\n            }\n        }\n        else {\n            if (color.value instanceof Array) {\n                const colorSelected = Utils.itemFromArray(color.value);\n                res = ColorUtils.stringToRgb(colorSelected);\n            }\n            else {\n                const rgbColor = color.value;\n                if (rgbColor.r !== undefined) {\n                    res = rgbColor;\n                }\n                const hslColor = color.value;\n                if (hslColor.h !== undefined) {\n                    res = ColorUtils.hslToRgb(hslColor);\n                }\n            }\n        }\n        return res;\n    }\n    static stringToAlpha(input) {\n        var _a;\n        return (_a = ColorUtils.stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n    }\n    static stringToRgb(input) {\n        return ColorUtils.stringToRgba(input);\n    }\n    static hslToRgb(hsl) {\n        const result = { b: 0, g: 0, r: 0 };\n        if (hsl.s === 0) {\n            result.b = hsl.l;\n            result.g = hsl.l;\n            result.r = hsl.l;\n        }\n        else {\n            const q = hsl.l < 0.5 ? hsl.l * (1 + hsl.s) : hsl.l + hsl.s - hsl.l * hsl.s;\n            const p = 2 * hsl.l - q;\n            result.r = ColorUtils.hue2rgb(p, q, hsl.h + 1 / 3);\n            result.g = ColorUtils.hue2rgb(p, q, hsl.h);\n            result.b = ColorUtils.hue2rgb(p, q, hsl.h - 1 / 3);\n        }\n        result.r = Math.round(result.r * 255);\n        result.g = Math.round(result.g * 255);\n        result.b = Math.round(result.b * 255);\n        return result;\n    }\n    static hslaToRgba(hsla) {\n        const rgbResult = ColorUtils.hslToRgb(hsla);\n        return {\n            a: hsla.a,\n            b: rgbResult.b,\n            g: rgbResult.g,\n            r: rgbResult.r,\n        };\n    }\n    static getRandomRgbColor(min) {\n        var _a;\n        const fixedMin = min || 0;\n        const minColor = fixedMin + (fixedMin * Math.pow(16, 2)) + (fixedMin * Math.pow(16, 4));\n        const maxColor = minColor ^ 0xFFFFFF;\n        const randomColor = (Math.random() * maxColor + minColor).toString(16);\n        return (_a = this.stringToRgb(`#${randomColor}`)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n    }\n    static getStyleFromColor(color, opacity) {\n        const opacityValue = opacity !== null && opacity !== void 0 ? opacity : 1;\n        return `rgba(${Math.round(color.r)}, ${Math.round(color.g)}, ${Math.round(color.b)}, ${opacityValue})`;\n    }\n    static hue2rgb(p, q, t) {\n        let tCalc = t;\n        if (tCalc < 0) {\n            tCalc += 1;\n        }\n        if (tCalc > 1) {\n            tCalc -= 1;\n        }\n        if (tCalc < 1 / 6) {\n            return p + (q - p) * 6 * tCalc;\n        }\n        if (tCalc < 1 / 2) {\n            return q;\n        }\n        if (tCalc < 2 / 3) {\n            return p + (q - p) * (2 / 3 - tCalc) * 6;\n        }\n        return p;\n    }\n    static stringToRgba(input) {\n        if (input.startsWith('rgb')) {\n            const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d\\.]+)\\s*)?\\)/i;\n            const result = regex.exec(input);\n            return result ? {\n                a: result.length > 4 ? parseFloat(result[5]) : 1,\n                b: parseInt(result[3]),\n                g: parseInt(result[2]),\n                r: parseInt(result[1]),\n            } : undefined;\n        }\n        else if (input.startsWith('hsl')) {\n            const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([\\d\\.]+)\\s*)?\\)/i;\n            const result = regex.exec(input);\n            return result ? ColorUtils.hslaToRgba({\n                a: result.length > 4 ? parseFloat(result[5]) : 1,\n                h: parseInt(result[1]),\n                l: parseInt(result[3]),\n                s: parseInt(result[2]),\n            }) : undefined;\n        }\n        else {\n            const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i;\n            const hexFixed = input.replace(shorthandRegex, (_m, r, g, b, a) => {\n                return r + r + g + g + b + b + (a ? a + a : \"\");\n            });\n            const regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i;\n            const result = regex.exec(hexFixed);\n            return result ? {\n                a: parseInt(result[4], 16) / 0xFF,\n                b: parseInt(result[3], 16),\n                g: parseInt(result[2], 16),\n                r: parseInt(result[1], 16),\n            } : undefined;\n        }\n    }\n}\n","export class Constants {\n}\nConstants.canvasClass = \"tsparticles-canvas-el\";\nConstants.randomColorValue = \"random\";\nConstants.touchEndEvent = \"touchend\";\nConstants.mouseUpEvent = \"mouseup\";\nConstants.mouseMoveEvent = \"mousemove\";\nConstants.touchStartEvent = \"touchstart\";\nConstants.touchMoveEvent = \"touchmove\";\nConstants.mouseLeaveEvent = \"mouseleave\";\nConstants.touchCancelEvent = \"touchcancel\";\nConstants.resizeEvent = \"resize\";\nConstants.visibilityChangeEvent = \"visibilitychange\";\n","import { ClickMode } from \"../../Enums/Modes/ClickMode\";\nimport { InteractivityDetect } from \"../../Enums/InteractivityDetect\";\nimport { PolygonMaskType } from \"../../Enums/PolygonMaskType\";\nimport { Constants } from \"./Constants\";\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this.canPush = true;\n        this.mouseMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchStartHandler = (e) => this.mouseTouchMove(e);\n        this.touchMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchEndHandler = () => this.mouseTouchFinish();\n        this.mouseLeaveHandler = () => this.mouseTouchFinish();\n        this.touchCancelHandler = () => this.mouseTouchFinish();\n        this.touchEndClickHandler = (e) => this.mouseTouchClick(e);\n        this.mouseUpHandler = (e) => this.mouseTouchClick(e);\n        this.visibilityChangeHandler = () => this.handleVisibilityChange();\n        this.resizeHandler = () => this.handleWindowResize();\n    }\n    addListeners() {\n        this.manageListeners(true);\n    }\n    removeListeners() {\n        this.manageListeners(false);\n    }\n    manageListeners(add) {\n        const container = this.container;\n        const options = container.options;\n        if (options.interactivity.detectsOn === InteractivityDetect.window) {\n            container.interactivity.element = window;\n        }\n        else if (options.interactivity.detectsOn === InteractivityDetect.parent && container.canvas.element) {\n            container.interactivity.element = container.canvas.element.parentNode;\n        }\n        else {\n            container.interactivity.element = container.canvas.element;\n        }\n        const interactivityEl = container.interactivity.element;\n        if (interactivityEl && (options.interactivity.events.onHover.enable ||\n            options.interactivity.events.onClick.enable)) {\n            this.manageListener(interactivityEl, Constants.mouseMoveEvent, this.mouseMoveHandler, add);\n            this.manageListener(interactivityEl, Constants.touchStartEvent, this.touchStartHandler, add);\n            this.manageListener(interactivityEl, Constants.touchMoveEvent, this.touchMoveHandler, add);\n            if (!options.interactivity.events.onClick.enable) {\n                this.manageListener(interactivityEl, Constants.touchEndEvent, this.touchEndHandler, add);\n            }\n            this.manageListener(interactivityEl, Constants.mouseLeaveEvent, this.mouseLeaveHandler, add);\n            this.manageListener(interactivityEl, Constants.touchCancelEvent, this.touchCancelHandler, add);\n        }\n        if (options.interactivity.events.onClick.enable && interactivityEl) {\n            this.manageListener(interactivityEl, Constants.touchEndEvent, this.touchEndClickHandler, add);\n            this.manageListener(interactivityEl, Constants.mouseUpEvent, this.mouseUpHandler, add);\n        }\n        if (options.interactivity.events.resize) {\n            this.manageListener(window, Constants.resizeEvent, this.resizeHandler, add);\n        }\n        if (document) {\n            this.manageListener(document, Constants.visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n        }\n    }\n    manageListener(element, event, handler, add, options) {\n        if (add) {\n            this.addListener(element, event, handler, options);\n        }\n        else {\n            this.removeListener(element, event, handler, options);\n        }\n    }\n    addListener(element, event, handler, options) {\n        element.addEventListener(event, handler, options);\n    }\n    removeListener(element, event, handler, options) {\n        element.removeEventListener(event, handler, options);\n    }\n    handleWindowResize() {\n        const container = this.container;\n        const options = container.options;\n        if (!container.canvas.element) {\n            return;\n        }\n        container.canvas.dimension.width = container.canvas.element.offsetWidth;\n        container.canvas.dimension.height = container.canvas.element.offsetHeight;\n        if (container.retina.isRetina) {\n            container.canvas.dimension.width *= container.retina.pxRatio;\n            container.canvas.dimension.height *= container.retina.pxRatio;\n        }\n        container.canvas.element.width = container.canvas.dimension.width;\n        container.canvas.element.height = container.canvas.dimension.height;\n        if (!options.particles.move.enable) {\n            container.particles.redraw();\n        }\n        container.densityAutoParticles();\n        container.polygon.redraw();\n    }\n    handleVisibilityChange() {\n        const container = this.container;\n        const options = container.options;\n        if (!options.pauseOnBlur) {\n            return;\n        }\n        if (document === null || document === void 0 ? void 0 : document.hidden) {\n            container.pageHidden = true;\n            container.pause();\n        }\n        else {\n            container.pageHidden = false;\n            container.play();\n        }\n    }\n    mouseTouchMove(e) {\n        var _a, _b, _c;\n        const container = this.container;\n        const options = container.options;\n        let pos;\n        if (e.type.startsWith(\"mouse\")) {\n            this.canPush = true;\n            const mouseEvent = e;\n            if (container.interactivity.element === window && container.canvas.element) {\n                const clientRect = container.canvas.element.getBoundingClientRect();\n                pos = {\n                    x: mouseEvent.clientX - clientRect.left,\n                    y: mouseEvent.clientY - clientRect.top,\n                };\n            }\n            else if (options.interactivity.detectsOn === InteractivityDetect.parent) {\n                const source = mouseEvent.target;\n                const target = mouseEvent.currentTarget;\n                if (source && target) {\n                    const sourceRect = source.getBoundingClientRect();\n                    const targetRect = target.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.offsetX + sourceRect.left - targetRect.left,\n                        y: mouseEvent.offsetY + sourceRect.top - targetRect.top,\n                    };\n                }\n                else {\n                    pos = {\n                        x: mouseEvent.offsetX || mouseEvent.clientX,\n                        y: mouseEvent.offsetY || mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                pos = {\n                    x: mouseEvent.offsetX || mouseEvent.clientX,\n                    y: mouseEvent.offsetY || mouseEvent.clientY,\n                };\n            }\n        }\n        else {\n            this.canPush = e.type !== \"touchmove\";\n            const touchEvent = e;\n            const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n            const canvasRect = (_a = container.canvas.element) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();\n            pos = {\n                x: lastTouch.clientX - ((_b = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _b !== void 0 ? _b : 0),\n                y: lastTouch.clientY - ((_c = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _c !== void 0 ? _c : 0),\n            };\n        }\n        container.interactivity.mouse.position = pos;\n        if (container.retina.isRetina) {\n            container.interactivity.mouse.position.x *= container.retina.pxRatio;\n            container.interactivity.mouse.position.y *= container.retina.pxRatio;\n        }\n        container.interactivity.status = Constants.mouseMoveEvent;\n    }\n    mouseTouchFinish() {\n        const container = this.container;\n        delete container.interactivity.mouse.position;\n        container.interactivity.status = Constants.mouseLeaveEvent;\n    }\n    mouseTouchClick(e) {\n        const container = this.container;\n        const options = container.options;\n        if (options.polygon.enable && options.polygon.type !== PolygonMaskType.none &&\n            options.polygon.type !== PolygonMaskType.inline) {\n            if (container.polygon.checkInsidePolygon(container.interactivity.mouse.position)) {\n                this.doMouseTouchClick(e);\n            }\n        }\n        else {\n            this.doMouseTouchClick(e);\n        }\n    }\n    doMouseTouchClick(e) {\n        const container = this.container;\n        const options = container.options;\n        if (this.canPush) {\n            if (container.interactivity.mouse.position) {\n                container.interactivity.mouse.clickPosition = {\n                    x: container.interactivity.mouse.position.x,\n                    y: container.interactivity.mouse.position.y,\n                };\n            }\n            container.interactivity.mouse.clickTime = new Date().getTime();\n            const pushNb = options.interactivity.modes.push.quantity;\n            const removeNb = options.interactivity.modes.remove.quantity;\n            switch (options.interactivity.events.onClick.mode) {\n                case ClickMode.push:\n                    if (options.particles.move.enable) {\n                        container.particles.push(pushNb, container.interactivity.mouse);\n                    }\n                    else {\n                        if (options.interactivity.modes.push.quantity === 1) {\n                            container.particles.push(pushNb, container.interactivity.mouse);\n                        }\n                        else if (options.interactivity.modes.push.quantity > 1) {\n                            container.particles.push(pushNb);\n                        }\n                    }\n                    break;\n                case ClickMode.remove:\n                    container.particles.removeQuantity(removeNb);\n                    break;\n                case ClickMode.bubble:\n                    container.bubble.clicking = true;\n                    break;\n                case ClickMode.repulse:\n                    container.repulse.clicking = true;\n                    container.repulse.count = 0;\n                    container.repulse.finish = false;\n                    setTimeout(() => {\n                        if (!container.destroyed) {\n                            container.repulse.clicking = false;\n                        }\n                    }, options.interactivity.modes.repulse.duration * 1000);\n                    break;\n            }\n        }\n        e.preventDefault();\n        if (e.type === \"touchend\") {\n            setTimeout(() => this.mouseTouchFinish(), 500);\n        }\n        e.preventDefault();\n    }\n}\n","export class Presets {\n    static getPreset(preset) {\n        return this.presets[preset];\n    }\n    static addPreset(presetKey, options) {\n        if (!this.presets[presetKey]) {\n            this.presets[presetKey] = options;\n        }\n    }\n}\nPresets.presets = {};\n","export class ShapeUtils {\n    static addShapeDrawer(type, drawer) {\n        if (!this.drawers[type]) {\n            this.drawers[type] = drawer;\n        }\n    }\n    static drawShape(context, particle, radius, opacity) {\n        if (!particle.shape) {\n            return;\n        }\n        const drawer = this.drawers[particle.shape];\n        if (!drawer) {\n            return;\n        }\n        drawer.draw(context, particle, radius, opacity);\n    }\n}\nShapeUtils.drawers = {};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { MoveDirection } from \"../../Enums/MoveDirection\";\nexport class Utils {\n    static clamp(num, min, max) {\n        return Math.min(Math.max(num, min), max);\n    }\n    static isInArray(value, array) {\n        return value === array || array.indexOf(value) > -1;\n    }\n    static mix(comp1, comp2, weight1, weight2) {\n        return (comp1 * weight1 + comp2 * weight2) / (weight1 + weight2);\n    }\n    static getParticleBaseVelocity(options) {\n        let velocityBase;\n        switch (options.particles.move.direction) {\n            case MoveDirection.top:\n                velocityBase = { x: 0, y: -1 };\n                break;\n            case MoveDirection.topRight:\n                velocityBase = { x: 0.5, y: -0.5 };\n                break;\n            case MoveDirection.right:\n                velocityBase = { x: 1, y: -0 };\n                break;\n            case MoveDirection.bottomRight:\n                velocityBase = { x: 0.5, y: 0.5 };\n                break;\n            case MoveDirection.bottom:\n                velocityBase = { x: 0, y: 1 };\n                break;\n            case MoveDirection.bottomLeft:\n                velocityBase = { x: -0.5, y: 1 };\n                break;\n            case MoveDirection.left:\n                velocityBase = { x: -1, y: 0 };\n                break;\n            case MoveDirection.topLeft:\n                velocityBase = { x: -0.5, y: -0.5 };\n                break;\n            default:\n                velocityBase = { x: 0, y: 0 };\n                break;\n        }\n        return velocityBase;\n    }\n    static getDistanceBetweenCoordinates(pointA, pointB) {\n        const dx = pointA.x - pointB.x;\n        const dy = pointA.y - pointB.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n    static loadFont(character) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield document.fonts.load(`${character.weight} 36px '${character.font}'`);\n            }\n            catch (_a) {\n            }\n        });\n    }\n    static arrayRandomIndex(array) {\n        return Math.floor(Math.random() * array.length);\n    }\n    static itemFromArray(array, index) {\n        return array[index !== undefined ? index : this.arrayRandomIndex(array)];\n    }\n    static randomInRange(min, max) {\n        return (Math.random() * (max - min)) + min;\n    }\n    static isPointInside(point, size, radius) {\n        return this.areBoundsInside(this.calculateBounds(point, radius !== null && radius !== void 0 ? radius : 0), size);\n    }\n    static areBoundsInside(bounds, size) {\n        return bounds.left >= 0 && bounds.right <= size.width\n            && bounds.top >= 0 && bounds.bottom <= size.height;\n    }\n    static calculateBounds(point, radius) {\n        return {\n            bottom: point.y + radius,\n            left: point.x - radius,\n            right: point.x + radius,\n            top: point.y - radius,\n        };\n    }\n}\n","export var InteractivityDetect;\n(function (InteractivityDetect) {\n    InteractivityDetect[\"canvas\"] = \"canvas\";\n    InteractivityDetect[\"parent\"] = \"parent\";\n    InteractivityDetect[\"window\"] = \"window\";\n})(InteractivityDetect || (InteractivityDetect = {}));\n","export var ClickMode;\n(function (ClickMode) {\n    ClickMode[\"bubble\"] = \"bubble\";\n    ClickMode[\"push\"] = \"push\";\n    ClickMode[\"remove\"] = \"remove\";\n    ClickMode[\"repulse\"] = \"repulse\";\n})(ClickMode || (ClickMode = {}));\n","export var DivMode;\n(function (DivMode) {\n    DivMode[\"repulse\"] = \"repulse\";\n})(DivMode || (DivMode = {}));\n","export var HoverMode;\n(function (HoverMode) {\n    HoverMode[\"bubble\"] = \"bubble\";\n    HoverMode[\"connect\"] = \"connect\";\n    HoverMode[\"grab\"] = \"grab\";\n    HoverMode[\"repulse\"] = \"repulse\";\n    HoverMode[\"slow\"] = \"slow\";\n})(HoverMode || (HoverMode = {}));\n","export var MoveDirection;\n(function (MoveDirection) {\n    MoveDirection[\"bottom\"] = \"bottom\";\n    MoveDirection[\"bottomLeft\"] = \"bottom-left\";\n    MoveDirection[\"bottomRight\"] = \"bottom-right\";\n    MoveDirection[\"left\"] = \"left\";\n    MoveDirection[\"none\"] = \"none\";\n    MoveDirection[\"right\"] = \"right\";\n    MoveDirection[\"top\"] = \"top\";\n    MoveDirection[\"topLeft\"] = \"top-left\";\n    MoveDirection[\"topRight\"] = \"top-right\";\n})(MoveDirection || (MoveDirection = {}));\n","export var OutMode;\n(function (OutMode) {\n    OutMode[\"bounce\"] = \"bounce\";\n    OutMode[\"bounceHorizontal\"] = \"bounce-horizontal\";\n    OutMode[\"bounceVertical\"] = \"bounce-vertical\";\n    OutMode[\"out\"] = \"out\";\n    OutMode[\"destroy\"] = \"destroy\";\n})(OutMode || (OutMode = {}));\n","export var PolygonMaskInlineArrangement;\n(function (PolygonMaskInlineArrangement) {\n    PolygonMaskInlineArrangement[\"equidistant\"] = \"equidistant\";\n    PolygonMaskInlineArrangement[\"onePerPoint\"] = \"one-per-point\";\n    PolygonMaskInlineArrangement[\"perPoint\"] = \"per-point\";\n    PolygonMaskInlineArrangement[\"randomLength\"] = \"random-length\";\n    PolygonMaskInlineArrangement[\"randomPoint\"] = \"random-point\";\n})(PolygonMaskInlineArrangement || (PolygonMaskInlineArrangement = {}));\n","export var PolygonMaskMoveType;\n(function (PolygonMaskMoveType) {\n    PolygonMaskMoveType[\"path\"] = \"path\";\n    PolygonMaskMoveType[\"radius\"] = \"radius\";\n})(PolygonMaskMoveType || (PolygonMaskMoveType = {}));\n","export var PolygonMaskType;\n(function (PolygonMaskType) {\n    PolygonMaskType[\"inline\"] = \"inline\";\n    PolygonMaskType[\"inside\"] = \"inside\";\n    PolygonMaskType[\"outside\"] = \"outside\";\n    PolygonMaskType[\"none\"] = \"none\";\n})(PolygonMaskType || (PolygonMaskType = {}));\n","export var ProcessBubbleType;\n(function (ProcessBubbleType) {\n    ProcessBubbleType[\"opacity\"] = \"opacity\";\n    ProcessBubbleType[\"size\"] = \"size\";\n})(ProcessBubbleType || (ProcessBubbleType = {}));\n","export var RotateDirection;\n(function (RotateDirection) {\n    RotateDirection[\"clockwise\"] = \"clockwise\";\n    RotateDirection[\"counterClockwise\"] = \"counter-clockwise\";\n    RotateDirection[\"random\"] = \"random\";\n})(RotateDirection || (RotateDirection = {}));\n","export var ShapeType;\n(function (ShapeType) {\n    ShapeType[\"char\"] = \"char\";\n    ShapeType[\"character\"] = \"character\";\n    ShapeType[\"circle\"] = \"circle\";\n    ShapeType[\"edge\"] = \"edge\";\n    ShapeType[\"heart\"] = \"heart\";\n    ShapeType[\"image\"] = \"image\";\n    ShapeType[\"line\"] = \"line\";\n    ShapeType[\"polygon\"] = \"polygon\";\n    ShapeType[\"square\"] = \"square\";\n    ShapeType[\"star\"] = \"star\";\n    ShapeType[\"triangle\"] = \"triangle\";\n})(ShapeType || (ShapeType = {}));\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Loader } from \"./Classes/Loader\";\nimport { ShapeUtils } from \"./Classes/Utils/ShapeUtils\";\nimport { ShapeType } from \"./Enums/ShapeType\";\nimport { LineDrawer } from \"./Classes/ShapeDrawers/LineDrawer\";\nimport { CircleDrawer } from \"./Classes/ShapeDrawers/CircleDrawer\";\nimport { SquareDrawer } from \"./Classes/ShapeDrawers/SquareDrawer\";\nimport { TriangleDrawer } from \"./Classes/ShapeDrawers/TriangleDrawer\";\nimport { StarDrawer } from \"./Classes/ShapeDrawers/StarDrawer\";\nimport { PolygonDrawer } from \"./Classes/ShapeDrawers/PolygonDrawer\";\nimport { TextDrawer } from \"./Classes/ShapeDrawers/TextDrawer\";\nimport { ImageDrawer } from \"./Classes/ShapeDrawers/ImageDrawer\";\nimport { Presets } from \"./Classes/Utils/Presets\";\nclass Main {\n    constructor() {\n        this.initialized = false;\n        if (typeof window !== \"undefined\" && window) {\n            window.customRequestAnimationFrame = (() => {\n                return window.requestAnimationFrame ||\n                    window.webkitRequestAnimationFrame ||\n                    window.mozRequestAnimationFrame ||\n                    window.oRequestAnimationFrame ||\n                    window.msRequestAnimationFrame ||\n                    ((callback) => window.setTimeout(callback, 1000 / 60));\n            })();\n            window.customCancelRequestAnimationFrame = (() => {\n                return window.cancelAnimationFrame ||\n                    window.webkitCancelRequestAnimationFrame ||\n                    window.mozCancelRequestAnimationFrame ||\n                    window.oCancelRequestAnimationFrame ||\n                    window.msCancelRequestAnimationFrame ||\n                    clearTimeout;\n            })();\n        }\n        const squareDrawer = new SquareDrawer();\n        const textDrawer = new TextDrawer();\n        ShapeUtils.addShapeDrawer(ShapeType.line, new LineDrawer());\n        ShapeUtils.addShapeDrawer(ShapeType.circle, new CircleDrawer());\n        ShapeUtils.addShapeDrawer(ShapeType.edge, squareDrawer);\n        ShapeUtils.addShapeDrawer(ShapeType.square, squareDrawer);\n        ShapeUtils.addShapeDrawer(ShapeType.triangle, new TriangleDrawer());\n        ShapeUtils.addShapeDrawer(ShapeType.star, new StarDrawer());\n        ShapeUtils.addShapeDrawer(ShapeType.polygon, new PolygonDrawer());\n        ShapeUtils.addShapeDrawer(ShapeType.char, textDrawer);\n        ShapeUtils.addShapeDrawer(ShapeType.character, textDrawer);\n        ShapeUtils.addShapeDrawer(ShapeType.image, new ImageDrawer());\n    }\n    init() {\n        if (!this.initialized) {\n            this.initialized = true;\n            if (typeof window !== \"undefined\" && window) {\n                const tsParticles = this;\n                window.particlesJS = (tagId, params) => {\n                    tsParticles.load(tagId, params);\n                };\n                window.particlesJS.load = (tagId, pathConfigJson, callback) => {\n                    tsParticles.loadJSON(tagId, pathConfigJson).then((container) => {\n                        if (container) {\n                            callback(container);\n                        }\n                    });\n                };\n                window.particlesJS.setOnClickHandler = (callback) => {\n                    tsParticles.setOnClickHandler(callback);\n                };\n                window.pJSDom = () => {\n                    return window.tsParticles.dom();\n                };\n            }\n        }\n    }\n    loadFromArray(tagId, params, index) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Loader.loadFromArray(tagId, params, index);\n        });\n    }\n    load(tagId, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Loader.load(tagId, params);\n        });\n    }\n    loadJSON(tagId, pathConfigJson) {\n        return Loader.loadJSON(tagId, pathConfigJson);\n    }\n    setOnClickHandler(callback) {\n        Loader.setOnClickHandler(callback);\n    }\n    dom() {\n        return Loader.dom();\n    }\n    domItem(index) {\n        return Loader.domItem(index);\n    }\n    addShape(shape, drawer) {\n        let customDrawer;\n        if (typeof drawer === \"function\") {\n            customDrawer = {\n                draw: drawer,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        ShapeUtils.addShapeDrawer(shape, customDrawer);\n    }\n    addPreset(preset, options) {\n        Presets.addPreset(preset, options);\n    }\n}\nconst tsParticles = new Main();\ntsParticles.init();\nexport { tsParticles };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import type { IOptions } from \"tsparticles/dist/Interfaces/Options/IOptions\";\nimport { ShapeType } from \"tsparticles/dist/Enums/ShapeType\";\nimport type { RecursivePartial } from \"tsparticles/dist/Types/RecursivePartial\";\nimport { PolygonMaskType } from \"tsparticles/dist/Enums/PolygonMaskType\";\nimport { PolygonMaskInlineArrangement } from \"tsparticles/dist/Enums/PolygonMaskInlineArrangement\";\nimport { PolygonMaskMoveType } from \"tsparticles/dist/Enums/PolygonMaskMoveType\";\nimport { HoverMode } from \"tsparticles/dist/Enums/Modes/HoverMode\";\nimport { ClickMode } from \"tsparticles/dist/Enums/Modes/ClickMode\";\nimport { InteractivityDetect } from \"tsparticles/dist/Enums/InteractivityDetect\";\nimport { OutMode } from \"tsparticles/dist/Enums/OutMode\";\nimport { MoveDirection } from \"tsparticles/dist/Enums/MoveDirection\";\n\nexport const defaultParams: RecursivePartial<IOptions> = {\n    particles: {\n        number: {\n            value: 40,\n            max: -1,\n            density: {\n                enable: false,\n                value_area: 1200\n            }\n        },\n        color: {\n            value: \"#FFF\"\n        },\n        shape: {\n            type: ShapeType.circle,\n            stroke: {\n                width: 0,\n                color: \"#000000\"\n            },\n            polygon: {\n                nb_sides: 5\n            },\n            image: {\n                src: \"\",\n                width: 100,\n                height: 100\n            },\n        },\n        opacity: {\n            value: 0.5,\n            random: false,\n            anim: {\n                enable: true,\n                speed: 1,\n                opacity_min: 0.1,\n                sync: false\n            }\n        },\n        size: {\n            value: 1,\n            random: false,\n            anim: {\n                enable: false,\n                speed: 40,\n                size_min: 0,\n                sync: false\n            }\n        },\n        line_linked: {\n            enable: true,\n            distance: 150,\n            color: \"#FFF\",\n            opacity: 0.6,\n            width: 1,\n            shadow: {\n                enable: false,\n                blur: 5,\n                color: \"lime\"\n            }\n        },\n        move: {\n            enable: true,\n            speed: 3,\n            direction: MoveDirection.none,\n            random: false,\n            straight: false,\n            out_mode: OutMode.bounce,\n            bounce: true,\n            attract: {\n                enable: false,\n                rotateX: 3000,\n                rotateY: 3000\n            }\n        },\n    },\n    interactivity: {\n        detectsOn: InteractivityDetect.canvas,\n        events: {\n            onHover: {\n                enable: false,\n                mode: HoverMode.grab\n            },\n            onClick: {\n                enable: false,\n                mode: ClickMode.repulse\n            },\n            resize: true\n        },\n        modes: {\n            grab: {\n                distance: 180,\n                line_linked: {\n                    opacity: 0.35\n                }\n            },\n            bubble: {\n                distance: 200,\n                size: 80,\n                duration: 0.4\n            },\n            repulse: {\n                distance: 100,\n                duration: 5\n            },\n            push: {\n                particles_nb: 4\n            },\n            remove: {\n                particles_nb: 2\n            }\n        }\n    },\n    retina_detect: true,\n    fps_limit: 999,\n    polygon: {\n        enable: false,\n        scale: 1,\n        type: PolygonMaskType.inline,\n        inline: {\n            arrangement: PolygonMaskInlineArrangement.onePerPoint\n        },\n        draw: {\n            enable: false,\n            stroke: {\n                width: 0.5,\n                color: \"rgba(255, 255, 255, .1)\"\n            }\n        },\n        move: {\n            radius: 10,\n            type: PolygonMaskMoveType.path\n        },\n        url: \"\"\n    }\n};","import * as React from \"react\";\nimport { Component } from \"react\";\nimport isEqual from 'lodash/isEqual';\nimport type { IOptions } from \"tsparticles/dist/Interfaces/Options/IOptions\";\nimport { Container } from \"tsparticles/dist/Classes/Container\";\nimport type { RecursivePartial } from \"tsparticles/dist/Types/RecursivePartial\";\nimport { defaultParams } from \"./DefaultOptions\";\nimport { Options } from \"tsparticles/dist/Classes/Options/Options\";\nimport { tsParticles } from \"tsparticles/dist/index\";\n\nexport interface ParticlesProps {\n    id: string;\n    width: string;\n    height: string;\n    params: RecursivePartial<IOptions>;\n    style: any;\n    className?: string;\n    canvasClassName?: string;\n}\n\nexport interface ParticlesState {\n    canvas?: HTMLCanvasElement;\n    library?: Container;\n}\n\nexport default class Particles extends Component<ParticlesProps,\n    ParticlesState> {\n    public static defaultProps: ParticlesProps = {\n        width: \"100%\",\n        height: \"100%\",\n        params: defaultParams,\n        style: {},\n        id: \"tsparticles\"\n    };\n\n    constructor(props: ParticlesProps) {\n        super(props);\n        this.state = {\n            canvas: undefined,\n            library: undefined\n        };\n        this.loadCanvas = this.loadCanvas.bind(this);\n    }\n\n    private buildParticlesLibrary(tagId: string, params?: RecursivePartial<IOptions>) {\n        try {\n            if (window === undefined) return null;\n        } catch {\n            return null;\n        } // SSR\n        var options = new Options();\n\n        options.load(defaultParams);\n        options.load(params);\n\n        tsParticles.dom();\n        const container = new Container(tagId, options);\n\n        return container;\n    }\n\n    private refresh(props: Readonly<ParticlesProps>): void {\n        const { canvas } = this.state;\n        if (canvas) {\n            this.destroy();\n            this.setState({\n                library: this.buildParticlesLibrary(props.id, props.params)\n            },\n                () => {\n                    this.loadCanvas(canvas);\n                }\n            );\n        }\n    }\n\n    destroy() {\n        if (this.state.library) {\n            this.state.library.destroy();\n        }\n    }\n\n    loadCanvas(canvas: HTMLCanvasElement) {\n        if (canvas) {\n            this.setState({\n                canvas\n            },\n                () => {\n                    const { library } = this.state;\n\n                    if (!library) {\n                        return;\n                    }\n\n                    library.canvas.loadCanvas(canvas);\n                    library.start();\n                }\n            );\n        }\n    }\n\n    shouldComponentUpdate(nextProps: Readonly<ParticlesProps>) {\n        return !isEqual(nextProps, this.props);\n    }\n\n    componentDidUpdate() {\n        this.refresh(this.props);\n    }\n\n    forceUpdate() {\n        this.refresh(this.props);\n        super.forceUpdate();\n    }\n\n    componentDidMount() {\n        this.setState({\n            library: this.buildParticlesLibrary(this.props.id, this.props.params)\n        });\n    }\n\n    componentWillUnmount() {\n        this.destroy();\n        this.setState({\n            library: undefined\n        });\n    }\n\n    render() {\n        let { width, height, className, canvasClassName, id } = this.props;\n        return (\n            <div className={className} id={id}>\n                <canvas\n                    ref={this.loadCanvas}\n                    className={canvasClassName}\n                    style={{\n                        ...this.props.style,\n                        width,\n                        height\n                    }}\n                />\n            </div>\n        );\n    }\n}\n","import Particles from \"./Particles\";\n\nexport * from 'tsparticles/dist/Enums/InteractivityDetect';\nexport * from 'tsparticles/dist/Enums/MoveDirection';\nexport * from 'tsparticles/dist/Enums/OutMode';\nexport * from 'tsparticles/dist/Enums/PolygonMaskInlineArrangement';\nexport * from 'tsparticles/dist/Enums/PolygonMaskMoveType';\nexport * from 'tsparticles/dist/Enums/PolygonMaskType';\nexport * from 'tsparticles/dist/Enums/ProcessBubbleType';\nexport * from 'tsparticles/dist/Enums/RotateDirection';\nexport * from 'tsparticles/dist/Enums/ShapeType';\nexport * from 'tsparticles/dist/Enums/Modes/ClickMode';\nexport * from 'tsparticles/dist/Enums/Modes/DivMode';\nexport * from 'tsparticles/dist/Enums/Modes/HoverMode';\n\nexport default Particles;\nexport { Particles };\n","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;"],"sourceRoot":""}