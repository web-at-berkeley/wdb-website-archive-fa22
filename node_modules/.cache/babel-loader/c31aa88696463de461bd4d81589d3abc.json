{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ColorUtils_1 = require(\"../../Utils/ColorUtils\");\n\nvar Utils_1 = require(\"../../Utils/Utils\");\n\nvar Absorber = function () {\n  function Absorber(absorbers, options, position) {\n    var _a, _b;\n\n    this.absorbers = absorbers;\n    this.container = absorbers.container;\n    this.initialPosition = position;\n    this.options = options;\n    var container = this.container;\n    var size = options.size.value * container.retina.pixelRatio;\n    var random = typeof options.size.random === \"boolean\" ? options.size.random : options.size.random.enable;\n    var minSize = typeof options.size.random === \"boolean\" ? 1 : options.size.random.minimumValue;\n\n    if (random) {\n      size = Utils_1.Utils.randomInRange(minSize, size);\n    }\n\n    this.opacity = this.options.opacity;\n    this.size = size * container.retina.pixelRatio;\n    this.mass = this.size * options.size.density;\n    var limit = options.size.limit;\n    this.limit = limit !== undefined ? limit * container.retina.pixelRatio : limit;\n    var color = typeof options.color === \"string\" ? {\n      value: options.color\n    } : options.color;\n    this.color = (_a = ColorUtils_1.ColorUtils.colorToRgb(color)) !== null && _a !== void 0 ? _a : {\n      b: 0,\n      g: 0,\n      r: 0\n    };\n    this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n  }\n\n  Absorber.prototype.attract = function (particle, _delta) {\n    var pos = particle.getPosition();\n    var dx = this.position.x - pos.x;\n    var dy = this.position.y - pos.y;\n    var distance = Math.sqrt(Math.abs(dx * dx + dy * dy));\n    var angle = Math.atan2(dx, dy) * (180 / Math.PI);\n    var acceleration = this.mass / Math.pow(distance, 2);\n\n    if (distance < this.size + particle.size.value) {\n      var sizeFactor = particle.size.value * 0.033;\n\n      if (this.size > particle.size.value && distance < this.size - particle.size.value) {\n        particle.destroyed = true;\n      } else {\n        particle.size.value -= sizeFactor;\n        particle.velocity.horizontal += Math.sin(angle * (Math.PI / 180)) * acceleration;\n        particle.velocity.vertical += Math.cos(angle * (Math.PI / 180)) * acceleration;\n      }\n\n      if (this.limit === undefined || this.size < this.limit) {\n        this.size += sizeFactor;\n      }\n\n      this.mass += sizeFactor * this.options.size.density;\n    } else {\n      particle.velocity.horizontal += Math.sin(angle * (Math.PI / 180)) * acceleration;\n      particle.velocity.vertical += Math.cos(angle * (Math.PI / 180)) * acceleration;\n    }\n  };\n\n  Absorber.prototype.resize = function () {\n    var initialPosition = this.initialPosition;\n    this.position = initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size) ? initialPosition : this.calcPosition();\n  };\n\n  Absorber.prototype.draw = function (context) {\n    context.translate(this.position.x, this.position.y);\n    context.beginPath();\n    context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n    context.closePath();\n    context.fillStyle = ColorUtils_1.ColorUtils.getStyleFromColor(this.color, this.opacity);\n    context.fill();\n  };\n\n  Absorber.prototype.calcPosition = function () {\n    var _a;\n\n    var container = this.container;\n    var percentPosition = (_a = this.options.position) !== null && _a !== void 0 ? _a : {\n      x: Math.random() * 100,\n      y: Math.random() * 100\n    };\n    return {\n      x: percentPosition.x / 100 * container.canvas.size.width,\n      y: percentPosition.y / 100 * container.canvas.size.height\n    };\n  };\n\n  return Absorber;\n}();\n\nexports.Absorber = Absorber;","map":{"version":3,"sources":["/Users/samarthgoel/Desktop/web-dev-website/node_modules/tsparticles/dist/Plugins/Absorbers/Absorber.js"],"names":["Object","defineProperty","exports","value","ColorUtils_1","require","Utils_1","Absorber","absorbers","options","position","_a","_b","container","initialPosition","size","retina","pixelRatio","random","enable","minSize","minimumValue","Utils","randomInRange","opacity","mass","density","limit","undefined","color","ColorUtils","colorToRgb","b","g","r","calcPosition","prototype","attract","particle","_delta","pos","getPosition","dx","x","dy","y","distance","Math","sqrt","abs","angle","atan2","PI","acceleration","pow","sizeFactor","destroyed","velocity","horizontal","sin","vertical","cos","resize","isPointInside","canvas","draw","context","translate","beginPath","arc","closePath","fillStyle","getStyleFromColor","fill","percentPosition","width","height"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ColorUtils_1 = require(\"../../Utils/ColorUtils\");\nvar Utils_1 = require(\"../../Utils/Utils\");\nvar Absorber = (function () {\n    function Absorber(absorbers, options, position) {\n        var _a, _b;\n        this.absorbers = absorbers;\n        this.container = absorbers.container;\n        this.initialPosition = position;\n        this.options = options;\n        var container = this.container;\n        var size = options.size.value * container.retina.pixelRatio;\n        var random = typeof options.size.random === \"boolean\" ? options.size.random : options.size.random.enable;\n        var minSize = typeof options.size.random === \"boolean\" ? 1 : options.size.random.minimumValue;\n        if (random) {\n            size = Utils_1.Utils.randomInRange(minSize, size);\n        }\n        this.opacity = this.options.opacity;\n        this.size = size * container.retina.pixelRatio;\n        this.mass = this.size * options.size.density;\n        var limit = options.size.limit;\n        this.limit = limit !== undefined ? limit * container.retina.pixelRatio : limit;\n        var color = typeof options.color === \"string\" ? { value: options.color } : options.color;\n        this.color = (_a = ColorUtils_1.ColorUtils.colorToRgb(color)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n    }\n    Absorber.prototype.attract = function (particle, _delta) {\n        var pos = particle.getPosition();\n        var dx = this.position.x - pos.x;\n        var dy = this.position.y - pos.y;\n        var distance = Math.sqrt(Math.abs(dx * dx + dy * dy));\n        var angle = Math.atan2(dx, dy) * (180 / Math.PI);\n        var acceleration = this.mass / Math.pow(distance, 2);\n        if (distance < this.size + particle.size.value) {\n            var sizeFactor = particle.size.value * 0.033;\n            if (this.size > particle.size.value && distance < this.size - particle.size.value) {\n                particle.destroyed = true;\n            }\n            else {\n                particle.size.value -= sizeFactor;\n                particle.velocity.horizontal += Math.sin(angle * (Math.PI / 180)) * acceleration;\n                particle.velocity.vertical += Math.cos(angle * (Math.PI / 180)) * acceleration;\n            }\n            if (this.limit === undefined || this.size < this.limit) {\n                this.size += sizeFactor;\n            }\n            this.mass += sizeFactor * this.options.size.density;\n        }\n        else {\n            particle.velocity.horizontal += Math.sin(angle * (Math.PI / 180)) * acceleration;\n            particle.velocity.vertical += Math.cos(angle * (Math.PI / 180)) * acceleration;\n        }\n    };\n    Absorber.prototype.resize = function () {\n        var initialPosition = this.initialPosition;\n        this.position = initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size) ?\n            initialPosition :\n            this.calcPosition();\n    };\n    Absorber.prototype.draw = function (context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = ColorUtils_1.ColorUtils.getStyleFromColor(this.color, this.opacity);\n        context.fill();\n    };\n    Absorber.prototype.calcPosition = function () {\n        var _a;\n        var container = this.container;\n        var percentPosition = (_a = this.options.position) !== null && _a !== void 0 ? _a : {\n            x: Math.random() * 100,\n            y: Math.random() * 100,\n        };\n        return {\n            x: percentPosition.x / 100 * container.canvas.size.width,\n            y: percentPosition.y / 100 * container.canvas.size.height,\n        };\n    };\n    return Absorber;\n}());\nexports.Absorber = Absorber;\n"]},"metadata":{},"sourceType":"script"}