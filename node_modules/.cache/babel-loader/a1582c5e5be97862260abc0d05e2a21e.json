{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ColorUtils_1 = require(\"./ColorUtils\");\n\nvar CanvasUtils = function () {\n  function CanvasUtils() {}\n\n  CanvasUtils.paintBase = function (context, dimension, baseColor) {\n    context.save();\n    context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n    context.restore();\n  };\n\n  CanvasUtils.clear = function (context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n  };\n\n  CanvasUtils.drawLinkedLine = function (context, width, begin, end, backgroundMask, colorLine, opacity, shadow) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n    context.lineWidth = width;\n\n    if (backgroundMask) {\n      context.globalCompositeOperation = 'destination-out';\n    }\n\n    context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromColor(colorLine, opacity);\n\n    if (shadow.enable) {\n      var shadowColor = typeof shadow.color === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(shadow.color) : ColorUtils_1.ColorUtils.colorToRgb(shadow.color);\n\n      if (shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromColor(shadowColor);\n      }\n    }\n\n    context.stroke();\n  };\n\n  CanvasUtils.drawConnectLine = function (context, width, lineStyle, begin, end) {\n    context.save();\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n    context.restore();\n  };\n\n  CanvasUtils.gradient = function (context, p1, p2, opacity) {\n    var gradStop = Math.floor(p2.size.value / p1.size.value);\n\n    if (!p1.color || !p2.color) {\n      return;\n    }\n\n    var sourcePos = p1.getPosition();\n    var destPos = p2.getPosition();\n    var midRgb = ColorUtils_1.ColorUtils.mix(p1.color, p2.color, p1.size.value, p2.size.value);\n    var grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, ColorUtils_1.ColorUtils.getStyleFromColor(p1.color, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, ColorUtils_1.ColorUtils.getStyleFromColor(midRgb, opacity));\n    grad.addColorStop(1, ColorUtils_1.ColorUtils.getStyleFromColor(p2.color, opacity));\n    return grad;\n  };\n\n  CanvasUtils.drawGrabLine = function (context, width, begin, end, colorLine, opacity) {\n    context.save();\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n    context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromColor(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n    context.restore();\n  };\n\n  CanvasUtils.drawParticle = function (container, context, particle, delta, colorValue, backgroundMask, radius, opacity, shadow) {\n    var pos = particle.getPosition();\n    context.save();\n    context.translate(pos.x, pos.y);\n    context.beginPath();\n\n    if (particle.angle !== 0) {\n      context.rotate(particle.angle * Math.PI / 180);\n    }\n\n    if (backgroundMask) {\n      context.globalCompositeOperation = \"destination-out\";\n    }\n\n    var shadowColor = particle.shadowColor;\n\n    if (shadow.enable && shadowColor) {\n      context.shadowBlur = shadow.blur;\n      context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromColor(shadowColor);\n      context.shadowOffsetX = shadow.offset.x;\n      context.shadowOffsetY = shadow.offset.y;\n    }\n\n    context.fillStyle = colorValue;\n    var stroke = particle.stroke;\n\n    if (stroke.width > 0 && particle.strokeColor) {\n      context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromColor(particle.strokeColor, particle.stroke.opacity);\n      context.lineWidth = stroke.width;\n    }\n\n    this.drawShape(container, context, particle, radius, opacity, delta);\n\n    if (particle.close) {\n      context.closePath();\n    }\n\n    if (stroke.width > 0 && particle.strokeColor) {\n      context.stroke();\n    }\n\n    if (particle.fill) {\n      context.fill();\n    }\n\n    context.restore();\n    context.save();\n    context.translate(pos.x, pos.y);\n\n    if (particle.angle !== 0) {\n      context.rotate(particle.angle * Math.PI / 180);\n    }\n\n    if (backgroundMask) {\n      context.globalCompositeOperation = \"destination-out\";\n    }\n\n    this.drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.restore();\n  };\n\n  CanvasUtils.drawShape = function (container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n      return;\n    }\n\n    var drawer = container.drawers[particle.shape];\n\n    if (!drawer) {\n      return;\n    }\n\n    drawer.draw(context, particle, radius, opacity, delta);\n  };\n\n  CanvasUtils.drawShapeAfterEffect = function (container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n      return;\n    }\n\n    var drawer = container.drawers[particle.shape];\n\n    if (!drawer) {\n      return;\n    }\n\n    if (drawer.afterEffect !== undefined) {\n      drawer.afterEffect(context, particle, radius, opacity, delta);\n    }\n  };\n\n  CanvasUtils.drawPlugin = function (context, plugin, delta) {\n    context.save();\n\n    if (plugin.draw !== undefined) {\n      plugin.draw(context, delta);\n    }\n\n    context.restore();\n  };\n\n  return CanvasUtils;\n}();\n\nexports.CanvasUtils = CanvasUtils;","map":{"version":3,"sources":["/Users/samarthgoel/Desktop/web-dev-website/node_modules/tsparticles/dist/Utils/CanvasUtils.js"],"names":["Object","defineProperty","exports","value","ColorUtils_1","require","CanvasUtils","paintBase","context","dimension","baseColor","save","fillStyle","fillRect","width","height","restore","clear","clearRect","drawLinkedLine","begin","end","backgroundMask","colorLine","opacity","shadow","beginPath","moveTo","x","y","lineTo","closePath","lineWidth","globalCompositeOperation","strokeStyle","ColorUtils","getStyleFromColor","enable","shadowColor","color","stringToRgb","colorToRgb","shadowBlur","blur","stroke","drawConnectLine","lineStyle","gradient","p1","p2","gradStop","Math","floor","size","sourcePos","getPosition","destPos","midRgb","mix","grad","createLinearGradient","addColorStop","drawGrabLine","drawParticle","container","particle","delta","colorValue","radius","pos","translate","angle","rotate","PI","shadowOffsetX","offset","shadowOffsetY","strokeColor","drawShape","close","fill","drawShapeAfterEffect","shape","drawer","drawers","draw","afterEffect","undefined","drawPlugin","plugin"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ColorUtils_1 = require(\"./ColorUtils\");\nvar CanvasUtils = (function () {\n    function CanvasUtils() {\n    }\n    CanvasUtils.paintBase = function (context, dimension, baseColor) {\n        context.save();\n        context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n        context.fillRect(0, 0, dimension.width, dimension.height);\n        context.restore();\n    };\n    CanvasUtils.clear = function (context, dimension) {\n        context.clearRect(0, 0, dimension.width, dimension.height);\n    };\n    CanvasUtils.drawLinkedLine = function (context, width, begin, end, backgroundMask, colorLine, opacity, shadow) {\n        context.beginPath();\n        context.moveTo(begin.x, begin.y);\n        context.lineTo(end.x, end.y);\n        context.closePath();\n        context.lineWidth = width;\n        if (backgroundMask) {\n            context.globalCompositeOperation = 'destination-out';\n        }\n        context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromColor(colorLine, opacity);\n        if (shadow.enable) {\n            var shadowColor = typeof shadow.color === \"string\" ?\n                ColorUtils_1.ColorUtils.stringToRgb(shadow.color) :\n                ColorUtils_1.ColorUtils.colorToRgb(shadow.color);\n            if (shadowColor) {\n                context.shadowBlur = shadow.blur;\n                context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromColor(shadowColor);\n            }\n        }\n        context.stroke();\n    };\n    CanvasUtils.drawConnectLine = function (context, width, lineStyle, begin, end) {\n        context.save();\n        context.beginPath();\n        context.moveTo(begin.x, begin.y);\n        context.lineTo(end.x, end.y);\n        context.closePath();\n        context.lineWidth = width;\n        context.strokeStyle = lineStyle;\n        context.stroke();\n        context.restore();\n    };\n    CanvasUtils.gradient = function (context, p1, p2, opacity) {\n        var gradStop = Math.floor(p2.size.value / p1.size.value);\n        if (!p1.color || !p2.color) {\n            return;\n        }\n        var sourcePos = p1.getPosition();\n        var destPos = p2.getPosition();\n        var midRgb = ColorUtils_1.ColorUtils.mix(p1.color, p2.color, p1.size.value, p2.size.value);\n        var grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n        grad.addColorStop(0, ColorUtils_1.ColorUtils.getStyleFromColor(p1.color, opacity));\n        grad.addColorStop(gradStop > 1 ? 1 : gradStop, ColorUtils_1.ColorUtils.getStyleFromColor(midRgb, opacity));\n        grad.addColorStop(1, ColorUtils_1.ColorUtils.getStyleFromColor(p2.color, opacity));\n        return grad;\n    };\n    CanvasUtils.drawGrabLine = function (context, width, begin, end, colorLine, opacity) {\n        context.save();\n        context.beginPath();\n        context.moveTo(begin.x, begin.y);\n        context.lineTo(end.x, end.y);\n        context.closePath();\n        context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromColor(colorLine, opacity);\n        context.lineWidth = width;\n        context.stroke();\n        context.restore();\n    };\n    CanvasUtils.drawParticle = function (container, context, particle, delta, colorValue, backgroundMask, radius, opacity, shadow) {\n        var pos = particle.getPosition();\n        context.save();\n        context.translate(pos.x, pos.y);\n        context.beginPath();\n        if (particle.angle !== 0) {\n            context.rotate(particle.angle * Math.PI / 180);\n        }\n        if (backgroundMask) {\n            context.globalCompositeOperation = \"destination-out\";\n        }\n        var shadowColor = particle.shadowColor;\n        if (shadow.enable && shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromColor(shadowColor);\n            context.shadowOffsetX = shadow.offset.x;\n            context.shadowOffsetY = shadow.offset.y;\n        }\n        context.fillStyle = colorValue;\n        var stroke = particle.stroke;\n        if (stroke.width > 0 && particle.strokeColor) {\n            context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromColor(particle.strokeColor, particle.stroke.opacity);\n            context.lineWidth = stroke.width;\n        }\n        this.drawShape(container, context, particle, radius, opacity, delta);\n        if (particle.close) {\n            context.closePath();\n        }\n        if (stroke.width > 0 && particle.strokeColor) {\n            context.stroke();\n        }\n        if (particle.fill) {\n            context.fill();\n        }\n        context.restore();\n        context.save();\n        context.translate(pos.x, pos.y);\n        if (particle.angle !== 0) {\n            context.rotate(particle.angle * Math.PI / 180);\n        }\n        if (backgroundMask) {\n            context.globalCompositeOperation = \"destination-out\";\n        }\n        this.drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n        context.restore();\n    };\n    CanvasUtils.drawShape = function (container, context, particle, radius, opacity, delta) {\n        if (!particle.shape) {\n            return;\n        }\n        var drawer = container.drawers[particle.shape];\n        if (!drawer) {\n            return;\n        }\n        drawer.draw(context, particle, radius, opacity, delta);\n    };\n    CanvasUtils.drawShapeAfterEffect = function (container, context, particle, radius, opacity, delta) {\n        if (!particle.shape) {\n            return;\n        }\n        var drawer = container.drawers[particle.shape];\n        if (!drawer) {\n            return;\n        }\n        if (drawer.afterEffect !== undefined) {\n            drawer.afterEffect(context, particle, radius, opacity, delta);\n        }\n    };\n    CanvasUtils.drawPlugin = function (context, plugin, delta) {\n        context.save();\n        if (plugin.draw !== undefined) {\n            plugin.draw(context, delta);\n        }\n        context.restore();\n    };\n    return CanvasUtils;\n}());\nexports.CanvasUtils = CanvasUtils;\n"]},"metadata":{},"sourceType":"script"}