{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar F3 = 1.0 / 3.0;\nvar G3 = 1.0 / 6.0;\nvar grad3 = new Float32Array([1, 1, 0, -1, 1, 0, 1, -1, 0, -1, -1, 0, 1, 0, 1, -1, 0, 1, 1, 0, -1, -1, 0, -1, 0, 1, 1, 0, -1, 1, 0, 1, -1, 0, -1, -1]);\n\nvar buildPermutationTable = function (random) {\n  var p = new Uint8Array(256);\n\n  for (var i = 0; i < 256; i++) {\n    p[i] = i;\n  }\n\n  for (var i = 0; i < 255; i++) {\n    var r = i + ~~(random() * (256 - i));\n    var aux = p[i];\n    p[i] = p[r];\n    p[r] = aux;\n  }\n\n  return p;\n};\n\nvar SimplexNoise = function () {\n  function SimplexNoise(random) {\n    var randomFunc = random !== null && random !== void 0 ? random : Math.random;\n    this.p = buildPermutationTable(randomFunc);\n    this.perm = new Uint8Array(512);\n    this.permMod12 = new Uint8Array(512);\n\n    for (var i = 0; i < 512; i++) {\n      this.perm[i] = this.p[i & 255];\n      this.permMod12[i] = this.perm[i] % 12;\n    }\n  }\n\n  SimplexNoise.prototype.noise3D = function (xin, yin, zin) {\n    var permMod12 = this.permMod12;\n    var perm = this.perm;\n    var n0, n1, n2, n3;\n    var s = (xin + yin + zin) * F3;\n    var i = Math.floor(xin + s);\n    var j = Math.floor(yin + s);\n    var k = Math.floor(zin + s);\n    var t = (i + j + k) * G3;\n    var X0 = i - t;\n    var Y0 = j - t;\n    var Z0 = k - t;\n    var x0 = xin - X0;\n    var y0 = yin - Y0;\n    var z0 = zin - Z0;\n    var i1, j1, k1;\n    var i2, j2, k2;\n\n    if (x0 >= y0) {\n      if (y0 >= z0) {\n        i1 = 1;\n        j1 = 0;\n        k1 = 0;\n        i2 = 1;\n        j2 = 1;\n        k2 = 0;\n      } else if (x0 >= z0) {\n        i1 = 1;\n        j1 = 0;\n        k1 = 0;\n        i2 = 1;\n        j2 = 0;\n        k2 = 1;\n      } else {\n        i1 = 0;\n        j1 = 0;\n        k1 = 1;\n        i2 = 1;\n        j2 = 0;\n        k2 = 1;\n      }\n    } else {\n      if (y0 < z0) {\n        i1 = 0;\n        j1 = 0;\n        k1 = 1;\n        i2 = 0;\n        j2 = 1;\n        k2 = 1;\n      } else if (x0 < z0) {\n        i1 = 0;\n        j1 = 1;\n        k1 = 0;\n        i2 = 0;\n        j2 = 1;\n        k2 = 1;\n      } else {\n        i1 = 0;\n        j1 = 1;\n        k1 = 0;\n        i2 = 1;\n        j2 = 1;\n        k2 = 0;\n      }\n    }\n\n    var x1 = x0 - i1 + G3;\n    var y1 = y0 - j1 + G3;\n    var z1 = z0 - k1 + G3;\n    var x2 = x0 - i2 + 2.0 * G3;\n    var y2 = y0 - j2 + 2.0 * G3;\n    var z2 = z0 - k2 + 2.0 * G3;\n    var x3 = x0 - 1.0 + 3.0 * G3;\n    var y3 = y0 - 1.0 + 3.0 * G3;\n    var z3 = z0 - 1.0 + 3.0 * G3;\n    var ii = i & 255;\n    var jj = j & 255;\n    var kk = k & 255;\n    var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n\n    if (t0 < 0) {\n      n0 = 0.0;\n    } else {\n      var gi0 = permMod12[ii + perm[jj + perm[kk]]] * 3;\n      t0 *= t0;\n      n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0 + grad3[gi0 + 2] * z0);\n    }\n\n    var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n\n    if (t1 < 0) {\n      n1 = 0.0;\n    } else {\n      var gi1 = permMod12[ii + i1 + perm[jj + j1 + perm[kk + k1]]] * 3;\n      t1 *= t1;\n      n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1 + grad3[gi1 + 2] * z1);\n    }\n\n    var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n\n    if (t2 < 0) {\n      n2 = 0.0;\n    } else {\n      var gi2 = permMod12[ii + i2 + perm[jj + j2 + perm[kk + k2]]] * 3;\n      t2 *= t2;\n      n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2 + grad3[gi2 + 2] * z2);\n    }\n\n    var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n\n    if (t3 < 0) {\n      n3 = 0.0;\n    } else {\n      var gi3 = permMod12[ii + 1 + perm[jj + 1 + perm[kk + 1]]] * 3;\n      t3 *= t3;\n      n3 = t3 * t3 * (grad3[gi3] * x3 + grad3[gi3 + 1] * y3 + grad3[gi3 + 2] * z3);\n    }\n\n    return 32.0 * (n0 + n1 + n2 + n3);\n  };\n\n  return SimplexNoise;\n}();\n\nexports.SimplexNoise = SimplexNoise;","map":{"version":3,"sources":["/Users/samarthgoel/Desktop/web-dev-website/node_modules/tsparticles/dist/Utils/SimplexNoise.js"],"names":["Object","defineProperty","exports","value","F3","G3","grad3","Float32Array","buildPermutationTable","random","p","Uint8Array","i","r","aux","SimplexNoise","randomFunc","Math","perm","permMod12","prototype","noise3D","xin","yin","zin","n0","n1","n2","n3","s","floor","j","k","t","X0","Y0","Z0","x0","y0","z0","i1","j1","k1","i2","j2","k2","x1","y1","z1","x2","y2","z2","x3","y3","z3","ii","jj","kk","t0","gi0","t1","gi1","t2","gi2","t3","gi3"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar F3 = 1.0 / 3.0;\nvar G3 = 1.0 / 6.0;\nvar grad3 = new Float32Array([\n    1, 1, 0,\n    -1, 1, 0,\n    1, -1, 0,\n    -1, -1, 0,\n    1, 0, 1,\n    -1, 0, 1,\n    1, 0, -1,\n    -1, 0, -1,\n    0, 1, 1,\n    0, -1, 1,\n    0, 1, -1,\n    0, -1, -1,\n]);\nvar buildPermutationTable = function (random) {\n    var p = new Uint8Array(256);\n    for (var i = 0; i < 256; i++) {\n        p[i] = i;\n    }\n    for (var i = 0; i < 255; i++) {\n        var r = i + ~~(random() * (256 - i));\n        var aux = p[i];\n        p[i] = p[r];\n        p[r] = aux;\n    }\n    return p;\n};\nvar SimplexNoise = (function () {\n    function SimplexNoise(random) {\n        var randomFunc = random !== null && random !== void 0 ? random : Math.random;\n        this.p = buildPermutationTable(randomFunc);\n        this.perm = new Uint8Array(512);\n        this.permMod12 = new Uint8Array(512);\n        for (var i = 0; i < 512; i++) {\n            this.perm[i] = this.p[i & 255];\n            this.permMod12[i] = this.perm[i] % 12;\n        }\n    }\n    SimplexNoise.prototype.noise3D = function (xin, yin, zin) {\n        var permMod12 = this.permMod12;\n        var perm = this.perm;\n        var n0, n1, n2, n3;\n        var s = (xin + yin + zin) * F3;\n        var i = Math.floor(xin + s);\n        var j = Math.floor(yin + s);\n        var k = Math.floor(zin + s);\n        var t = (i + j + k) * G3;\n        var X0 = i - t;\n        var Y0 = j - t;\n        var Z0 = k - t;\n        var x0 = xin - X0;\n        var y0 = yin - Y0;\n        var z0 = zin - Z0;\n        var i1, j1, k1;\n        var i2, j2, k2;\n        if (x0 >= y0) {\n            if (y0 >= z0) {\n                i1 = 1;\n                j1 = 0;\n                k1 = 0;\n                i2 = 1;\n                j2 = 1;\n                k2 = 0;\n            }\n            else if (x0 >= z0) {\n                i1 = 1;\n                j1 = 0;\n                k1 = 0;\n                i2 = 1;\n                j2 = 0;\n                k2 = 1;\n            }\n            else {\n                i1 = 0;\n                j1 = 0;\n                k1 = 1;\n                i2 = 1;\n                j2 = 0;\n                k2 = 1;\n            }\n        }\n        else {\n            if (y0 < z0) {\n                i1 = 0;\n                j1 = 0;\n                k1 = 1;\n                i2 = 0;\n                j2 = 1;\n                k2 = 1;\n            }\n            else if (x0 < z0) {\n                i1 = 0;\n                j1 = 1;\n                k1 = 0;\n                i2 = 0;\n                j2 = 1;\n                k2 = 1;\n            }\n            else {\n                i1 = 0;\n                j1 = 1;\n                k1 = 0;\n                i2 = 1;\n                j2 = 1;\n                k2 = 0;\n            }\n        }\n        var x1 = x0 - i1 + G3;\n        var y1 = y0 - j1 + G3;\n        var z1 = z0 - k1 + G3;\n        var x2 = x0 - i2 + 2.0 * G3;\n        var y2 = y0 - j2 + 2.0 * G3;\n        var z2 = z0 - k2 + 2.0 * G3;\n        var x3 = x0 - 1.0 + 3.0 * G3;\n        var y3 = y0 - 1.0 + 3.0 * G3;\n        var z3 = z0 - 1.0 + 3.0 * G3;\n        var ii = i & 255;\n        var jj = j & 255;\n        var kk = k & 255;\n        var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n        if (t0 < 0) {\n            n0 = 0.0;\n        }\n        else {\n            var gi0 = permMod12[ii + perm[jj + perm[kk]]] * 3;\n            t0 *= t0;\n            n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0 + grad3[gi0 + 2] * z0);\n        }\n        var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n        if (t1 < 0) {\n            n1 = 0.0;\n        }\n        else {\n            var gi1 = permMod12[ii + i1 + perm[jj + j1 + perm[kk + k1]]] * 3;\n            t1 *= t1;\n            n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1 + grad3[gi1 + 2] * z1);\n        }\n        var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n        if (t2 < 0) {\n            n2 = 0.0;\n        }\n        else {\n            var gi2 = permMod12[ii + i2 + perm[jj + j2 + perm[kk + k2]]] * 3;\n            t2 *= t2;\n            n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2 + grad3[gi2 + 2] * z2);\n        }\n        var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n        if (t3 < 0) {\n            n3 = 0.0;\n        }\n        else {\n            var gi3 = permMod12[ii + 1 + perm[jj + 1 + perm[kk + 1]]] * 3;\n            t3 *= t3;\n            n3 = t3 * t3 * (grad3[gi3] * x3 + grad3[gi3 + 1] * y3 + grad3[gi3 + 2] * z3);\n        }\n        return 32.0 * (n0 + n1 + n2 + n3);\n    };\n    return SimplexNoise;\n}());\nexports.SimplexNoise = SimplexNoise;\n"]},"metadata":{},"sourceType":"script"}