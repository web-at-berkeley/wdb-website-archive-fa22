{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Constants_1 = require(\"../Utils/Constants\");\n\nvar CanvasUtils_1 = require(\"../Utils/CanvasUtils\");\n\nvar ColorUtils_1 = require(\"../Utils/ColorUtils\");\n\nvar Canvas = function () {\n  function Canvas(container) {\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this.context = null;\n    this.generatedCanvas = false;\n  }\n\n  Canvas.prototype.init = function () {\n    this.resize();\n    var container = this.container;\n    var options = container.options;\n    var cover = options.backgroundMask.cover;\n    var color = cover.color;\n    var trail = options.particles.move.trail;\n    this.coverColor = ColorUtils_1.ColorUtils.colorToRgb(color);\n    this.trailFillColor = ColorUtils_1.ColorUtils.colorToRgb(trail.fillColor);\n    this.paint();\n  };\n\n  Canvas.prototype.loadCanvas = function (canvas, generatedCanvas) {\n    var _a;\n\n    if (!canvas.className) {\n      canvas.className = Constants_1.Constants.canvasClass;\n    }\n\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n\n    this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : false;\n    this.element = canvas;\n    this.size.height = canvas.offsetHeight;\n    this.size.width = canvas.offsetWidth;\n    this.context = this.element.getContext(\"2d\");\n    this.container.retina.init();\n    this.initBackground();\n  };\n\n  Canvas.prototype.destroy = function () {\n    var _a;\n\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n\n    if (this.context) {\n      CanvasUtils_1.CanvasUtils.clear(this.context, this.size);\n    }\n  };\n\n  Canvas.prototype.resize = function () {\n    if (this.element) {\n      this.element.width = this.size.width;\n      this.element.height = this.size.height;\n    }\n  };\n\n  Canvas.prototype.paint = function () {\n    var container = this.container;\n    var options = container.options;\n\n    if (this.context) {\n      if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n        this.paintBase(ColorUtils_1.ColorUtils.getStyleFromColor(this.coverColor));\n      } else {\n        this.paintBase();\n      }\n    }\n  };\n\n  Canvas.prototype.clear = function () {\n    var container = this.container;\n    var options = container.options;\n    var trail = options.particles.move.trail;\n\n    if (options.backgroundMask.enable) {\n      this.paint();\n    } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n      this.paintBase(ColorUtils_1.ColorUtils.getStyleFromColor(this.trailFillColor, 1 / trail.length));\n    } else if (this.context) {\n      CanvasUtils_1.CanvasUtils.clear(this.context, this.size);\n    }\n  };\n\n  Canvas.prototype.isPointInPath = function (path, point) {\n    var _a, _b;\n\n    return (_b = (_a = this.context) === null || _a === void 0 ? void 0 : _a.isPointInPath(path, point.x, point.y)) !== null && _b !== void 0 ? _b : false;\n  };\n\n  Canvas.prototype.drawLinkedLine = function (p1, link) {\n    var _a;\n\n    var container = this.container;\n    var options = container.options;\n    var p2 = link.destination;\n    var opacity = link.opacity;\n    var pos1 = p1.getPosition();\n    var pos2 = p2.getPosition();\n    var ctx = this.context;\n\n    if (!ctx) {\n      return;\n    }\n\n    var colorLine;\n    var twinkle = p1.particlesOptions.twinkle.lines;\n\n    if (twinkle.enable) {\n      var twinkleFreq = twinkle.frequency;\n      var twinkleColor = typeof twinkle.color === \"string\" ? {\n        value: twinkle.color\n      } : twinkle.color;\n      var twinkleRgb = twinkleColor !== undefined ? ColorUtils_1.ColorUtils.colorToRgb(twinkleColor) : undefined;\n      var twinkling = Math.random() < twinkleFreq;\n\n      if (twinkling && twinkleRgb !== undefined) {\n        colorLine = twinkleRgb;\n        opacity = twinkle.opacity;\n      }\n    }\n\n    if (!colorLine) {\n      if (container.particles.lineLinkedColor === Constants_1.Constants.randomColorValue) {\n        colorLine = ColorUtils_1.ColorUtils.getRandomRgbColor();\n      } else if (container.particles.lineLinkedColor == \"mid\" && p1.color && p2.color) {\n        var sourceColor = p1.color;\n        var destColor = p2.color;\n        colorLine = ColorUtils_1.ColorUtils.mix(sourceColor, destColor, p1.size.value, p2.size.value);\n      } else {\n        colorLine = container.particles.lineLinkedColor;\n      }\n    }\n\n    var width = (_a = p1.lineLinkedWidth) !== null && _a !== void 0 ? _a : container.retina.lineLinkedWidth;\n    CanvasUtils_1.CanvasUtils.drawLinkedLine(ctx, width, pos1, pos2, options.backgroundMask.enable, colorLine, opacity, p1.particlesOptions.lineLinked.shadow);\n  };\n\n  Canvas.prototype.drawConnectLine = function (p1, p2) {\n    var _a;\n\n    var lineStyle = this.lineStyle(p1, p2);\n\n    if (!lineStyle) {\n      return;\n    }\n\n    var ctx = this.context;\n\n    if (!ctx) {\n      return;\n    }\n\n    var pos1 = p1.getPosition();\n    var pos2 = p2.getPosition();\n    CanvasUtils_1.CanvasUtils.drawConnectLine(ctx, (_a = p1.lineLinkedWidth) !== null && _a !== void 0 ? _a : this.container.retina.lineLinkedWidth, lineStyle, pos1, pos2);\n  };\n\n  Canvas.prototype.drawGrabLine = function (particle, opacity, mousePos) {\n    var _a;\n\n    var container = this.container;\n    var optColor = particle.particlesOptions.lineLinked.color;\n    var lineColor = container.particles.grabLineColor || (typeof optColor === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(optColor) : ColorUtils_1.ColorUtils.colorToRgb(optColor));\n\n    if (lineColor == Constants_1.Constants.randomColorValue) {\n      lineColor = ColorUtils_1.ColorUtils.getRandomRgbColor();\n    }\n\n    container.particles.grabLineColor = lineColor;\n    var ctx = container.canvas.context;\n\n    if (!ctx) {\n      return;\n    }\n\n    var colorLine;\n\n    if (container.particles.grabLineColor === Constants_1.Constants.randomColorValue) {\n      colorLine = ColorUtils_1.ColorUtils.getRandomRgbColor();\n    } else {\n      colorLine = container.particles.grabLineColor;\n    }\n\n    if (colorLine === undefined) {\n      return;\n    }\n\n    var beginPos = particle.getPosition();\n    CanvasUtils_1.CanvasUtils.drawGrabLine(ctx, (_a = particle.lineLinkedWidth) !== null && _a !== void 0 ? _a : container.retina.lineLinkedWidth, beginPos, mousePos, colorLine, opacity);\n  };\n\n  Canvas.prototype.drawParticle = function (particle, delta) {\n    var _a, _b, _c;\n\n    var container = this.container;\n    var options = container.options;\n    var twinkle = particle.particlesOptions.twinkle.particles;\n    var twinkleFreq = twinkle.frequency;\n    var twinkleColor = typeof twinkle.color === \"string\" ? {\n      value: twinkle.color\n    } : twinkle.color;\n    var twinkleRgb = twinkleColor !== undefined ? ColorUtils_1.ColorUtils.colorToRgb(twinkleColor) : undefined;\n    var twinkling = twinkle.enable && Math.random() < twinkleFreq;\n    var radius = (_a = particle.bubble.radius) !== null && _a !== void 0 ? _a : particle.size.value;\n    var opacity = twinkling ? twinkle.opacity : (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : particle.opacity.value;\n    var infectionStage = particle.infectionStage;\n    var infection = options.infection;\n    var infectionStages = infection.stages;\n    var infectionColor = infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n    var infectionRgb = infectionColor ? ColorUtils_1.ColorUtils.colorToRgb(infectionColor) : undefined;\n    var color = twinkling && twinkleRgb !== undefined ? twinkleRgb : (_c = infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : particle.bubble.color) !== null && _c !== void 0 ? _c : particle.color;\n    var colorValue = color !== undefined ? ColorUtils_1.ColorUtils.getStyleFromColor(color, opacity) : undefined;\n\n    if (!this.context || !colorValue) {\n      return;\n    }\n\n    this.context.save();\n\n    for (var _i = 0, _d = particle.links; _i < _d.length; _i++) {\n      var link = _d[_i];\n      this.drawLinkedLine(particle, link);\n    }\n\n    this.context.restore();\n    CanvasUtils_1.CanvasUtils.drawParticle(this.container, this.context, particle, delta, colorValue, options.backgroundMask.enable, radius, opacity, particle.particlesOptions.shadow);\n  };\n\n  Canvas.prototype.drawPlugin = function (plugin, delta) {\n    if (!this.context) {\n      return;\n    }\n\n    CanvasUtils_1.CanvasUtils.drawPlugin(this.context, plugin, delta);\n  };\n\n  Canvas.prototype.paintBase = function (baseColor) {\n    if (this.context) {\n      CanvasUtils_1.CanvasUtils.paintBase(this.context, this.size, baseColor);\n    }\n  };\n\n  Canvas.prototype.lineStyle = function (p1, p2) {\n    var container = this.container;\n    var options = container.options;\n    var connectOptions = options.interactivity.modes.connect;\n\n    if (p1.color && p2.color) {\n      if (this.context) {\n        return CanvasUtils_1.CanvasUtils.gradient(this.context, p1, p2, connectOptions.lineLinked.opacity);\n      }\n    }\n  };\n\n  Canvas.prototype.initBackground = function () {\n    var container = this.container;\n    var options = container.options;\n    var background = options.background;\n    var element = this.element;\n\n    if (!element) {\n      return;\n    }\n\n    var elementStyle = element.style;\n\n    if (background.color) {\n      var color = ColorUtils_1.ColorUtils.colorToRgb(background.color);\n\n      if (color) {\n        elementStyle.backgroundColor = ColorUtils_1.ColorUtils.getStyleFromColor(color, background.opacity);\n      }\n    }\n\n    if (background.image) {\n      elementStyle.backgroundImage = background.image;\n    }\n\n    if (background.position) {\n      elementStyle.backgroundPosition = background.position;\n    }\n\n    if (background.repeat) {\n      elementStyle.backgroundRepeat = background.repeat;\n    }\n\n    if (background.size) {\n      elementStyle.backgroundSize = background.size;\n    }\n  };\n\n  return Canvas;\n}();\n\nexports.Canvas = Canvas;","map":{"version":3,"sources":["/Users/samarthgoel/Desktop/web-dev-website/node_modules/tsparticles/dist/Core/Canvas.js"],"names":["Object","defineProperty","exports","value","Constants_1","require","CanvasUtils_1","ColorUtils_1","Canvas","container","size","height","width","context","generatedCanvas","prototype","init","resize","options","cover","backgroundMask","color","trail","particles","move","coverColor","ColorUtils","colorToRgb","trailFillColor","fillColor","paint","loadCanvas","canvas","_a","className","Constants","canvasClass","element","remove","offsetHeight","offsetWidth","getContext","retina","initBackground","destroy","CanvasUtils","clear","enable","paintBase","getStyleFromColor","length","isPointInPath","path","point","_b","x","y","drawLinkedLine","p1","link","p2","destination","opacity","pos1","getPosition","pos2","ctx","colorLine","twinkle","particlesOptions","lines","twinkleFreq","frequency","twinkleColor","twinkleRgb","undefined","twinkling","Math","random","lineLinkedColor","randomColorValue","getRandomRgbColor","sourceColor","destColor","mix","lineLinkedWidth","lineLinked","shadow","drawConnectLine","lineStyle","drawGrabLine","particle","mousePos","optColor","lineColor","grabLineColor","stringToRgb","beginPos","drawParticle","delta","_c","radius","bubble","infectionStage","infection","infectionStages","stages","infectionColor","infectionRgb","colorValue","save","_i","_d","links","restore","drawPlugin","plugin","baseColor","connectOptions","interactivity","modes","connect","gradient","background","elementStyle","style","backgroundColor","image","backgroundImage","position","backgroundPosition","repeat","backgroundRepeat","backgroundSize"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Constants_1 = require(\"../Utils/Constants\");\nvar CanvasUtils_1 = require(\"../Utils/CanvasUtils\");\nvar ColorUtils_1 = require(\"../Utils/ColorUtils\");\nvar Canvas = (function () {\n    function Canvas(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    Canvas.prototype.init = function () {\n        this.resize();\n        var container = this.container;\n        var options = container.options;\n        var cover = options.backgroundMask.cover;\n        var color = cover.color;\n        var trail = options.particles.move.trail;\n        this.coverColor = ColorUtils_1.ColorUtils.colorToRgb(color);\n        this.trailFillColor = ColorUtils_1.ColorUtils.colorToRgb(trail.fillColor);\n        this.paint();\n    };\n    Canvas.prototype.loadCanvas = function (canvas, generatedCanvas) {\n        var _a;\n        if (!canvas.className) {\n            canvas.className = Constants_1.Constants.canvasClass;\n        }\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : false;\n        this.element = canvas;\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    };\n    Canvas.prototype.destroy = function () {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        if (this.context) {\n            CanvasUtils_1.CanvasUtils.clear(this.context, this.size);\n        }\n    };\n    Canvas.prototype.resize = function () {\n        if (this.element) {\n            this.element.width = this.size.width;\n            this.element.height = this.size.height;\n        }\n    };\n    Canvas.prototype.paint = function () {\n        var container = this.container;\n        var options = container.options;\n        if (this.context) {\n            if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n                this.paintBase(ColorUtils_1.ColorUtils.getStyleFromColor(this.coverColor));\n            }\n            else {\n                this.paintBase();\n            }\n        }\n    };\n    Canvas.prototype.clear = function () {\n        var container = this.container;\n        var options = container.options;\n        var trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(ColorUtils_1.ColorUtils.getStyleFromColor(this.trailFillColor, 1 / trail.length));\n        }\n        else if (this.context) {\n            CanvasUtils_1.CanvasUtils.clear(this.context, this.size);\n        }\n    };\n    Canvas.prototype.isPointInPath = function (path, point) {\n        var _a, _b;\n        return (_b = (_a = this.context) === null || _a === void 0 ? void 0 : _a.isPointInPath(path, point.x, point.y)) !== null && _b !== void 0 ? _b : false;\n    };\n    Canvas.prototype.drawLinkedLine = function (p1, link) {\n        var _a;\n        var container = this.container;\n        var options = container.options;\n        var p2 = link.destination;\n        var opacity = link.opacity;\n        var pos1 = p1.getPosition();\n        var pos2 = p2.getPosition();\n        var ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        var colorLine;\n        var twinkle = p1.particlesOptions.twinkle.lines;\n        if (twinkle.enable) {\n            var twinkleFreq = twinkle.frequency;\n            var twinkleColor = typeof twinkle.color === \"string\" ? { value: twinkle.color } : twinkle.color;\n            var twinkleRgb = twinkleColor !== undefined ? ColorUtils_1.ColorUtils.colorToRgb(twinkleColor) : undefined;\n            var twinkling = Math.random() < twinkleFreq;\n            if (twinkling && twinkleRgb !== undefined) {\n                colorLine = twinkleRgb;\n                opacity = twinkle.opacity;\n            }\n        }\n        if (!colorLine) {\n            if (container.particles.lineLinkedColor === Constants_1.Constants.randomColorValue) {\n                colorLine = ColorUtils_1.ColorUtils.getRandomRgbColor();\n            }\n            else if (container.particles.lineLinkedColor == \"mid\" && p1.color && p2.color) {\n                var sourceColor = p1.color;\n                var destColor = p2.color;\n                colorLine = ColorUtils_1.ColorUtils.mix(sourceColor, destColor, p1.size.value, p2.size.value);\n            }\n            else {\n                colorLine = container.particles.lineLinkedColor;\n            }\n        }\n        var width = (_a = p1.lineLinkedWidth) !== null && _a !== void 0 ? _a : container.retina.lineLinkedWidth;\n        CanvasUtils_1.CanvasUtils.drawLinkedLine(ctx, width, pos1, pos2, options.backgroundMask.enable, colorLine, opacity, p1.particlesOptions.lineLinked.shadow);\n    };\n    Canvas.prototype.drawConnectLine = function (p1, p2) {\n        var _a;\n        var lineStyle = this.lineStyle(p1, p2);\n        if (!lineStyle) {\n            return;\n        }\n        var ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        var pos1 = p1.getPosition();\n        var pos2 = p2.getPosition();\n        CanvasUtils_1.CanvasUtils.drawConnectLine(ctx, (_a = p1.lineLinkedWidth) !== null && _a !== void 0 ? _a : this.container.retina.lineLinkedWidth, lineStyle, pos1, pos2);\n    };\n    Canvas.prototype.drawGrabLine = function (particle, opacity, mousePos) {\n        var _a;\n        var container = this.container;\n        var optColor = particle.particlesOptions.lineLinked.color;\n        var lineColor = container.particles.grabLineColor ||\n            (typeof optColor === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(optColor) : ColorUtils_1.ColorUtils.colorToRgb(optColor));\n        if (lineColor == Constants_1.Constants.randomColorValue) {\n            lineColor = ColorUtils_1.ColorUtils.getRandomRgbColor();\n        }\n        container.particles.grabLineColor = lineColor;\n        var ctx = container.canvas.context;\n        if (!ctx) {\n            return;\n        }\n        var colorLine;\n        if (container.particles.grabLineColor === Constants_1.Constants.randomColorValue) {\n            colorLine = ColorUtils_1.ColorUtils.getRandomRgbColor();\n        }\n        else {\n            colorLine = container.particles.grabLineColor;\n        }\n        if (colorLine === undefined) {\n            return;\n        }\n        var beginPos = particle.getPosition();\n        CanvasUtils_1.CanvasUtils.drawGrabLine(ctx, (_a = particle.lineLinkedWidth) !== null && _a !== void 0 ? _a : container.retina.lineLinkedWidth, beginPos, mousePos, colorLine, opacity);\n    };\n    Canvas.prototype.drawParticle = function (particle, delta) {\n        var _a, _b, _c;\n        var container = this.container;\n        var options = container.options;\n        var twinkle = particle.particlesOptions.twinkle.particles;\n        var twinkleFreq = twinkle.frequency;\n        var twinkleColor = typeof twinkle.color === \"string\" ? { value: twinkle.color } : twinkle.color;\n        var twinkleRgb = twinkleColor !== undefined ? ColorUtils_1.ColorUtils.colorToRgb(twinkleColor) : undefined;\n        var twinkling = twinkle.enable && Math.random() < twinkleFreq;\n        var radius = (_a = particle.bubble.radius) !== null && _a !== void 0 ? _a : particle.size.value;\n        var opacity = twinkling ? twinkle.opacity : (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : particle.opacity.value;\n        var infectionStage = particle.infectionStage;\n        var infection = options.infection;\n        var infectionStages = infection.stages;\n        var infectionColor = infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n        var infectionRgb = infectionColor ? ColorUtils_1.ColorUtils.colorToRgb(infectionColor) : undefined;\n        var color = twinkling && twinkleRgb !== undefined ?\n            twinkleRgb : (_c = infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : particle.bubble.color) !== null && _c !== void 0 ? _c : particle.color;\n        var colorValue = color !== undefined ? ColorUtils_1.ColorUtils.getStyleFromColor(color, opacity) : undefined;\n        if (!this.context || !colorValue) {\n            return;\n        }\n        this.context.save();\n        for (var _i = 0, _d = particle.links; _i < _d.length; _i++) {\n            var link = _d[_i];\n            this.drawLinkedLine(particle, link);\n        }\n        this.context.restore();\n        CanvasUtils_1.CanvasUtils.drawParticle(this.container, this.context, particle, delta, colorValue, options.backgroundMask.enable, radius, opacity, particle.particlesOptions.shadow);\n    };\n    Canvas.prototype.drawPlugin = function (plugin, delta) {\n        if (!this.context) {\n            return;\n        }\n        CanvasUtils_1.CanvasUtils.drawPlugin(this.context, plugin, delta);\n    };\n    Canvas.prototype.paintBase = function (baseColor) {\n        if (this.context) {\n            CanvasUtils_1.CanvasUtils.paintBase(this.context, this.size, baseColor);\n        }\n    };\n    Canvas.prototype.lineStyle = function (p1, p2) {\n        var container = this.container;\n        var options = container.options;\n        var connectOptions = options.interactivity.modes.connect;\n        if (p1.color && p2.color) {\n            if (this.context) {\n                return CanvasUtils_1.CanvasUtils.gradient(this.context, p1, p2, connectOptions.lineLinked.opacity);\n            }\n        }\n    };\n    Canvas.prototype.initBackground = function () {\n        var container = this.container;\n        var options = container.options;\n        var background = options.background;\n        var element = this.element;\n        if (!element) {\n            return;\n        }\n        var elementStyle = element.style;\n        if (background.color) {\n            var color = ColorUtils_1.ColorUtils.colorToRgb(background.color);\n            if (color) {\n                elementStyle.backgroundColor = ColorUtils_1.ColorUtils.getStyleFromColor(color, background.opacity);\n            }\n        }\n        if (background.image) {\n            elementStyle.backgroundImage = background.image;\n        }\n        if (background.position) {\n            elementStyle.backgroundPosition = background.position;\n        }\n        if (background.repeat) {\n            elementStyle.backgroundRepeat = background.repeat;\n        }\n        if (background.size) {\n            elementStyle.backgroundSize = background.size;\n        }\n    };\n    return Canvas;\n}());\nexports.Canvas = Canvas;\n"]},"metadata":{},"sourceType":"script"}