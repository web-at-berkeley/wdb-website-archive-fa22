{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ShapeType_1 = require(\"../Enums/ShapeType\");\n\nvar Updater_1 = require(\"./Particle/Updater\");\n\nvar Utils_1 = require(\"../Utils/Utils\");\n\nvar PolygonMaskType_1 = require(\"../Enums/PolygonMaskType\");\n\nvar RotateDirection_1 = require(\"../Enums/RotateDirection\");\n\nvar ColorUtils_1 = require(\"../Utils/ColorUtils\");\n\nvar Particles_1 = require(\"../Options/Classes/Particles/Particles\");\n\nvar SizeAnimationStatus_1 = require(\"../Enums/SizeAnimationStatus\");\n\nvar OpacityAnimationStatus_1 = require(\"../Enums/OpacityAnimationStatus\");\n\nvar Shape_1 = require(\"../Options/Classes/Particles/Shape/Shape\");\n\nvar StartValueType_1 = require(\"../Enums/StartValueType\");\n\nvar Plugins_1 = require(\"../Utils/Plugins\");\n\nvar Particle = function () {\n  function Particle(container, position, overrideOptions) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\n\n    this.container = container;\n    this.fill = true;\n    this.close = true;\n    this.links = [];\n    this.lastNoiseTime = 0;\n    this.destroyed = false;\n    var options = container.options;\n    var particlesOptions = new Particles_1.Particles();\n    particlesOptions.load(options.particles);\n\n    if ((overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) !== undefined) {\n      var shapeType = (_a = overrideOptions.shape.type) !== null && _a !== void 0 ? _a : particlesOptions.shape.type;\n      this.shape = shapeType instanceof Array ? Utils_1.Utils.itemFromArray(shapeType) : shapeType;\n      var shapeOptions = new Shape_1.Shape();\n      shapeOptions.load(overrideOptions.shape);\n\n      if (this.shape !== undefined) {\n        var shapeData = shapeOptions.options[this.shape];\n\n        if (shapeData !== undefined) {\n          this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData);\n          this.fill = (_c = (_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.fill) !== null && _c !== void 0 ? _c : this.fill;\n          this.close = (_e = (_d = this.shapeData) === null || _d === void 0 ? void 0 : _d.close) !== null && _e !== void 0 ? _e : this.close;\n        }\n      }\n    } else {\n      var shapeType = particlesOptions.shape.type;\n      this.shape = shapeType instanceof Array ? Utils_1.Utils.itemFromArray(shapeType) : shapeType;\n      var shapeData = particlesOptions.shape.options[this.shape];\n\n      if (shapeData) {\n        this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData);\n        this.fill = (_g = (_f = this.shapeData) === null || _f === void 0 ? void 0 : _f.fill) !== null && _g !== void 0 ? _g : this.fill;\n        this.close = (_j = (_h = this.shapeData) === null || _h === void 0 ? void 0 : _h.close) !== null && _j !== void 0 ? _j : this.close;\n      }\n    }\n\n    if (overrideOptions !== undefined) {\n      particlesOptions.load(overrideOptions);\n    }\n\n    if (((_k = this.shapeData) === null || _k === void 0 ? void 0 : _k.particles) !== undefined) {\n      particlesOptions.load((_l = this.shapeData) === null || _l === void 0 ? void 0 : _l.particles);\n    }\n\n    this.particlesOptions = particlesOptions;\n    var noiseDelay = this.particlesOptions.move.noise.delay;\n    this.noiseDelay = (noiseDelay.random.enable ? Utils_1.Utils.randomInRange(noiseDelay.random.minimumValue, noiseDelay.value) : noiseDelay.value) * 1000;\n    container.retina.initParticle(this);\n    var color = this.particlesOptions.color;\n    var sizeValue = (_m = this.sizeValue) !== null && _m !== void 0 ? _m : container.retina.sizeValue;\n    var randomSize = typeof this.particlesOptions.size.random === \"boolean\" ? this.particlesOptions.size.random : this.particlesOptions.size.random.enable;\n    this.size = {\n      value: randomSize && this.randomMinimumSize !== undefined ? Utils_1.Utils.randomInRange(this.randomMinimumSize, sizeValue) : sizeValue\n    };\n    this.direction = this.particlesOptions.move.direction;\n    this.bubble = {};\n    this.angle = this.particlesOptions.rotate.random ? Math.random() * 360 : this.particlesOptions.rotate.value;\n\n    if (this.particlesOptions.rotate.direction == RotateDirection_1.RotateDirection.random) {\n      var index = Math.floor(Math.random() * 2);\n\n      if (index > 0) {\n        this.rotateDirection = RotateDirection_1.RotateDirection.counterClockwise;\n      } else {\n        this.rotateDirection = RotateDirection_1.RotateDirection.clockwise;\n      }\n    } else {\n      this.rotateDirection = this.particlesOptions.rotate.direction;\n    }\n\n    if (this.particlesOptions.size.animation.enable) {\n      switch (this.particlesOptions.size.animation.startValue) {\n        case StartValueType_1.StartValueType.min:\n          if (!randomSize) {\n            var pxRatio = container.retina.pixelRatio;\n            this.size.value = this.particlesOptions.size.animation.minimumValue * pxRatio;\n          }\n\n          break;\n      }\n\n      this.size.status = SizeAnimationStatus_1.SizeAnimationStatus.increasing;\n      this.size.velocity = ((_o = this.sizeAnimationSpeed) !== null && _o !== void 0 ? _o : container.retina.sizeAnimationSpeed) / 100;\n\n      if (!this.particlesOptions.size.animation.sync) {\n        this.size.velocity = this.size.velocity * Math.random();\n      }\n    }\n\n    if (this.particlesOptions.rotate.animation.enable) {\n      if (!this.particlesOptions.rotate.animation.sync) {\n        this.angle = Math.random() * 360;\n      }\n    }\n\n    this.position = this.calcPosition(this.container, position);\n\n    if (options.polygon.enable && options.polygon.type === PolygonMaskType_1.PolygonMaskType.inline) {\n      this.initialPosition = {\n        x: this.position.x,\n        y: this.position.y\n      };\n    }\n\n    this.offset = {\n      x: 0,\n      y: 0\n    };\n\n    if (this.particlesOptions.collisions.enable) {\n      this.checkOverlap(position);\n    }\n\n    if (color instanceof Array) {\n      this.color = ColorUtils_1.ColorUtils.colorToRgb(Utils_1.Utils.itemFromArray(color));\n    } else {\n      this.color = ColorUtils_1.ColorUtils.colorToRgb(color);\n    }\n\n    var randomOpacity = this.particlesOptions.opacity.random;\n    var opacityValue = this.particlesOptions.opacity.value;\n    this.opacity = {\n      value: randomOpacity.enable ? Utils_1.Utils.randomInRange(randomOpacity.minimumValue, opacityValue) : opacityValue\n    };\n\n    if (this.particlesOptions.opacity.animation.enable) {\n      this.opacity.status = OpacityAnimationStatus_1.OpacityAnimationStatus.increasing;\n      this.opacity.velocity = this.particlesOptions.opacity.animation.speed / 100;\n\n      if (!this.particlesOptions.opacity.animation.sync) {\n        this.opacity.velocity *= Math.random();\n      }\n    }\n\n    this.initialVelocity = this.calculateVelocity();\n    this.velocity = {\n      horizontal: this.initialVelocity.horizontal,\n      vertical: this.initialVelocity.vertical\n    };\n    var drawer = container.drawers[this.shape];\n\n    if (!drawer) {\n      drawer = Plugins_1.Plugins.getShapeDrawer(this.shape);\n      container.drawers[this.shape] = drawer;\n    }\n\n    if (this.shape === ShapeType_1.ShapeType.image || this.shape === ShapeType_1.ShapeType.images) {\n      var shape = this.particlesOptions.shape;\n      var imageDrawer = drawer;\n      var imagesOptions = shape.options[this.shape];\n      var images = imageDrawer.getImages(container).images;\n      var index = Utils_1.Utils.arrayRandomIndex(images);\n      var image_1 = images[index];\n      var optionsImage = imagesOptions instanceof Array ? imagesOptions.filter(function (t) {\n        return t.src === image_1.source;\n      })[0] : imagesOptions;\n      this.image = {\n        data: image_1,\n        ratio: optionsImage.width / optionsImage.height,\n        replaceColor: (_p = optionsImage.replaceColor) !== null && _p !== void 0 ? _p : optionsImage.replace_color,\n        source: optionsImage.src\n      };\n\n      if (!this.image.ratio) {\n        this.image.ratio = 1;\n      }\n\n      this.fill = (_q = optionsImage.fill) !== null && _q !== void 0 ? _q : this.fill;\n      this.close = (_r = optionsImage.close) !== null && _r !== void 0 ? _r : this.close;\n    }\n\n    this.stroke = this.particlesOptions.stroke instanceof Array ? Utils_1.Utils.itemFromArray(this.particlesOptions.stroke) : this.particlesOptions.stroke;\n    this.strokeColor = typeof this.stroke.color === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(this.stroke.color) : ColorUtils_1.ColorUtils.colorToRgb(this.stroke.color);\n    this.shadowColor = typeof this.particlesOptions.shadow.color === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(this.particlesOptions.shadow.color) : ColorUtils_1.ColorUtils.colorToRgb(this.particlesOptions.shadow.color);\n    this.updater = new Updater_1.Updater(this.container, this);\n  }\n\n  Particle.prototype.update = function (index, delta) {\n    this.links = [];\n    this.updater.update(delta);\n  };\n\n  Particle.prototype.draw = function (delta) {\n    this.container.canvas.drawParticle(this, delta);\n  };\n\n  Particle.prototype.isOverlapping = function () {\n    var container = this.container;\n    var p1 = this;\n    var collisionFound = false;\n    var iterations = 0;\n    var pos1 = p1.getPosition();\n\n    for (var _i = 0, _a = container.particles.array.filter(function (t) {\n      return t != p1;\n    }); _i < _a.length; _i++) {\n      var p2 = _a[_i];\n      iterations++;\n      var pos2 = p2.getPosition();\n      var dist = Utils_1.Utils.getDistance(pos1, pos2);\n\n      if (dist <= p1.size.value + p2.size.value) {\n        collisionFound = true;\n        break;\n      }\n    }\n\n    return {\n      collisionFound: collisionFound,\n      iterations: iterations\n    };\n  };\n\n  Particle.prototype.checkOverlap = function (position) {\n    var container = this.container;\n    var p = this;\n    var overlapResult = p.isOverlapping();\n\n    if (overlapResult.iterations >= container.particles.count) {\n      container.particles.remove(this);\n    } else if (overlapResult.collisionFound) {\n      p.position.x = position ? position.x : Math.random() * container.canvas.size.width;\n      p.position.y = position ? position.y : Math.random() * container.canvas.size.height;\n      p.checkOverlap();\n    }\n  };\n\n  Particle.prototype.startInfection = function (stage) {\n    var container = this.container;\n    var options = container.options;\n    var stages = options.infection.stages;\n    var stagesCount = stages.length;\n\n    if (stage > stagesCount || stage < 0) {\n      return;\n    }\n\n    this.infectionDelay = 0;\n    this.infectionDelayStage = stage;\n  };\n\n  Particle.prototype.updateInfectionStage = function (stage) {\n    var container = this.container;\n    var options = container.options;\n    var stagesCount = options.infection.stages.length;\n\n    if (stage > stagesCount || stage < 0 || this.infectionStage !== undefined && this.infectionStage > stage) {\n      return;\n    }\n\n    if (this.infectionTimeout !== undefined) {\n      window.clearTimeout(this.infectionTimeout);\n    }\n\n    this.infectionStage = stage;\n    this.infectionTime = 0;\n  };\n\n  Particle.prototype.updateInfection = function (delta) {\n    var container = this.container;\n    var options = container.options;\n    var infection = options.infection;\n    var stages = options.infection.stages;\n    var stagesCount = stages.length;\n\n    if (this.infectionDelay !== undefined && this.infectionDelayStage !== undefined) {\n      var stage = this.infectionDelayStage;\n\n      if (stage > stagesCount || stage < 0) {\n        return;\n      }\n\n      if (this.infectionDelay > infection.delay * 1000) {\n        this.infectionStage = stage;\n        this.infectionTime = 0;\n        delete this.infectionDelay;\n        delete this.infectionDelayStage;\n      } else {\n        this.infectionDelay += delta;\n      }\n    } else {\n      delete this.infectionDelay;\n      delete this.infectionDelayStage;\n    }\n\n    if (this.infectionStage !== undefined && this.infectionTime !== undefined) {\n      var infectionStage = stages[this.infectionStage];\n\n      if (infectionStage.duration !== undefined && infectionStage.duration >= 0) {\n        if (this.infectionTime > infectionStage.duration * 1000) {\n          this.nextInfectionStage();\n        } else {\n          this.infectionTime += delta;\n        }\n      } else {\n        this.infectionTime += delta;\n      }\n    } else {\n      delete this.infectionStage;\n      delete this.infectionTime;\n    }\n  };\n\n  Particle.prototype.getPosition = function () {\n    return {\n      x: this.position.x + this.offset.x,\n      y: this.position.y + this.offset.y\n    };\n  };\n\n  Particle.prototype.destroy = function () {\n    this.destroyed = true;\n  };\n\n  Particle.prototype.nextInfectionStage = function () {\n    var container = this.container;\n    var options = container.options;\n    var stagesCount = options.infection.stages.length;\n\n    if (stagesCount <= 0 || this.infectionStage === undefined) {\n      return;\n    }\n\n    this.infectionTime = 0;\n\n    if (stagesCount <= ++this.infectionStage) {\n      if (options.infection.cure) {\n        delete this.infectionStage;\n        delete this.infectionTime;\n        return;\n      } else {\n        this.infectionStage = 0;\n        this.infectionTime = 0;\n      }\n    }\n  };\n\n  Particle.prototype.calcPosition = function (container, position) {\n    for (var id in container.plugins) {\n      var plugin = container.plugins[id];\n      var pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position) : undefined;\n\n      if (pluginPos !== undefined) {\n        return pluginPos;\n      }\n    }\n\n    var pos = {\n      x: 0,\n      y: 0\n    };\n    pos.x = position ? position.x : Math.random() * container.canvas.size.width;\n    pos.y = position ? position.y : Math.random() * container.canvas.size.height;\n\n    if (pos.x > container.canvas.size.width - this.size.value * 2) {\n      pos.x -= this.size.value;\n    } else if (pos.x < this.size.value * 2) {\n      pos.x += this.size.value;\n    }\n\n    if (pos.y > container.canvas.size.height - this.size.value * 2) {\n      pos.y -= this.size.value;\n    } else if (pos.y < this.size.value * 2) {\n      pos.y += this.size.value;\n    }\n\n    return pos;\n  };\n\n  Particle.prototype.calculateVelocity = function () {\n    var baseVelocity = Utils_1.Utils.getParticleBaseVelocity(this);\n    var res = {\n      horizontal: 0,\n      vertical: 0\n    };\n\n    if (this.particlesOptions.move.straight) {\n      res.horizontal = baseVelocity.x;\n      res.vertical = baseVelocity.y;\n\n      if (this.particlesOptions.move.random) {\n        res.horizontal *= Math.random();\n        res.vertical *= Math.random();\n      }\n    } else {\n      res.horizontal = baseVelocity.x + Math.random() - 0.5;\n      res.vertical = baseVelocity.y + Math.random() - 0.5;\n    }\n\n    return res;\n  };\n\n  return Particle;\n}();\n\nexports.Particle = Particle;","map":{"version":3,"sources":["/Users/samarthgoel/Desktop/web-dev-website/node_modules/tsparticles/dist/Core/Particle.js"],"names":["Object","defineProperty","exports","value","ShapeType_1","require","Updater_1","Utils_1","PolygonMaskType_1","RotateDirection_1","ColorUtils_1","Particles_1","SizeAnimationStatus_1","OpacityAnimationStatus_1","Shape_1","StartValueType_1","Plugins_1","Particle","container","position","overrideOptions","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","fill","close","links","lastNoiseTime","destroyed","options","particlesOptions","Particles","load","particles","shape","undefined","shapeType","type","Array","Utils","itemFromArray","shapeOptions","Shape","shapeData","deepExtend","noiseDelay","move","noise","delay","random","enable","randomInRange","minimumValue","retina","initParticle","color","sizeValue","randomSize","size","randomMinimumSize","direction","bubble","angle","rotate","Math","RotateDirection","index","floor","rotateDirection","counterClockwise","clockwise","animation","startValue","StartValueType","min","pxRatio","pixelRatio","status","SizeAnimationStatus","increasing","velocity","sizeAnimationSpeed","sync","calcPosition","polygon","PolygonMaskType","inline","initialPosition","x","y","offset","collisions","checkOverlap","ColorUtils","colorToRgb","randomOpacity","opacity","opacityValue","OpacityAnimationStatus","speed","initialVelocity","calculateVelocity","horizontal","vertical","drawer","drawers","Plugins","getShapeDrawer","ShapeType","image","images","imageDrawer","imagesOptions","getImages","arrayRandomIndex","image_1","optionsImage","filter","t","src","source","data","ratio","width","height","replaceColor","replace_color","stroke","strokeColor","stringToRgb","shadowColor","shadow","updater","Updater","prototype","update","delta","draw","canvas","drawParticle","isOverlapping","p1","collisionFound","iterations","pos1","getPosition","_i","array","length","p2","pos2","dist","getDistance","p","overlapResult","count","remove","startInfection","stage","stages","infection","stagesCount","infectionDelay","infectionDelayStage","updateInfectionStage","infectionStage","infectionTimeout","window","clearTimeout","infectionTime","updateInfection","duration","nextInfectionStage","destroy","cure","id","plugins","plugin","pluginPos","particlePosition","pos","baseVelocity","getParticleBaseVelocity","res","straight"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ShapeType_1 = require(\"../Enums/ShapeType\");\nvar Updater_1 = require(\"./Particle/Updater\");\nvar Utils_1 = require(\"../Utils/Utils\");\nvar PolygonMaskType_1 = require(\"../Enums/PolygonMaskType\");\nvar RotateDirection_1 = require(\"../Enums/RotateDirection\");\nvar ColorUtils_1 = require(\"../Utils/ColorUtils\");\nvar Particles_1 = require(\"../Options/Classes/Particles/Particles\");\nvar SizeAnimationStatus_1 = require(\"../Enums/SizeAnimationStatus\");\nvar OpacityAnimationStatus_1 = require(\"../Enums/OpacityAnimationStatus\");\nvar Shape_1 = require(\"../Options/Classes/Particles/Shape/Shape\");\nvar StartValueType_1 = require(\"../Enums/StartValueType\");\nvar Plugins_1 = require(\"../Utils/Plugins\");\nvar Particle = (function () {\n    function Particle(container, position, overrideOptions) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\n        this.container = container;\n        this.fill = true;\n        this.close = true;\n        this.links = [];\n        this.lastNoiseTime = 0;\n        this.destroyed = false;\n        var options = container.options;\n        var particlesOptions = new Particles_1.Particles();\n        particlesOptions.load(options.particles);\n        if ((overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) !== undefined) {\n            var shapeType = (_a = overrideOptions.shape.type) !== null && _a !== void 0 ? _a : particlesOptions.shape.type;\n            this.shape = shapeType instanceof Array ? Utils_1.Utils.itemFromArray(shapeType) : shapeType;\n            var shapeOptions = new Shape_1.Shape();\n            shapeOptions.load(overrideOptions.shape);\n            if (this.shape !== undefined) {\n                var shapeData = shapeOptions.options[this.shape];\n                if (shapeData !== undefined) {\n                    this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ?\n                        Utils_1.Utils.itemFromArray(shapeData) :\n                        shapeData);\n                    this.fill = (_c = (_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.fill) !== null && _c !== void 0 ? _c : this.fill;\n                    this.close = (_e = (_d = this.shapeData) === null || _d === void 0 ? void 0 : _d.close) !== null && _e !== void 0 ? _e : this.close;\n                }\n            }\n        }\n        else {\n            var shapeType = particlesOptions.shape.type;\n            this.shape = shapeType instanceof Array ? Utils_1.Utils.itemFromArray(shapeType) : shapeType;\n            var shapeData = particlesOptions.shape.options[this.shape];\n            if (shapeData) {\n                this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ?\n                    Utils_1.Utils.itemFromArray(shapeData) :\n                    shapeData);\n                this.fill = (_g = (_f = this.shapeData) === null || _f === void 0 ? void 0 : _f.fill) !== null && _g !== void 0 ? _g : this.fill;\n                this.close = (_j = (_h = this.shapeData) === null || _h === void 0 ? void 0 : _h.close) !== null && _j !== void 0 ? _j : this.close;\n            }\n        }\n        if (overrideOptions !== undefined) {\n            particlesOptions.load(overrideOptions);\n        }\n        if (((_k = this.shapeData) === null || _k === void 0 ? void 0 : _k.particles) !== undefined) {\n            particlesOptions.load((_l = this.shapeData) === null || _l === void 0 ? void 0 : _l.particles);\n        }\n        this.particlesOptions = particlesOptions;\n        var noiseDelay = this.particlesOptions.move.noise.delay;\n        this.noiseDelay = (noiseDelay.random.enable ?\n            Utils_1.Utils.randomInRange(noiseDelay.random.minimumValue, noiseDelay.value) :\n            noiseDelay.value) * 1000;\n        container.retina.initParticle(this);\n        var color = this.particlesOptions.color;\n        var sizeValue = ((_m = this.sizeValue) !== null && _m !== void 0 ? _m : container.retina.sizeValue);\n        var randomSize = typeof this.particlesOptions.size.random === \"boolean\" ?\n            this.particlesOptions.size.random :\n            this.particlesOptions.size.random.enable;\n        this.size = {\n            value: randomSize && this.randomMinimumSize !== undefined ?\n                Utils_1.Utils.randomInRange(this.randomMinimumSize, sizeValue) :\n                sizeValue,\n        };\n        this.direction = this.particlesOptions.move.direction;\n        this.bubble = {};\n        this.angle = this.particlesOptions.rotate.random ? Math.random() * 360 : this.particlesOptions.rotate.value;\n        if (this.particlesOptions.rotate.direction == RotateDirection_1.RotateDirection.random) {\n            var index = Math.floor(Math.random() * 2);\n            if (index > 0) {\n                this.rotateDirection = RotateDirection_1.RotateDirection.counterClockwise;\n            }\n            else {\n                this.rotateDirection = RotateDirection_1.RotateDirection.clockwise;\n            }\n        }\n        else {\n            this.rotateDirection = this.particlesOptions.rotate.direction;\n        }\n        if (this.particlesOptions.size.animation.enable) {\n            switch (this.particlesOptions.size.animation.startValue) {\n                case StartValueType_1.StartValueType.min:\n                    if (!randomSize) {\n                        var pxRatio = container.retina.pixelRatio;\n                        this.size.value = this.particlesOptions.size.animation.minimumValue * pxRatio;\n                    }\n                    break;\n            }\n            this.size.status = SizeAnimationStatus_1.SizeAnimationStatus.increasing;\n            this.size.velocity = ((_o = this.sizeAnimationSpeed) !== null && _o !== void 0 ? _o : container.retina.sizeAnimationSpeed) / 100;\n            if (!this.particlesOptions.size.animation.sync) {\n                this.size.velocity = this.size.velocity * Math.random();\n            }\n        }\n        if (this.particlesOptions.rotate.animation.enable) {\n            if (!this.particlesOptions.rotate.animation.sync) {\n                this.angle = Math.random() * 360;\n            }\n        }\n        this.position = this.calcPosition(this.container, position);\n        if (options.polygon.enable && options.polygon.type === PolygonMaskType_1.PolygonMaskType.inline) {\n            this.initialPosition = {\n                x: this.position.x,\n                y: this.position.y,\n            };\n        }\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        if (this.particlesOptions.collisions.enable) {\n            this.checkOverlap(position);\n        }\n        if (color instanceof Array) {\n            this.color = ColorUtils_1.ColorUtils.colorToRgb(Utils_1.Utils.itemFromArray(color));\n        }\n        else {\n            this.color = ColorUtils_1.ColorUtils.colorToRgb(color);\n        }\n        var randomOpacity = this.particlesOptions.opacity.random;\n        var opacityValue = this.particlesOptions.opacity.value;\n        this.opacity = {\n            value: randomOpacity.enable ? Utils_1.Utils.randomInRange(randomOpacity.minimumValue, opacityValue) : opacityValue,\n        };\n        if (this.particlesOptions.opacity.animation.enable) {\n            this.opacity.status = OpacityAnimationStatus_1.OpacityAnimationStatus.increasing;\n            this.opacity.velocity = this.particlesOptions.opacity.animation.speed / 100;\n            if (!this.particlesOptions.opacity.animation.sync) {\n                this.opacity.velocity *= Math.random();\n            }\n        }\n        this.initialVelocity = this.calculateVelocity();\n        this.velocity = {\n            horizontal: this.initialVelocity.horizontal,\n            vertical: this.initialVelocity.vertical,\n        };\n        var drawer = container.drawers[this.shape];\n        if (!drawer) {\n            drawer = Plugins_1.Plugins.getShapeDrawer(this.shape);\n            container.drawers[this.shape] = drawer;\n        }\n        if (this.shape === ShapeType_1.ShapeType.image || this.shape === ShapeType_1.ShapeType.images) {\n            var shape = this.particlesOptions.shape;\n            var imageDrawer = drawer;\n            var imagesOptions = shape.options[this.shape];\n            var images = imageDrawer.getImages(container).images;\n            var index = Utils_1.Utils.arrayRandomIndex(images);\n            var image_1 = images[index];\n            var optionsImage = (imagesOptions instanceof Array ?\n                imagesOptions.filter(function (t) { return t.src === image_1.source; })[0] :\n                imagesOptions);\n            this.image = {\n                data: image_1,\n                ratio: optionsImage.width / optionsImage.height,\n                replaceColor: (_p = optionsImage.replaceColor) !== null && _p !== void 0 ? _p : optionsImage.replace_color,\n                source: optionsImage.src,\n            };\n            if (!this.image.ratio) {\n                this.image.ratio = 1;\n            }\n            this.fill = (_q = optionsImage.fill) !== null && _q !== void 0 ? _q : this.fill;\n            this.close = (_r = optionsImage.close) !== null && _r !== void 0 ? _r : this.close;\n        }\n        this.stroke = this.particlesOptions.stroke instanceof Array ?\n            Utils_1.Utils.itemFromArray(this.particlesOptions.stroke) :\n            this.particlesOptions.stroke;\n        this.strokeColor = typeof this.stroke.color === \"string\" ?\n            ColorUtils_1.ColorUtils.stringToRgb(this.stroke.color) :\n            ColorUtils_1.ColorUtils.colorToRgb(this.stroke.color);\n        this.shadowColor = typeof this.particlesOptions.shadow.color === \"string\" ?\n            ColorUtils_1.ColorUtils.stringToRgb(this.particlesOptions.shadow.color) :\n            ColorUtils_1.ColorUtils.colorToRgb(this.particlesOptions.shadow.color);\n        this.updater = new Updater_1.Updater(this.container, this);\n    }\n    Particle.prototype.update = function (index, delta) {\n        this.links = [];\n        this.updater.update(delta);\n    };\n    Particle.prototype.draw = function (delta) {\n        this.container.canvas.drawParticle(this, delta);\n    };\n    Particle.prototype.isOverlapping = function () {\n        var container = this.container;\n        var p1 = this;\n        var collisionFound = false;\n        var iterations = 0;\n        var pos1 = p1.getPosition();\n        for (var _i = 0, _a = container.particles.array.filter(function (t) { return t != p1; }); _i < _a.length; _i++) {\n            var p2 = _a[_i];\n            iterations++;\n            var pos2 = p2.getPosition();\n            var dist = Utils_1.Utils.getDistance(pos1, pos2);\n            if (dist <= p1.size.value + p2.size.value) {\n                collisionFound = true;\n                break;\n            }\n        }\n        return {\n            collisionFound: collisionFound,\n            iterations: iterations,\n        };\n    };\n    Particle.prototype.checkOverlap = function (position) {\n        var container = this.container;\n        var p = this;\n        var overlapResult = p.isOverlapping();\n        if (overlapResult.iterations >= container.particles.count) {\n            container.particles.remove(this);\n        }\n        else if (overlapResult.collisionFound) {\n            p.position.x = position ? position.x : Math.random() * container.canvas.size.width;\n            p.position.y = position ? position.y : Math.random() * container.canvas.size.height;\n            p.checkOverlap();\n        }\n    };\n    Particle.prototype.startInfection = function (stage) {\n        var container = this.container;\n        var options = container.options;\n        var stages = options.infection.stages;\n        var stagesCount = stages.length;\n        if (stage > stagesCount || stage < 0) {\n            return;\n        }\n        this.infectionDelay = 0;\n        this.infectionDelayStage = stage;\n    };\n    Particle.prototype.updateInfectionStage = function (stage) {\n        var container = this.container;\n        var options = container.options;\n        var stagesCount = options.infection.stages.length;\n        if (stage > stagesCount || stage < 0 || (this.infectionStage !== undefined && this.infectionStage > stage)) {\n            return;\n        }\n        if (this.infectionTimeout !== undefined) {\n            window.clearTimeout(this.infectionTimeout);\n        }\n        this.infectionStage = stage;\n        this.infectionTime = 0;\n    };\n    Particle.prototype.updateInfection = function (delta) {\n        var container = this.container;\n        var options = container.options;\n        var infection = options.infection;\n        var stages = options.infection.stages;\n        var stagesCount = stages.length;\n        if (this.infectionDelay !== undefined && this.infectionDelayStage !== undefined) {\n            var stage = this.infectionDelayStage;\n            if (stage > stagesCount || stage < 0) {\n                return;\n            }\n            if (this.infectionDelay > infection.delay * 1000) {\n                this.infectionStage = stage;\n                this.infectionTime = 0;\n                delete this.infectionDelay;\n                delete this.infectionDelayStage;\n            }\n            else {\n                this.infectionDelay += delta;\n            }\n        }\n        else {\n            delete this.infectionDelay;\n            delete this.infectionDelayStage;\n        }\n        if (this.infectionStage !== undefined && this.infectionTime !== undefined) {\n            var infectionStage = stages[this.infectionStage];\n            if (infectionStage.duration !== undefined && infectionStage.duration >= 0) {\n                if (this.infectionTime > infectionStage.duration * 1000) {\n                    this.nextInfectionStage();\n                }\n                else {\n                    this.infectionTime += delta;\n                }\n            }\n            else {\n                this.infectionTime += delta;\n            }\n        }\n        else {\n            delete this.infectionStage;\n            delete this.infectionTime;\n        }\n    };\n    Particle.prototype.getPosition = function () {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n        };\n    };\n    Particle.prototype.destroy = function () {\n        this.destroyed = true;\n    };\n    Particle.prototype.nextInfectionStage = function () {\n        var container = this.container;\n        var options = container.options;\n        var stagesCount = options.infection.stages.length;\n        if (stagesCount <= 0 || this.infectionStage === undefined) {\n            return;\n        }\n        this.infectionTime = 0;\n        if (stagesCount <= ++this.infectionStage) {\n            if (options.infection.cure) {\n                delete this.infectionStage;\n                delete this.infectionTime;\n                return;\n            }\n            else {\n                this.infectionStage = 0;\n                this.infectionTime = 0;\n            }\n        }\n    };\n    Particle.prototype.calcPosition = function (container, position) {\n        for (var id in container.plugins) {\n            var plugin = container.plugins[id];\n            var pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position) : undefined;\n            if (pluginPos !== undefined) {\n                return pluginPos;\n            }\n        }\n        var pos = { x: 0, y: 0 };\n        pos.x = position ? position.x : Math.random() * container.canvas.size.width;\n        pos.y = position ? position.y : Math.random() * container.canvas.size.height;\n        if (pos.x > container.canvas.size.width - this.size.value * 2) {\n            pos.x -= this.size.value;\n        }\n        else if (pos.x < this.size.value * 2) {\n            pos.x += this.size.value;\n        }\n        if (pos.y > container.canvas.size.height - this.size.value * 2) {\n            pos.y -= this.size.value;\n        }\n        else if (pos.y < this.size.value * 2) {\n            pos.y += this.size.value;\n        }\n        return pos;\n    };\n    Particle.prototype.calculateVelocity = function () {\n        var baseVelocity = Utils_1.Utils.getParticleBaseVelocity(this);\n        var res = {\n            horizontal: 0,\n            vertical: 0,\n        };\n        if (this.particlesOptions.move.straight) {\n            res.horizontal = baseVelocity.x;\n            res.vertical = baseVelocity.y;\n            if (this.particlesOptions.move.random) {\n                res.horizontal *= Math.random();\n                res.vertical *= Math.random();\n            }\n        }\n        else {\n            res.horizontal = baseVelocity.x + Math.random() - 0.5;\n            res.vertical = baseVelocity.y + Math.random() - 0.5;\n        }\n        return res;\n    };\n    return Particle;\n}());\nexports.Particle = Particle;\n"]},"metadata":{},"sourceType":"script"}